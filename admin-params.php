<?php/**------------------------------------------------------------------------PAGE - ADMIN - ParamètresCopyright (C) 2018 Intersedhttp://www.intersed.fr/------------------------------------------------------------------------@author    Cédric Bouillon@copyright Copyright (c) 2018 Intersed@version   1.0@since     2018------------------------------------------------------------------------ */require_once 'scripts/php/config.php';require_once 'scripts/php/check_admin.php';$h1     = 'Paramètres';$h1fa   = 'fa-fw fa-cogs';$logManager = new LogManager($cnx);// Si mise à jour d'un champ de configif (isset($_REQUEST['gope'])) {    // Formatage des valeurs postées et valeurs par défaut    $clt_defaut             = isset($_REQUEST['clt_defaut'])            ? intval($_REQUEST['clt_defaut'])           : 0;    $numagr                 = isset($_REQUEST['numagr'])                ? trim($_REQUEST['numagr'])                 : '';    $poids_defaut           = isset($_REQUEST['poids_defaut'])          ? intval($_REQUEST['poids_defaut'])         : '';    $tmp_cgl_min            = isset($_REQUEST['tmp_cgl_min'])           ? floatval($_REQUEST['tmp_cgl_min'])        : 0.0;    $tmp_cgl_max            = isset($_REQUEST['tmp_cgl_max'])           ? floatval($_REQUEST['tmp_cgl_max'])        : 0.0;	$tmp_srg_min            = isset($_REQUEST['tmp_srg_min'])           ? floatval($_REQUEST['tmp_srg_min'])        : 0.0;	$tmp_srg_max            = isset($_REQUEST['tmp_srg_max'])           ? floatval($_REQUEST['tmp_srg_max'])        : 0.0;	$duree_srgh_max         = isset($_REQUEST['duree_srgh_max'])        ? intval($_REQUEST['duree_srgh_max'])       : 0;	$duree_srgv_max         = isset($_REQUEST['duree_srgv_max'])        ? intval($_REQUEST['duree_srgv_max'])       : 0;	$duree_cgl_max          = isset($_REQUEST['duree_cgl_max'])         ? intval($_REQUEST['duree_cgl_max'])        : 0;	$tmp_rcp_via_min        = isset($_REQUEST['tmp_rcp_via_min'])       ? intval($_REQUEST['tmp_rcp_via_min'])      : 0;	$tmp_rcp_via_max        = isset($_REQUEST['tmp_rcp_via_max'])       ? intval($_REQUEST['tmp_rcp_via_max'])      : 0;	$tmp_rcp_via_tol        = isset($_REQUEST['tmp_rcp_via_tol'])       ? intval($_REQUEST['tmp_rcp_via_tol'])      : 0;	$tmp_rcp_car_min        = isset($_REQUEST['tmp_rcp_car_min'])       ? intval($_REQUEST['tmp_rcp_car_min'])      : 0;	$tmp_rcp_car_max        = isset($_REQUEST['tmp_rcp_car_max'])       ? intval($_REQUEST['tmp_rcp_car_max'])      : 0;	$tmp_rcp_car_tol        = isset($_REQUEST['tmp_rcp_car_tol'])       ? intval($_REQUEST['tmp_rcp_car_tol'])      : 0;	$tmp_rcp_aba_min        = isset($_REQUEST['tmp_rcp_aba_min'])       ? intval($_REQUEST['tmp_rcp_aba_min'])      : 0;	$tmp_rcp_aba_max        = isset($_REQUEST['tmp_rcp_aba_max'])       ? intval($_REQUEST['tmp_rcp_aba_max'])      : 0;	$tmp_rcp_aba_tol        = isset($_REQUEST['tmp_rcp_aba_tol'])       ? intval($_REQUEST['tmp_rcp_aba_tol'])      : 0;	$cgl_consignes_debut    = isset($_REQUEST['cgl_consignes_debut'])   ? nl2br($_REQUEST['cgl_consignes_debut'])   : '';	$srgh_consignes_debut   = isset($_REQUEST['srgh_consignes_debut'])  ? nl2br($_REQUEST['srgh_consignes_debut'])  : '';	$srgv_consignes_debut   = isset($_REQUEST['srgv_consignes_debut'])  ? nl2br($_REQUEST['srgv_consignes_debut'])  : '';	$bizerba_actif          = isset($_REQUEST['biz_actif'])             ? intval($_REQUEST['biz_actif'])            : -1;    // Récupération des valeurs enregistées    $config_clt_defaut              = $configManager->getConfig('clt_defaut');    $config_numagr                  = $configManager->getConfig('numagr');	$config_poids_defaut            = $configManager->getConfig('poids_defaut');	$config_tmp_cgl_min             = $configManager->getConfig('tmp_cgl_min');	$config_tmp_cgl_max             = $configManager->getConfig('tmp_cgl_max');	$config_tmp_srg_min             = $configManager->getConfig('tmp_srg_min');	$config_tmp_srg_max             = $configManager->getConfig('tmp_srg_max');	$config_duree_srgh_max          = $configManager->getConfig('duree_srgh_max');	$config_duree_srgv_max          = $configManager->getConfig('duree_srgv_max');	$config_duree_cgl_max           = $configManager->getConfig('duree_cgl_max');	$config_tmp_rcp_via_min         = $configManager->getConfig('tmp_rcp_via_min');	$config_tmp_rcp_via_max         = $configManager->getConfig('tmp_rcp_via_max');	$config_tmp_rcp_via_tol         = $configManager->getConfig('tmp_rcp_via_tol');	$config_tmp_rcp_car_min         = $configManager->getConfig('tmp_rcp_car_min');	$config_tmp_rcp_car_max         = $configManager->getConfig('tmp_rcp_car_max');	$config_tmp_rcp_car_tol         = $configManager->getConfig('tmp_rcp_car_tol');	$config_tmp_rcp_aba_min         = $configManager->getConfig('tmp_rcp_aba_min');	$config_tmp_rcp_aba_max         = $configManager->getConfig('tmp_rcp_aba_max');	$config_tmp_rcp_aba_tol         = $configManager->getConfig('tmp_rcp_aba_tol');	$config_cgl_consignes_debut     = $configManager->getConfig('cgl_consignes_debut');	$config_srgh_consignes_debut    = $configManager->getConfig('srgh_consignes_debut');	$config_srgv_consignes_debut    = $configManager->getConfig('srgv_consignes_debut');	$config_bizerba_actif           = $configManager->getConfig('biz_actif');	// Client par défaut	if (!$config_clt_defaut || $config_clt_defaut->getValeur() != $clt_defaut) {		// Si pas configuré encore...		if (!$config_clt_defaut instanceof Config) {			$config_clt_defaut = new Config([]);			$config_clt_defaut->setClef('clt_defaut');			$config_clt_defaut->setDescription("ID du client par défaut pour gestion des palettes");		} // Fin première configuration		$config_clt_defaut->setValeur($clt_defaut);		$config_clt_defaut->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_clt_defaut)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour du client par défaut");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour du client par défaut");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	} // FIN changement du client par défaut	// Poids d'un produit par défaut	if (!$config_poids_defaut || $config_poids_defaut->getValeur() != $poids_defaut) {		// Si pas configuré encore...		if (!$config_poids_defaut instanceof Config) {			$config_poids_defaut = new Config([]);    		$config_poids_defaut->setClef('poids_defaut');			$config_poids_defaut->setDescription("Poids par défaut des produits");		} // Fin première configuration		$config_poids_defaut->setValeur($poids_defaut);		$config_poids_defaut->setDate_maj(date('Y-m-d H:i:s'));		// Log    	$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_poids_defaut)) {    		$log->setLog_type('info');			$log->setLog_texte("Mise à jour du poids par défaut des produits à " . $poids_defaut . " Kgs");			$maj = true;        // Echec de la mise à jour	    } else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour du poids par défaut des produits");			$maj = false;    	} // FIN test mise à jour réussie		$logManager->saveLog($log);	} // FIN changement du poids colis congélation    // Température congélation minimum    if (!$config_tmp_cgl_min || $config_tmp_cgl_min->getValeur() != $tmp_cgl_min) {	    // Si pas configuré encore...		if (!$config_tmp_cgl_min instanceof Config) {			$config_tmp_cgl_min = new Config([]);			$config_tmp_cgl_min->setClef('tmp_cgl_min');			$config_tmp_cgl_min->setDescription("Température minimum de congélation (alerte sortie)");		} // Fin première configuration		$config_tmp_cgl_min->setValeur($tmp_cgl_min);		$config_tmp_cgl_min->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_tmp_cgl_min)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la température minimum de congélation à " . $tmp_cgl_min . " °C");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la température minimum de congélation");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);    }    // FIN chamgement de la température de congélation maximum	// Température congélation maximum	if (!$config_tmp_cgl_max || $config_tmp_cgl_max->getValeur() != $tmp_cgl_max) {		// Si pas configuré encore...		if (!$config_tmp_cgl_max instanceof Config) {			$config_tmp_cgl_max = new Config([]);			$config_tmp_cgl_max->setClef('tmp_cgl_max');			$config_tmp_cgl_max->setDescription("Température maximum de congélation (alerte sortie)");		} // Fin première configuration		$config_tmp_cgl_max->setValeur($tmp_cgl_max);		$config_tmp_cgl_max->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_tmp_cgl_max)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la température maximum de congélation à " . $tmp_cgl_max . " °C");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la température maximum de congélation");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement de la température de congélation maximum	// Température surgélation minimum	if (!$config_tmp_srg_min || $config_tmp_srg_min->getValeur() != $tmp_srg_min) {		// Si pas configuré encore...		if (!$config_tmp_srg_min instanceof Config) {			$config_tmp_srg_min = new Config([]);			$config_tmp_srg_min->setClef('tmp_srg_min');			$config_tmp_srg_min->setDescription("Température minimum de surgélation (alerte sortie)");		} // Fin première configuration		$config_tmp_srg_min->setValeur($tmp_srg_min);		$config_tmp_srg_min->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_tmp_srg_min)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la température minimum de surgélation à " . $tmp_srg_min . " °C");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la température minimum de surgélation");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement de la température de surgélation maximum	// Température surgélation maximum	if (!$config_tmp_srg_max || $config_tmp_srg_max->getValeur() != $tmp_srg_max) {		// Si pas configuré encore...		if (!$config_tmp_srg_max instanceof Config) {			$config_tmp_srg_max = new Config([]);			$config_tmp_srg_max->setClef('tmp_srg_max');			$config_tmp_srg_max->setDescription("Température maximum de surgélation (alerte sortie)");		} // Fin première configuration		$config_tmp_srg_max->setValeur($tmp_srg_max);		$config_tmp_srg_max->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_tmp_srg_max)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la température maximum de surgélation à " . $tmp_srg_max . " °C");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la température maximum de surgélation");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement de la température de surgélation maximum	// Durée surgélation horizontale maximum	if (!$config_duree_srgh_max || $config_duree_srgh_max->getValeur() != $duree_srgh_max) {		// Si pas configuré encore...		if (!$config_duree_srgh_max instanceof Config) {			$config_duree_srgh_max = new Config([]);			$config_duree_srgh_max->setClef('duree_srgh_max');			$config_duree_srgh_max->setDescription("Durée maximale de surgélation horizontale avant alerte");		} // Fin première configuration		$config_duree_srgh_max->setValeur($duree_srgh_max);		$config_duree_srgh_max->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_duree_srgh_max)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la durée maximale de surgélation horizontale à " . $duree_srgh_max . " H");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la durée maximale de surgélation horizontale");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement de la température de surgélation horizontale maximum	// Durée surgélation verticale maximum	if (!$config_duree_srgv_max || $config_duree_srgv_max->getValeur() != $duree_srgv_max) {		// Si pas configuré encore...		if (!$config_duree_srgv_max instanceof Config) {			$config_duree_srgv_max = new Config([]);			$config_duree_srgv_max->setClef('duree_srgv_max');			$config_duree_srgv_max->setDescription("Durée maximale de surgélation verticale avant alerte");		} // Fin première configuration		$config_duree_srgv_max->setValeur($duree_srgv_max);		$config_duree_srgv_max->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_duree_srgv_max)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la durée maximale de surgélation verticale à " . $duree_srgv_max . " H");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la durée maximale de surgélation verticale");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement de la température de surgélation verticale maximum	// Durée congélation maximum	if (!$config_duree_cgl_max || $config_duree_cgl_max->getValeur() != $duree_cgl_max) {		// Si pas configuré encore...		if (!$config_duree_cgl_max instanceof Config) {			$config_duree_cgl_max = new Config([]);			$config_duree_cgl_max->setClef('duree_cgl_max');			$config_duree_cgl_max->setDescription("Durée maximale de congélation avant alerte");		} // Fin première configuration		$config_duree_cgl_max->setValeur($duree_cgl_max);		$config_duree_cgl_max->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_duree_cgl_max)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la durée maximale de congélation à " . $duree_cgl_max . " H");			$maj = true;			// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la durée maximale de congélation");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement de la température de congélation maximum	/**	 * Viande sous vide	 */	// Réception : viande sous vide - min	if (!$config_tmp_rcp_via_min || $config_tmp_rcp_via_min->getValeur() != $tmp_rcp_via_min) {		// Si pas configuré encore...		if (!$config_tmp_rcp_via_min instanceof Config) {			$config_tmp_rcp_via_min = new Config([]);			$config_tmp_rcp_via_min->setClef('tmp_rcp_via_min');			$config_tmp_rcp_via_min->setDescription("Température de réception minimale pour viande sous vide");		} // Fin première configuration		$config_tmp_rcp_via_min->setValeur($tmp_rcp_via_min);		$config_tmp_rcp_via_min->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_tmp_rcp_via_min)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la température de réception minimale pour viande sous vide à " . $tmp_rcp_via_min . " &deg;C");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la température de réception minimale pour viande sous vide");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement	// Réception : viande sous vide - max	if (!$config_tmp_rcp_via_max || $config_tmp_rcp_via_max->getValeur() != $tmp_rcp_via_max) {		// Si pas configuré encore...		if (!$config_tmp_rcp_via_max instanceof Config) {			$config_tmp_rcp_via_max = new Config([]);			$config_tmp_rcp_via_max->setClef('tmp_rcp_via_max');			$config_tmp_rcp_via_max->setDescription("Température de réception maximale pour viande sous vide");		} // Fin première configuration		$config_tmp_rcp_via_max->setValeur($tmp_rcp_via_max);		$config_tmp_rcp_via_max->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_tmp_rcp_via_max)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la température de réception maximale pour viande sous vide à " . $tmp_rcp_via_max . " &deg;C");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la température de réception maximale pour viande sous vide");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement	// Réception : viande sous vide - tolérance	if (!$config_tmp_rcp_via_tol || $config_tmp_rcp_via_tol->getValeur() != $tmp_rcp_via_tol) {		// Si pas configuré encore...		if (!$config_tmp_rcp_via_tol instanceof Config) {			$config_tmp_rcp_via_tol = new Config([]);			$config_tmp_rcp_via_tol->setClef('tmp_rcp_via_tol');			$config_tmp_rcp_via_tol->setDescription("Température de réception tolérée pour viande sous vide");		} // Fin première configuration		$config_tmp_rcp_via_tol->setValeur($tmp_rcp_via_tol);		$config_tmp_rcp_via_tol->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_tmp_rcp_via_tol)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la température de réception tolérée pour viande sous vide à " . $tmp_rcp_via_tol . " &deg;C");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la température de réception tolérée pour viande sous vide");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement    /**     *  Carcasses     */	// Réception : carcasses - min	if (!$config_tmp_rcp_car_min || $config_tmp_rcp_car_min->getValeur() != $tmp_rcp_car_min) {		// Si pas configuré encore...		if (!$config_tmp_rcp_car_min instanceof Config) {			$config_tmp_rcp_car_min = new Config([]);			$config_tmp_rcp_car_min->setClef('tmp_rcp_car_min');			$config_tmp_rcp_car_min->setDescription("Température de réception minimale pour carcasses");		} // Fin première configuration		$config_tmp_rcp_car_min->setValeur($tmp_rcp_car_min);		$config_tmp_rcp_car_min->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_tmp_rcp_car_min)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la température de réception minimale pour carcasses à " . $tmp_rcp_car_min . " &deg;C");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la température de réception minimale pour carcasses");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement	// Réception : carcasses - max	if (!$config_tmp_rcp_car_max || $config_tmp_rcp_car_max->getValeur() != $tmp_rcp_car_max) {		// Si pas configuré encore...		if (!$config_tmp_rcp_car_max instanceof Config) {			$config_tmp_rcp_car_max = new Config([]);			$config_tmp_rcp_car_max->setClef('tmp_rcp_car_max');			$config_tmp_rcp_car_max->setDescription("Température de réception maximale pour carcasses");		} // Fin première configuration		$config_tmp_rcp_car_max->setValeur($tmp_rcp_car_max);		$config_tmp_rcp_car_max->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_tmp_rcp_car_max)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la température de réception maximale pour carcasses à " . $tmp_rcp_car_max . " &deg;C");			$maj = true;			// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la température de réception maximale pour carcasses");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement	// Réception : carcasses - tolérance	if (!$config_tmp_rcp_car_tol || $config_tmp_rcp_car_tol->getValeur() != $tmp_rcp_car_tol) {		// Si pas configuré encore...		if (!$config_tmp_rcp_car_tol instanceof Config) {			$config_tmp_rcp_car_tol = new Config([]);			$config_tmp_rcp_car_tol->setClef('tmp_rcp_car_tol');			$config_tmp_rcp_car_tol->setDescription("Température de réception tolérée pour carcasses");		} // Fin première configuration		$config_tmp_rcp_car_tol->setValeur($tmp_rcp_car_tol);		$config_tmp_rcp_car_tol->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_tmp_rcp_car_tol)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la température de réception tolérée pour carcasses à " . $tmp_rcp_car_tol . " &deg;C");			$maj = true;			// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la température de réception tolérée pour carcasses");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement	/**	 *  Abats	 */	// Réception : abats - min	if (!$config_tmp_rcp_aba_min || $config_tmp_rcp_aba_min->getValeur() != $tmp_rcp_aba_min) {		// Si pas configuré encore...		if (!$config_tmp_rcp_aba_min instanceof Config) {			$config_tmp_rcp_aba_min = new Config([]);			$config_tmp_rcp_aba_min->setClef('tmp_rcp_aba_min');			$config_tmp_rcp_aba_min->setDescription("Température de réception minimale pour abats");		} // Fin première configuration		$config_tmp_rcp_aba_min->setValeur($tmp_rcp_aba_min);		$config_tmp_rcp_aba_min->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_tmp_rcp_aba_min)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la température de réception minimale pour abats à " . $tmp_rcp_aba_min . " &deg;C");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la température de réception minimale pour abats");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement	// Réception : abats - max	if (!$config_tmp_rcp_aba_max || $config_tmp_rcp_aba_max->getValeur() != $tmp_rcp_aba_max) {		// Si pas configuré encore...		if (!$config_tmp_rcp_aba_max instanceof Config) {			$config_tmp_rcp_aba_max = new Config([]);			$config_tmp_rcp_aba_max->setClef('tmp_rcp_aba_max');			$config_tmp_rcp_aba_max->setDescription("Température de réception maximale pour abats");		} // Fin première configuration		$config_tmp_rcp_aba_max->setValeur($tmp_rcp_aba_max);		$config_tmp_rcp_aba_max->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_tmp_rcp_aba_max)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la température de réception maximale pour abats à " . $tmp_rcp_aba_max . " &deg;C");			$maj = true;			// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la température de réception maximale pour carcasses");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement	// Réception : abats - tolérance	if (!$config_tmp_rcp_aba_tol || $config_tmp_rcp_aba_tol->getValeur() != $tmp_rcp_aba_tol) {		// Si pas configuré encore...		if (!$config_tmp_rcp_aba_tol instanceof Config) {			$config_tmp_rcp_aba_tol = new Config([]);			$config_tmp_rcp_aba_tol->setClef('tmp_rcp_aba_tol');			$config_tmp_rcp_aba_tol->setDescription("Température de réception tolérée pour abats");		} // Fin première configuration		$config_tmp_rcp_aba_tol->setValeur($tmp_rcp_aba_tol);		$config_tmp_rcp_aba_tol->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_tmp_rcp_aba_tol)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour de la température de réception tolérée pour abats à " . $tmp_rcp_aba_tol . " &deg;C");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour de la température de réception tolérée pour abats");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement	// Consignes début CGL	if (!$config_cgl_consignes_debut || $config_cgl_consignes_debut->getValeur() != $cgl_consignes_debut) {		// Si pas configuré encore...		if (!$config_cgl_consignes_debut instanceof Config) {			$config_cgl_consignes_debut = new Config([]);			$config_cgl_consignes_debut->setClef('cgl_consignes_debut');			$config_cgl_consignes_debut->setDescription("Consignes en début de congélation");		} // Fin première configuration		$config_cgl_consignes_debut->setValeur($cgl_consignes_debut);		$config_cgl_consignes_debut->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_cgl_consignes_debut)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour des consignes en début de congélation");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour des consignes en début de congélation");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement	// Consignes début SRG H	if (!$config_srgh_consignes_debut || $config_srgh_consignes_debut->getValeur() != $srgh_consignes_debut) {		// Si pas configuré encore...		if (!$config_srgh_consignes_debut instanceof Config) {			$config_srgh_consignes_debut = new Config([]);			$config_srgh_consignes_debut->setClef('srgh_consignes_debut');			$config_srgh_consignes_debut->setDescription("Consignes en début de surgélation horizontale");		} // Fin première configuration		$config_srgh_consignes_debut->setValeur($srgh_consignes_debut);		$config_srgh_consignes_debut->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_srgh_consignes_debut)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour des consignes en début de surgélation horizontale");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour des consignes en début de surgélation horizontale");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	}	// FIN chamgement	// Consignes début SRG V	if (!$config_srgv_consignes_debut || $config_srgv_consignes_debut->getValeur() != $srgv_consignes_debut) {		// Si pas configuré encore...		if (!$config_srgv_consignes_debut instanceof Config) {			$config_srgv_consignes_debut = new Config([]);			$config_srgv_consignes_debut->setClef('srgv_consignes_debut');			$config_srgv_consignes_debut->setDescription("Consignes en début de surgélation verticale");		} // Fin première configuration		$config_srgv_consignes_debut->setValeur($srgv_consignes_debut);		$config_srgv_consignes_debut->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		if ($configManager->saveConfig($config_srgv_consignes_debut)) {			$log->setLog_type('info');			$log->setLog_texte("Mise à jour des consignes en début de surgélation verticale");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la mise à jour des consignes en début de surgélation verticale");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	} // FIN chamgement    // Activation BIZERBA (Envoi des fichers vers BizTrack)	if (!$config_bizerba_actif || $config_bizerba_actif->getValeur() != $bizerba_actif) {		// Si pas configuré encore...		if (!$config_bizerba_actif instanceof Config) {			$config_bizerba_actif = new Config([]);			$config_bizerba_actif->setClef('biz_actif');			$config_bizerba_actif->setDescription("Envoi des fichers vers BizTrack");		} // Fin première configuration		$config_bizerba_actif->setValeur($bizerba_actif);		$config_bizerba_actif->setDate_maj(date('Y-m-d H:i:s'));		// Log		$log = new Log([]);		$log->setLog_user_id($utilisateur->getId());		$logTexte = $bizerba_actif == 1 ? 'Activation' : 'Désactivation';		if ($configManager->saveConfig($config_bizerba_actif)) {			$log->setLog_type('info');			$log->setLog_texte($logTexte. " de l'envoi des fichers vers BizTrack");			$maj = true;		// Echec de la mise à jour		} else {			$log->setLog_type('danger');			$log->setLog_texte("ECHEC de la ".strtolower($logTexte)." de l'envoi des fichers vers BizTrack");			$maj = false;		} // FIN test mise à jour réussie		$logManager->saveLog($log);	} // FIN changement} // FIN test formulaire posté// HEADERinclude('includes/header.php');// Retour visuel de la mise à jourif (isset($maj) && $maj == true) { ?>    <div class="alert alert-success" style="margin-top:-8px;">        <i class="fa fa-check-circle mr-1"></i>Informations mises à jour.   </div><?php} else if (isset($maj) && $maj == false) { ?>    <div class="alert alert-danger" style="margin-top:-8px;">        <i class="fa fa-exclamation-circle mr-1"></i>Une erreur est survenue, mise à jour des données impossibles ! Code erreur : Z302RWD3    </div>	<?php} // FIN test retour sur MAJ?><form id="formPeConfig" action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">    <div class="container-fluid">        <div class="row justify-content-md-center">            <div class="col-6">                <div class="alert alert-secondary">                    <div class="row">                        <div class="col text-center mb-2">                            <span class="badge badge-dark text-20 w-100"><i class="fa fa-wrench mr-2"></i> Configuration générale</span>                        </div>                    </div>                    <div class="form-group row">                        <div class="col-12 col-md-5 padding-top-10">                            Client par défaut (<i>gestion des palettes</i>) :                        </div>                        <div class="col-12 col-md-7">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text"><i class="fa fa-address-card fa-fw fa-lg"></i></span>                                </div>                                <select class="form-control selectpicker show-tick" name="clt_defaut" data-live-search="true" data-live-search-placeholder="Rechercher">                                    <?php                                    $tiersManager = new TiersManager($cnx);                                    $listeClients = $tiersManager->getListeClients([]);                                    $config_clt_defaut = $configManager->getConfig('clt_defaut');                                    $clt_defaut = $config_clt_defaut instanceof Config ? $config_clt_defaut->getValeur() : 0;                                    if (is_array($listeClients)) {                                        foreach ($listeClients as $clt) { ?>                                            <option value="<?php echo $clt->getId();?>" <?php  echo $clt->getId() == $clt_defaut ? 'selected' : ''; ?>><?php echo $clt->getNom();?></option>                                        <?php }                                    }                                    ?>                                </select>                            </div>                        </div>                    </div>                    <div class="form-group row">                        <div class="col-12 col-md-6 col-lg-5 padding-top-10">                            Poids par défaut des produits :                        </div>                        <div class="col-12 col-md-6 col-lg-7">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text"><i class="fa fa-weight fa-fw fa-lg"></i></span>                                </div>                                <input type="text" class="form-control text-center" placeholder="Non reseigné" name="poids_defaut" value="<?php                                $poids_def_obj = $configManager->getConfig('poids_defaut');                                echo $poids_def_obj instanceof Config ? $poids_def_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">Kg.</span>                                </div>                            </div>                        </div>                    </div>                    <div class="row">                        <div class="col text-center mb-2 mt-3">                            <span class="badge badge-secondary text-20 w-100"><i class="fa fa-truck mr-2"></i> Réception</span>                        </div>                    </div>                    <!-- Viande sous vide -->                    <div class="form-group row row-config-rcp">                        <div class="col-3 padding-top-10">                            T° Viande sous vide                        </div>                        <div class="col-3">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text text-14">Min</span>                                </div>                                <input type="text" class="form-control text-center" placeholder="N/A" name="tmp_rcp_via_min" value="<?php                                $tmp_rcp_via_min_obj = $configManager->getConfig('tmp_rcp_via_min');                                echo $tmp_rcp_via_min_obj instanceof Config ? $tmp_rcp_via_min_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">°C</span>                                </div>                            </div>                        </div>                        <div class="col-3">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text text-14">Max</span>                                </div>                                <input type="text" class="form-control text-center" placeholder="N/A" name="tmp_rcp_via_max" value="<?php                                $tmp_rcp_via_max_obj = $configManager->getConfig('tmp_rcp_via_max');                                echo $tmp_rcp_via_max_obj instanceof Config ? $tmp_rcp_via_max_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">°C</span>                                </div>                            </div>                        </div>                        <div class="col-3">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text text-14">Tol<span class="cbo-responsive-masquespan">érance</span></span>                                </div>                                <input type="text" class="form-control text-center" placeholder="N/A" name="tmp_rcp_via_tol" value="<?php                                $tmp_rcp_via_tol_obj = $configManager->getConfig('tmp_rcp_via_tol');                                echo $tmp_rcp_via_tol_obj instanceof Config ? $tmp_rcp_via_tol_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">°C</span>                                </div>                            </div>                        </div>                    </div> <!-- FIN Viande sous vide -->                    <!-- Carcasses  -->                    <div class="form-group row row-config-rcp">                        <div class="col-3 padding-top-10">                            T° Carcasses                        </div>                        <div class="col-3">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text text-14">Min</span>                                </div>                                <input type="text" class="form-control text-center" placeholder="N/A" name="tmp_rcp_car_min" value="<?php                                $tmp_rcp_car_min_obj = $configManager->getConfig('tmp_rcp_car_min');                                echo $tmp_rcp_car_min_obj instanceof Config ? $tmp_rcp_car_min_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">°C</span>                                </div>                            </div>                        </div>                        <div class="col-3">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text text-14">Max</span>                                </div>                                <input type="text" class="form-control text-center" placeholder="N/A" name="tmp_rcp_car_max" value="<?php                                $tmp_rcp_car_max_obj = $configManager->getConfig('tmp_rcp_car_max');                                echo $tmp_rcp_car_max_obj instanceof Config ? $tmp_rcp_car_max_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">°C</span>                                </div>                            </div>                        </div>                        <div class="col-3">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text text-14">Tol<span class="cbo-responsive-masquespan">érance</span></span>                                </div>                                <input type="text" class="form-control text-center" placeholder="N/A" name="tmp_rcp_car_tol" value="<?php                                $tmp_rcp_car_tol_obj = $configManager->getConfig('tmp_rcp_car_tol');                                echo $tmp_rcp_car_tol_obj instanceof Config ? $tmp_rcp_car_tol_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">°C</span>                                </div>                            </div>                        </div>                    </div> <!-- FIN Carcasses -->                    <!-- Abats   -->                    <div class="form-group row row-config-rcp">                        <div class="col-3 padding-top-10">                            T° Abats                        </div>                        <div class="col-3">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text text-14">Min</span>                                </div>                                <input type="text" class="form-control text-center" placeholder="N/A" name="tmp_rcp_aba_min" value="<?php                                $tmp_rcp_aba_min_obj = $configManager->getConfig('tmp_rcp_aba_min');                                echo $tmp_rcp_aba_min_obj instanceof Config ? $tmp_rcp_aba_min_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">°C</span>                                </div>                            </div>                        </div>                        <div class="col-3">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text text-14">Max</span>                                </div>                                <input type="text" class="form-control text-center" placeholder="N/A" name="tmp_rcp_aba_max" value="<?php                                $tmp_rcp_aba_max_obj = $configManager->getConfig('tmp_rcp_aba_max');                                echo $tmp_rcp_aba_max_obj instanceof Config ? $tmp_rcp_aba_max_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">°C</span>                                </div>                            </div>                        </div>                        <div class="col-3">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text text-14">Tol<span class="cbo-responsive-masquespan">érance</span></span>                                </div>                                <input type="text" class="form-control text-center" placeholder="N/A" name="tmp_rcp_aba_tol" value="<?php                                $tmp_rcp_aba_tol_obj = $configManager->getConfig('tmp_rcp_aba_tol');                                echo $tmp_rcp_aba_tol_obj instanceof Config ? $tmp_rcp_aba_tol_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">°C</span>                                </div>                            </div>                        </div>                    </div> <!-- FIN Abats  -->                    <div class="row">                        <div class="col text-center mb-2 mt-3">                            <span class="badge badge-primary text-20 w-100"><i class="fa fa-clock mr-2"></i> Temps de traitement</span>                        </div>                    </div>                    <div class="form-group row row-config-temps">                        <div class="col-12 col-md-6 col-lg-8 padding-top-10">                            Durée théorique de congélation :                        </div>                        <div class="col-12 col-md-6 col-lg-4">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text"><i class="fa fa-snowflake fa-fw"></i></span>                                </div>                                <input type="text" class="form-control text-center" placeholder="N/A" name="duree_cgl_max" value="<?php                                $duree_cgl_max_obj = $configManager->getConfig('duree_cgl_max');                                echo $duree_cgl_max_obj instanceof Config ? $duree_cgl_max_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">Heures</span>                                </div>                            </div>                        </div>                    </div>                    <div class="form-group row row-config-temps">                        <div class="col-12 col-md-6 col-lg-8 padding-top-10">                            Durée maximale en surgélation horizontale avant alerte, hors cycles de nuit :                        </div>                        <div class="col-12 col-md-6 col-lg-4">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text"><i class="fa fa-ruler-horizontal fa-fw"></i></span>                                </div>                                <input type="text" class="form-control text-center" placeholder="N/A" name="duree_srgh_max" value="<?php                                $duree_srgh_max_obj = $configManager->getConfig('duree_srgh_max');                                echo $duree_srgh_max_obj instanceof Config ? $duree_srgh_max_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">Heures</span>                                </div>                            </div>                        </div>                    </div>                    <div class="form-group row row-config-temps">                        <div class="col-12 col-md-6 col-lg-8 padding-top-10">                            Durée maximale en surgélation verticale avant alerte, hors cycles de nuit                        </div>                        <div class="col-12 col-md-6 col-lg-4">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text"><i class="fa fa-ruler-vertical fa-fw"></i></span>                                </div>                                <input type="text" class="form-control text-center" placeholder="N/A" name="duree_srgv_max" value="<?php                                $duree_srgv_max_obj = $configManager->getConfig('duree_srgv_max');                                echo $duree_srgv_max_obj instanceof Config ? $duree_srgv_max_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">Heures</span>                                </div>                            </div>                        </div>                    </div>                </div>            </div>            <div class="col-6">                <div class="alert alert-secondary">                    <div class="row">                       <div class="col text-center mb-2">                            <span class="badge badge-info text-20 w-100"><i class="fas fa-snowflake mr-2"></i> Congélation</span>                        </div>                   </div>                    <div class="form-group row">                        <div class="col-12 col-md-6 col-lg-3 padding-top-10">                            T° de sortie <span class="text-12">(seuil inférieur)</span> :                        </div>                        <div class="col-12 col-md-6 col-lg-3">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text"><i class="fa fa-thermometer-quarter fa-lg"></i></span>                                </div>                                <input type="text" class="form-control text-center" placeholder="Non reseigné" name="tmp_cgl_min" value="<?php                                $tmp_cgl_min_obj = $configManager->getConfig('tmp_cgl_min');                                echo $tmp_cgl_min_obj instanceof Config ? $tmp_cgl_min_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">°C</span>                                </div>                            </div>                        </div>                        <div class="col-12 col-md-6 col-lg-3 padding-top-10">                            T° de sortie <span class="text-12">(seuil supérieur)</span> :                        </div>                        <div class="col-12 col-md-6 col-lg-3">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text"><i class="fa fa-thermometer-three-quarters fa-lg"></i></span>                                </div>                                <input type="text" class="form-control text-center" placeholder="Non reseigné" name="tmp_cgl_max" value="<?php                                $tmp_cgl_max_obj = $configManager->getConfig('tmp_cgl_max');                                echo $tmp_cgl_max_obj instanceof Config ? $tmp_cgl_max_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">°C</span>                                </div>                            </div>                        </div>                    </div>                    <div class="form-group row">                        <div class="col-12 col-md-6 col-lg-3 padding-top-10">                            Consignes avant congélation :                        </div>                        <div class="col-12 col-md-6 col-lg-9">                           <textarea class="form-control text-14" name="cgl_consignes_debut"><?php                               $cgl_consignes_debut_obj = $configManager->getConfig('cgl_consignes_debut');                               echo $cgl_consignes_debut_obj instanceof Config ? strip_tags($cgl_consignes_debut_obj->getValeur()) : '';                               ?></textarea>                        </div>                    </div>                    <div class="row">                        <div class="col text-center mb-2 mt-3">                            <span class="badge badge-primary text-20 w-100"><i class="far fa-snowflake mr-2"></i> Surgélations</span>                        </div>                    </div>                    <div class="form-group row">                        <div class="col-12 col-md-6 col-lg-3 padding-top-10">                            T° de sortie <span class="text-12">(seuil inférieur)</span> :                        </div>                        <div class="col-12 col-md-6 col-lg-3">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text"><i class="fa fa-thermometer-quarter fa-lg"></i></span>                                </div>                                <input type="text" class="form-control text-center" placeholder="Non reseigné" name="tmp_srg_min" value="<?php                                $tmp_srg_min_obj = $configManager->getConfig('tmp_srg_min');                                echo $tmp_srg_min_obj instanceof Config ? $tmp_srg_min_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">°C</span>                                </div>                            </div>                        </div>                        <div class="col-12 col-md-6 col-lg-3 padding-top-10">                            T° de sortie <span class="text-12">(seuil supérieur)</span> :                        </div>                        <div class="col-12 col-md-6 col-lg-3">                            <div class="input-group input-group-lg">                                <div class="input-group-prepend">                                    <span class="input-group-text"><i class="fa fa-thermometer-three-quarters fa-lg"></i></span>                                </div>                                <input type="text" class="form-control text-center" placeholder="Non reseigné" name="tmp_srg_max" value="<?php                                $tmp_srg_max_obj = $configManager->getConfig('tmp_srg_max');                                echo $tmp_srg_max_obj instanceof Config ? $tmp_srg_max_obj->getValeur() : '';                                ?>"/>                                <div class="input-group-append">                                    <span class="input-group-text">°C</span>                                </div>                            </div>                        </div>                    </div>                   <div class="form-group row">                        <div class="col-12 col-md-6 col-lg-3 padding-top-10">                            Consignes avant surgélation horizontale :                        </div>                        <div class="col-12 col-md-6 col-lg-9">                           <textarea class="form-control text-14" name="srgh_consignes_debut"><?php                               $srgh_consignes_debut_obj = $configManager->getConfig('srgh_consignes_debut');                               echo $srgh_consignes_debut_obj instanceof Config ? strip_tags($srgh_consignes_debut_obj->getValeur()) : '';                               ?></textarea>                        </div>                    </div>                    <div class="form-group row">                        <div class="col-12 col-md-6 col-lg-3 padding-top-10">                            Consignes avant surgélation verticale :                        </div>                        <div class="col-12 col-md-6 col-lg-9">                           <textarea class="form-control text-14" name="srgv_consignes_debut"><?php                               $srgv_consignes_debut_obj = $configManager->getConfig('srgv_consignes_debut');                               echo $srgv_consignes_debut_obj instanceof Config ? strip_tags($srgv_consignes_debut_obj->getValeur()) : '';                               ?></textarea>                        </div>                    </div>                    <div class="row">                        <div class="col text-center mb-2 mt-3">                            <span class="badge badge-secondary text-20 w-100"><i class="fa fa-share-alt mr-2"></i> Liaison Bizerba</span>                        </div>                    </div>                    <div class="form-group row">                        <div class="col-12 col-md-6 col-lg-4 padding-top-10">                            Envoi des fichers vers BizTrack :                        </div>                        <div class="col-12 col-md-6 col-lg-2 padding-top-2">                            <select class="selectpicker form-control" name="biz_actif">                                <option value="0" <?php                                $config_bizerba_actif = $configManager->getConfig('biz_actif');                                echo intval($config_bizerba_actif->getValeur()) == 0 ? 'selected' : ''; ?>>Désactivé</option>                                <option value="1" <?php                                echo intval($config_bizerba_actif->getValeur()) == 1 ? 'selected' : ''; ?>>Activé</option>                            </select>                        </div>                    </div>                </div>                <div class="row">                    <div class="col-9 mt-1">                        <div class="alert alert-warning text-12"><i class="fa fa-info-circle mr-1"></i> Pensez à cliquer sur <b>Enregistrer</b> pour sauvegarder vos modifications <i class="fa fa-arrow-right ml-1"></i></div>                    </div>                    <div class="col-3 mt-1">                        <button type="submit" name="gope" class="btn btn-success form-control"><i class="fa fa-check mr-1"></i> Enregistrer </button>                    </div>                </div>            </div>    </div></form><?phpinclude('includes/footer.php');