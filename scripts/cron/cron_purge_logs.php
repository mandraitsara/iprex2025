<?phpini_set('display_errors' ,1);/* ****************************************************************************** *  TACHE CRON *  Purge et archive des logs de plus de X mois * *  (c) Cédric Bouillon 2019 *  INTERSED ****************************************************************************** */require_once dirname( __FILE__ ).'/../php/config.cli.php';$cronsManager = new CronsManager($cnx);$cron = $cronsManager->getCronByFileName(basename(__FILE__));if (!$cron instanceof Cron) { exit('Non déclaré en BSDD'); }if (!$cron->isActif()) { exit('Inactif'); }$cron->setExecution(date('Y-m-d H:i:s'));$cronsManager->saveCron($cron);/* ****************************************************************************** *  PARAMETRES ****************************************************************************** */$nbmois     = 1;$mail_admin = 'pole-web@intersed.fr';$email_from = 'contact@profilexport.fr';$nom_cron	= 'Purge et archive des logs de plus de '.$nbmois.' mois';$root_log	= dirname( __FILE__ ).'/../logs/';/* ****************************************************************************** *  FIN PARAMETRES ****************************************************************************** */$show_debug = isset($_REQUEST['show_debug']);if ($show_debug) { ?>	<!DOCTYPE html><html>	<head>		<meta charset="utf-8"/>		<meta name="robots" content="noindex, nofollow">		<title>iPrex</title>		<style type="text/css">			body { font-family: "Courier New", Courier, monospace; margin: 0; padding: 10px; }			body * { padding: 0;}		</style>	</head>	<body>	<h1>CRON iPrex</h1><hr>	<h2><?php echo $nom_cron; ?></h2><hr><?php }$query_liste = 'SELECT `id`	FROM `pe_logs`ORDER BY `log_datetime` ASC ';$query = $cnx->prepare($query_liste);$query->execute();if (!empty($liste_logs)) {	// On prépare le fichier de log	$fichier = date('YmdHis').".log";	$logfile = fopen($root_log.$fichier, "w");	$logline = "ID\tType\tDescription\tUser\tIP\n-------------------------------------------\n";	fwrite($logfile, $logline);	foreach ($liste_logs as $log) {		$logline = "#" . $log['id'];		$logline .= "\t" . $log['log_type'];		$logline .= "\t" . $log['log_texte'];		$logline .= "\t" . $log['log_user_id'];		$logline .= "\t" . $log['log_ip'];		$logline .= "\n";		fwrite($logfile, $logline);	} // FIN boucle logs	$logline = "-------------------------------------------\n##### Généré le " . date('d/m/Y à H:i:s') . " par tâche CRON #####\n";	fwrite($logfile, $logline);	fclose($logfile);	$logok = file_exists($root_log . $fichier);	$logsManager = new LogManager($cnx);	if ($logok) {		$query_del = 'TRUNCATE `pe_logs`';		$query = $cnx->prepare($query_del);		if ($query->execute()) {			if ($show_debug) {				echo "<p>Fichier de log ".$fichier." généré, ".count($liste_logs)." logs purgés en base.</p>";			} else {				$log = new Log();				$log->setLog_type('success');				$log->setLog_texte("[CRON] - ".$nom_cron);				$logsManager->saveLog($log);            }        } else {			// Erreur lors de la suppression des logs en BDD, fichier de log généré avec succès.			if ($show_debug) {				echo "<p>Erreur lors de la suppression des logs en BDD, fichier de log ".$fichier." généré avec succès.</p>";			} else {				envoiMail(['pole-web@intersed.fr'], $email_from, "ERREUR CRON IPREX", utf8_decode($nom_cron."<hr>ERREUR LORS DE LA SUPPRESSION DES LOGS EN BDD !<br>Fichier de log ".$fichier." généré avec succès."));            }        }	} else {	    // Erreur lors de la création du fichier de log		if ($show_debug) {			echo "<p>Echec lors de la création du fichier de log.</p>";		} else {			envoiMail(['pole-web@intersed.fr'], $email_from, "ERREUR CRON IPREX", utf8_decode($nom_cron."<hr>ECHEC LORS DE LA CRÉATION DU FICHIER DE LOG !"));        }    } // FIN test fichier de log bien créé	// FIN test let's go purging...} else if ($show_debug) {    echo '<p>Aucun log de plus de '.$nbmois.' mois à purger.</p>';} // FIN test logs pas videif ($show_debug) { ?>	</body></html><?php }