/*   _|_|_|  _|_|_|      _|_| _|        _|    _|  _|    _|  CBO FrameWork _|        _|_|_|    _|    _|  (c) 2018 Cédric Bouillon _|        _|    _|  _|    _|   _|_|_|  _|_|_|      _|_|--------------------------------------------------------Initialisation des surcharges JS------------------------------------------------------*/(function($) {    /******************************     Fonction surchargée AJAX     *****************************/	$.fn.ajax = function(options) {				var defauts =		{			type:				"POST",			script_execute:		"",			rep_script_execute: "scripts/ajax/",			form_id:			"",			return_id:			"",			append_id:			"",			prepend_id:			"",			dialog:				false,			dialog_title:		'',			dialog_width:		600,			dialog_height:		300,			arguments:			"",			confirmation:		"",			redirect_page:		"",			page_transition:	"fade",			reload_page:		true,			role:				"",			callBack:			"",			alert:				false,			fade:				false,			done:				"",			show_loading:		false,			loading_msg:		""		};				var param = $.extend(defauts, options);		 		if (param.confirmation !== "") {			if (!window.confirm(param.confirmation)) {				return false;			}		}				var form_values = "&";				if (param.form_id !== "") {			form_values += $('#'+param.form_id).serialize();					form_values = decodeURIComponent(form_values);					form_values = form_values.replace(/\n/g,"<br/>");		}				$.ajax({						type:		param.type,			data:		param.arguments+form_values,			datatype:	'html',			url:		param.rep_script_execute+param.script_execute,			cache: false,			beforeSend : function(){				if (param.show_loading === true && param.loading_msg ==='') {						$('#'+param.return_id).html('<div class="loading_msg"></div>');				}					if (param.show_loading === true && param.loading_msg !=='') {					$('#'+param.return_id).html(param.loading_msg);				}				}, success:	function(retour) {				retour = retour.split('~');								// Callback :				if (param.callBack !== "") {					if (typeof param.callBack === 'function') {						param.callBack.call(this,retour);					} else {						eval(param.callBack);					}					}							if ($.trim(retour[0]) === 'ok') {					if (retour[1] && param.append_id !== '') {						$('#'+param.append_id).append(retour[1]);					}					if (retour[1] && param.prepend_id !== '') {						$('#'+param.prepend_id).prepend(retour[1]);					}					if (retour[1] && param.return_id !== '') {						$('#'+param.return_id).html(retour[1]);						if (param.dialog === true) {							$('#'+param.return_id).dialog({ modal: true,hide: 'fold',show: 'blind',width:param.dialog_width,height:param.dialog_height});						}					}					else if (retour[1] && param.return_id === '' && param.dialog === true) {										$('#dialog').remove();						$('body').append('<div id="dialog" title="'+param.dialog_title+'" style="display:none"></div>');						$('#dialog').html(retour[1]);						$('#dialog').dialog({ modal: true,hide: 'explode',show: 'implode',minWidth:param.dialog_width,minHeight:param.dialog_height});									}					else if (retour[1] && param.alert === true && param.return_id === '' && param.append_id === '') {									alert(retour[1]);						if (param.redirect_page !== "")	{							$.fn.redirect(param.redirect_page);						}					}					else if (param.redirect_page !== "") {						$.fn.redirect(param.redirect_page);                }				}				else if ($.trim(retour[0]) !== 'ok' && param.alert === true) {					alert(retour[0]);				}				else if ($.trim(retour[0]) !== 'ok' && param.alert === false && param.return_id !== '') {					if (param.fade === true) {						$('#'+param.return_id).hide('fast');					}					$('#'+param.return_id).html(retour[0]);					if (param.fade === true) {						$('#'+param.return_id).fadeIn('fast');					}					//$(".thumbox").thumbox();				}			},			error: function()	{				console.log('Une erreur est survenue, merci de réessayer ultérieurement !');			}		})				.done(function(data) {			if (param.done !== '') {				if (typeof param.done === 'function') {					param.done.call(this,data);				} else {					eval(param.done);				}				}		});	};    /******************************     Toogles attributs     *****************************/	$.fn.toggleAttr = function(attribute) {				if ($(this).attr(attribute )=== attribute) {			$(this).removeAttr(attribute);		} else {			$(this).attr(attribute,attribute);		}		};    /******************************     Toogles classes sur visibles     *****************************/	$.fn.alternateClass = function (someclass) {		// On efface toutes les classes someclass		$(this).removeClass(someclass);		// On ajoute les class some class unioquement une fois sur deux		var i = 0;		$(this).each(function() {			if ($(this).is(':visible')) {				if ( i % 2 !== 0) {					$(this).addClass(someclass);				}				i++;			}		});	};    /******************************     Serialisation avancée     *****************************/	$.fn.serializeAnything = function() {		var toReturn	= [];		var els 		= $(this).find(':input').get();		$.each(els, function() {			if (this.name && !this.disabled && (this.checked || /select|textarea/i.test(this.nodeName) || /text|hidden|password/i.test(this.type))) {				var val = $(this).val();				toReturn.push( encodeURIComponent(this.name) + "=" + encodeURIComponent( val ) );			}		});		return toReturn.join("&").replace(/%20/g, "+");	}    /******************************     Récupération des paramètres     *****************************/	function $_GET(param) {        var vars = {};        window.location.href.replace( location.hash, '' ).replace(            /[?&]+([^=&]+)=?([^&]*)?/gi, // regexp            function( m, key, value ) { // callback                vars[key] = value !== undefined ? value : '';            }        );        if ( param ) {            return vars[param] ? vars[param] : null;        }        return vars;    }    /******************************     Retourne les GET dans un array     *****************************/	function getRequests() {		var vars = {};			window.location.href.replace( location.hash, '' ).replace( /[?&]+([^=&]+)=?([^&]*)?/gi, // regexp				function( m, key, value ) { // callback					vars[key] = value !== undefined ? value : '';				}			);		return vars;	}    /*********************************     Retourne l'environement BootStrap     ********************************/	function findBootstrapEnvironment() {        var envs = ['xs', 'sm', 'md', 'lg'];        var $el = $('<div>');        $el.appendTo($('body'));        for (var i = envs.length - 1; i >= 0; i--) {            var env = envs[i];            $el.addClass('hidden-'+env);            if ($el.is(':hidden')) {                $el.remove();                return env;            }        }    }    $.fn.redirect = function(url){        window.location.href = url;    }})($); // FIN FONCTIONfunction verifEmail(email) {	"use strict";	var regex = /^[a-z0-9._-]+@[a-z0-9._-]{2,}\.[a-z]{2,4}$/;	return regex.test(email);}function loadingBtn(objDom) {	"use strict";	var objDomHtml = objDom.html();	objDom.html('<i class="fa fa-spin fa-spinner"></i>');	objDom.attr('disabled', 'disabled');	return [objDom, objDomHtml];}function removeLoadingBtn(objDomDatas) {	"use strict";	var objDom = objDomDatas[0];	var objDomHtml = objDomDatas[1];	objDom.html(objDomHtml);	objDom.prop('disabled', false);}function cleanCharsToAjax(chaine) {	"use strict";	chaine = chaine.replace(/\+/g, '{{P}}');	chaine = chaine.replace(/\&/g, '{{E}}');	chaine = chaine.replace(/\"/g, '{{D}}');	chaine = chaine.replace(/\'/g, '{{S}}');	return chaine;}