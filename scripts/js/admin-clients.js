/** ------------------------------------------------------------------------ JS - Clients Copyright (C) 2018 Intersed http://www.intersed.fr/ ------------------------------------------------------------------------ @author    Cédric Bouillon @copyright Copyright (c) 2018 Intersed @version   1.0 @since     2018 ------------------------------------------------------------------------ */$(document).ready(function() {    "use strict";    // Affiche la liste des clients (aJax)    chargeListeClients();    // Export PDF    $('.btnExportPdf').click(function() {        var objetDomBtnExport = $(this);        objetDomBtnExport.find('i').removeClass('fa-file-pdf').addClass('fa-spin fa-spinner');        objetDomBtnExport.attr('disabled', 'disabled');        $.fn.ajax({            'script_execute': 'fct_clients.php',            'arguments': 'mode=exportPdf',            'callBack' : function (url_fichier) {                objetDomBtnExport.find('i').removeClass('fa-spin fa-spinner').addClass('fa-file-pdf');                objetDomBtnExport.prop('disabled', false);                $('#lienPdf').attr('href', url_fichier);                $('#lienPdf')[0].click();            } // FIN callBack        }); // FIN ajax    }); // FIN bouton PDF    // Chargement du contenu de la modale Client à son ouverture    $('#modalClient').on('show.bs.modal', function (e) {        // On récupère l'ID de l'utilisateur.        var client_id = e.relatedTarget.attributes['data-client-id'] === undefined ? 0 : parseInt(e.relatedTarget.attributes['data-client-id'].value);        // On récupère le contenu de la modale        $.fn.ajax({            'script_execute': 'fct_clients.php',            'arguments': 'mode=modalClient&id=' + client_id,            'callBack': function (retour) {                // On intègre les différents contenus                var retours = retour.toString().split('^');                var titre = retours[0];                var body = retours[1];                var footer = retours[2];                $('#modalClientTitre').html(titre);                $('#modalClientBody').html(body);                $('#modalClientFooter').html(footer);                // Initialisation des outils JS                $('.selectpicker').selectpicker('render');                $('.togglemaster').bootstrapToggle();                $('[data-toggle="tooltip"]').tooltip();                $("input[type=checkbox].icheck").iCheck(                    {checkboxClass: "icheckbox_square-blue"}                );                // Appel au listener de la modale                clientModalListener();            } // FIN Callback        }); // FIN aJax    }); // Fin chargement du contenu de la modale    // Chargement du contenu de la modale Groupe à son ouverture    $('#modalGroupes').on('show.bs.modal', function (e) {        chargeModaleGroupes(0);    }); // Fin chargement du contenu de la modale    // Chargement du contenu de la modale Adresses à son ouverture    $('#modalAdresses').on('show.bs.modal', function (e) {        // On récupère l'ID de l'utilisateur.        var client_id = e.relatedTarget.attributes['data-client-id'] === undefined ? 0 : parseInt(e.relatedTarget.attributes['data-client-id'].value);        chargeModaleAdresse(client_id);    }); // Fin chargement du contenu de la modale    // Chargement du contenu de la modale Contacts à son ouverture    $('#modalContacts').on('show.bs.modal', function (e) {        // On récupère l'ID de l'utilisateur.        var client_id = e.relatedTarget.attributes['data-client-id'] === undefined ? 0 : parseInt(e.relatedTarget.attributes['data-client-id'].value);        chargeModaleContacts(client_id);    }); // Fin chargement du contenu de la modale    // Nettoyage du contenu de la modale Détails à sa fermeture    $('#modalClient').on('hidden.bs.modal', function (e) {        $('#modalClientTitre').html('<i class="fa fa-spin fa-spinner fa-2x"></i>');        $('#modalClientBody').html('<i class="fa fa-spin fa-spinner fa-2x"></i>');        $('#modalClientFooter').html('<i class="fa fa-spin fa-spinner fa-2x"></i>');    }); // FIN fermeture modale Détails    // Nettoyage du contenu de la modale Adresses à sa fermeture    $('#modalAdresses').on('hidden.bs.modal', function (e) {        $('#modalAdressesTitre').html('<i class="fa fa-spin fa-spinner fa-2x"></i>');        $('#modalAdressesBody').html('<i class="fa fa-spin fa-spinner fa-2x"></i>');    }); // FIN fermeture modale Adresses    // Nettoyage du contenu de la modale Contacts à sa fermeture    $('#modalContacts').on('hidden.bs.modal', function (e) {        $('#modalContactsTitre').html('<i class="fa fa-spin fa-spinner fa-2x"></i>');        $('#modalContactsBody').html('<i class="fa fa-spin fa-spinner fa-2x"></i>');    }); // FIN fermeture modale Contacts    // Recherche    $('.btnRecherche').click(function() {        $.fn.ajax({            'script_execute': 'fct_clients.php',            'form_id': 'filtres',            'return_id': 'listeClients',            'done': function () {                listeClientsListener();            } // FIN Callback        }); // FIN ajax    }); // FIN bouton recherche    $('form#filtres input[type=text]').keyup(function (e) {        var code = (e.keyCode ? e.keyCode : e.which);        if (code === 13) {            e.preventDefault();            $('.btnRecherche').trigger('click');            return false;        }    });    $('form#filtres').submit(function() {        return false;    });}); // FIN ready/** ****************************************** * Listener de la modale client ****************************************** */function clientModalListener() {    // --------------------------------    // Adresse de livraison show/hide    // --------------------------------    $('.checkadresses').on('ifChecked', function(event){        $('.new-clt-zone-livraison').addClass('d-none');        $('.new-clt-zone-livraison select').selectpicker('val', '');        $('.new-clt-zone-livraison input').val('');    });    $('.checkadresses').on('ifUnchecked', function(event){        $('.new-clt-zone-livraison.d-none').removeClass('d-none');    });    // --------------------------------    // Reset de la palette suivante    // --------------------------------    $('.btnResetPaletteSuiv').off("click.btnResetPaletteSuiv").on("click.btnResetPaletteSuiv", function(e) {        e.preventDefault();        if (!confirm("Confirmez...\r\nRéinitialisez le prochain numéro de palette à 1 pour ce client ?")) { return false; }        var id_client = parseInt($('#input_id').val());        if (isNaN(id_client)) { return false; }        $.fn.ajax({            'script_execute': 'fct_clients.php',            'arguments': 'mode=razPaletteSuiv&id_client='+id_client,            'callBack': function (retour) {                retour+='';                if (parseInt(retour) === 1) {                    $('.btnResetPaletteSuiv').parents('.input-group').find('input').val('1');                    $('.btnResetPaletteSuiv').addClass('disabled');                    $('.btnResetPaletteSuiv').attr('disabled', 'disabled');                    $('.btnResetPaletteSuiv').removeClass('btnResetPaletteSuiv');                } else {                    alert('Echec de la réinitialisaiton !');                    return false;                }            } // FIN callback        }); // FIN aJax    }); // FIN raz palette suiv    // --------------------------------    // Bouton Enregistrer    // --------------------------------    $('.btnSaveClient').off("click.btnsaveclient").on("click.btnsaveclient", function(e) {        e.preventDefault();        // Si le bloc d'alerte de doublon affiché, on le masque (réinitialisation)        if (!$('.doublon').hasClass('d-none')) {            $('.doublon').addClass('d-none')        } // FIN test bloc alerte doublon affiché        // Initialisation des variables        var erreurs             = false;        var champsObligaroires  = ['nom'];        // On boucle sur tous les champs obligatoires        $.each( champsObligaroires, function( key, value ) {                // Si le champ est vide                if ($('#input_'+value).val().length < 1 ) {                    // On affiche l'invalidité sur le champ correspondant (Bootstrap) pendant 3 secondes                    $('#input_'+value).addClass('is-invalid');                    setTimeout(function(){                        $('#input_'+value).removeClass('is-invalid');                    }, 3000);                    // On déclare l'erreur                    erreurs = true;                } // FIN test validité du champ        }); // FIN boucle sur les champs à vérifier        // Si pas d'erreur jusque là on continue...        if (erreurs === false) {            // Vérification qu'il n'existe pas déjà ce nom ou cet agrément (aJax)            var clt_id       = parseInt($('#input_id').val());            var clt_nom      = $('#input_nom').val();            $.fn.ajax({                'script_execute': 'fct_clients.php',                'arguments': 'mode=checkExisteDeja&id='+clt_id+'&nom='+clt_nom,                'callBack': function (retour) {                    // Si on trouve une concordance déjà enregistrée                    if (parseInt(retour) === 1) {                        // On affiche le message de doublon                        if ($('.doublon').hasClass('d-none')) {                            $('.doublon').removeClass('d-none');                        }                        // Sinon, on peux valider l'enregistrement                    } else {                        goAddUpd();                    } // FIN test retour aJax de nom/numagr déjà attribué                } // FIN callback            }); // FIN aJax        } // FIN test pas d'erreur        return false;    }); // FIN bouton Enregistrer    // --------------------------------    // Bouton Supprimer    // --------------------------------    $('.btnSupprimeClient').off("click.btnSupprimeClient").on("click.btnSupprimeClient", function(e) {        e.preventDefault();        // Si on ne trouve pas l'ID de l'client, on ne va pas plus loin...        if ( $('#formClientAddUpd').find('input[name=client_id]') === undefined) { return false; }        // On initialise, formate et contrôle l'ID de l'client        var id_client = parseInt($('#formClientAddUpd').find('input[name=client_id]').val());        if (id_client === 0) { return false; }        // Message de confirmation        var texte = "ATTENTION !\r\nVous allez supprimer un client de l'intranet.\r\nContinuer ?";        if (!confirm(texte)) { return false; }        // Confirmation OK, on supprime l'client (aJax)        $.fn.ajax({            'script_execute': 'fct_clients.php',            'arguments': 'mode=supprClient&id_client='+id_client,            'callBack': function () {                // On recharge la liste à jour des clients et on ferme la modale.                chargeListeClients();                $('#modalClient').modal('hide');            } // FIN callback        }); // FIN ajax        return false;    }); // FIN bouton supprime} // FIN listener/** ****************************************** * Affiche la liste des clients ****************************************** */function chargeListeClients() {    "use strict";    var page = parseInt($('.pagination .page-item.active a').text());    if (isNaN(page)) { page = 1; }    $.fn.ajax({        'script_execute': 'fct_clients.php',        'form_id': 'filtres',        'return_id': 'listeClients',        'done': function () {            listeClientsListener();        } // FIN Callback    }); // FIN ajax/*    $.fn.ajax({        'script_execute': 'fct_clients.php',        'arguments': 'mode=showListeClients&page='+page,        'return_id': 'listeClients',        'callBack': function () {            listeClientsListener();        } // FIN callback    }); // FIN ajax*/    return true;} // FIN fonction/** ****************************************** * Valide l'enregistrement ****************************************** */function goAddUpd() {    "use strict";    if ($('input[name=ctc_fax]').length) {        // Si un "+" dans le numéro de téléphone, on l'interpère pour le passer par un Sharp (reconversion en + derrière)        $('input[name=ctc_fax]').val($('input[name=ctc_fax]').val().replace('+', '#'));        $('input[name=ctc_tel]').val($('input[name=ctc_tel]').val().replace('+', '#'));        $('input[name=ctc_mobile]').val($('input[name=ctc_mobile]').val().replace('+', '#'));    }    $('textarea').val($('textarea').val().replace('+', '#'));    $.fn.ajax({        'script_execute': 'fct_clients.php',        'form_id': 'formClientAddUpd',        'callBack': function () {            // on recharge la liste à jour et on ferme la modale            chargeListeClients();            $('#modalClient').modal('hide');        } // FIN callback    }); // FIN ajax    return false;} // FIN fonction/** ****************************************** * Listener de la liste des clients ****************************************** */function listeClientsListener() {    "use strict";    // Tri    $('.orderby').off("click.orderby").on("click.orderby", function(e) {        e.preventDefault();        var champ = $(this).data('champ');        var champ_actuel = $('input[name=orderby_champ]').val();        var sens_actuel = $('input[name=orderby_sens]').val();        if (champ === champ_actuel) {            var sens = sens_actuel ===  'ASC' ? 'DESC' : 'ASC';            $('input[name=orderby_sens]').val(sens);            chargeListeClients();        } else {            $('input[name=orderby_champ]').val(champ);            chargeListeClients();        }        return false;    });    // Pagination Ajax    $(document).on('click','#listeClients .pagination li a',function(){        if ($(this).attr('data-url') === undefined) { return false; }        // on affiche le loading d'attente        $('#listeClients').html('<i class="fa fa-spin fa-spinner fa-2x"></i>');        // on fait l'appel ajax qui va rafraichir la liste        $.fn.ajax({script_execute:'fct_clients.php'+$(this).attr('data-url'),return_id:'listeClients'});        // on désactive le lien hypertexte        return false;    }); // FIN pagination ajax} // FIN fonction/** ****************************************** * Listener de la modale Adresses client ****************************************** */function adressesModalListener() {    // --------------------------------    // Enregistre une adresse (addupd)    // --------------------------------    $('.btnAddUpdAdresse').off("click.btnAddUpdAdresse").on("click.btnAddUpdAdresse", function(e) {        e.preventDefault();        var adresse = $('#addUpdAdresseClt input[name=adresse_1]').val();        var id_client = $('#addUpdAdresseClt input[name=id_client]').val();        if (adresse === '') { alert("La première ligne d'adresse ne peut pas être vide !"); return false; }        $(this).html('<i class="fa fa-spin fa-spinner"></i>')        $.fn.ajax({            'script_execute': 'fct_clients.php',            'form_id': 'addUpdAdresseClt',            'callBack': function (retour) {                retour+= '';                if (parseInt(retour) !== 1) {                    alert('ERREUR !\r\n\Echec lors de l\'enregistrement...\r\nCode erreur : ' + retour);                    return false;                }                chargeModaleAdresse(id_client);            } // FIN callback        }); // FIN ajax        return false;    }); // FIN save adresse    // --------------------------------    // Supprime une adresse    // --------------------------------    $('.btnSupprAdresse').off("click.btnSupprAdresse").on("click.btnSupprAdresse", function(e) {        e.preventDefault();        if (!confirm("Supprimer cette adresse ?")) { return false; }        var id_adresse = parseInt($(this).parents('tr').data('id'));        var id_client = parseInt($(this).parents('tr').data('id-client'));        if (id_adresse === 0 || id_adresse === undefined) {            alert('ERREUR !\r\bIdentification de l\'adresse impossible...\r\nCode erreur : PNGAVLJ7');            return false;        }        $(this).find('i.fa').removeClass('fa-trash-alt').addClass('fa-spin fa-spinner');        $.fn.ajax({            'script_execute': 'fct_clients.php',            'arguments': 'mode=supprAdresse&id_adresse=' + id_adresse,            'callBack': function (retour) {                retour+= '';                if (parseInt(retour) !== 1) {                    alert('ERREUR !\r\n\Echec lors de la suppression...\r\nCode erreur : ' + retour);                    return false;                }                chargeModaleAdresse(id_client);            } // FIN Callback        }); // FIN aJax        return false;    }); // FIN supprime adresse    // --------------------------------    // Editer une adresse    // --------------------------------    $('.btnEditAdresse').off("click.btnEditAdresse").on("click.btnEditAdresse", function(e) {        e.preventDefault();        var id_adresse = parseInt($(this).parents('tr').data('id'));        var id_client = parseInt($(this).parents('tr').data('id-client'));        chargeModaleAdresse(id_client, id_adresse);        return false;    }); // FIN éditer adresse} // FIN fonction/** ****************************************** * Listener de la modale Contacts client ****************************************** */function contactsModalListener() {    // --------------------------------    // Enregistre un contact (addupd)    // --------------------------------    $('.btnAddUpdContact').off("click.btnAddUpdContact").on("click.btnAddUpdContact", function(e) {        e.preventDefault();        var nom = $('#addUpdContactClt input[name=nom]').val();        var id_client = $('#addUpdContactClt input[name=id_client]').val();        if (nom === '') { alert("Le nom du contact ne peut pas être vide !"); return false; }        $('input[name=telephone]').val($('input[name=telephone]').val().replace('+', '#'));        $('input[name=fax]').val($('input[name=fax]').val().replace('+', '#'));        $('input[name=mobile]').val($('input[name=mobile]').val().replace('+', '#'));        $(this).html('<i class="fa fa-spin fa-spinner"></i>');        $.fn.ajax({            'script_execute': 'fct_clients.php',            'form_id': 'addUpdContactClt',            'callBack': function (retour) {                retour+= '';                if (parseInt(retour) !== 1) {                    alert('ERREUR !\r\n\Echec lors de l\'enregistrement...\r\nCode erreur : ' + retour);                    return false;                }                chargeModaleContacts(id_client);            } // FIN callback        }); // FIN ajax        return false;    }); // FIN save contact    // --------------------------------    // Supprime un contact    // --------------------------------    $('.btnSupprContact').off("click.btnSupprContact").on("click.btnSupprContact", function(e) {        e.preventDefault();        if (!confirm("Supprimer ce contact ?")) { return false; }        var id_contact = parseInt($(this).parents('tr').data('id'));        var id_client = parseInt($(this).parents('tr').data('id-client'));        if (id_contact === 0 || id_contact === undefined) {            alert('ERREUR !\r\bIdentification du contact impossible...\r\nCode erreur : X01PKKZ8');            return false;        }        $(this).find('i.fa').removeClass('fa-trash-alt').addClass('fa-spin fa-spinner');        $.fn.ajax({            'script_execute': 'fct_clients.php',            'arguments': 'mode=supprContact&id_contact=' + id_contact,            'callBack': function (retour) {                retour+= '';                if (parseInt(retour) !== 1) {                    alert('ERREUR !\r\n\Echec lors de la suppression...\r\nCode erreur : ' + retour);                    return false;                }                chargeModaleContacts(id_client);            } // FIN Callback        }); // FIN aJax        return false;    }); // FIN supprime adresse    // --------------------------------    // Editer un contact    // --------------------------------    $('.btnEditContact').off("click.btnEditContact").on("click.btnEditContact", function(e) {        e.preventDefault();        var id_contact = parseInt($(this).parents('tr').data('id'));        var id_client = parseInt($(this).parents('tr').data('id-client'));        chargeModaleContacts(id_client, id_contact);        return false;    }); // FIN éditer adresse} // FIN fonction/** ****************************************** * Fonction déportée : chargement adresses ****************************************** */function chargeModaleAdresse(client_id, id_adresse) {    "use strict";    if (id_adresse === undefined) { id_adresse = 0; }    // On récupère le contenu de la modale    $.fn.ajax({        'script_execute': 'fct_clients.php',        'arguments': 'mode=modalAdresses&id=' + client_id+'&id_adresse='+id_adresse,        'callBack': function (retour) {            // On intègre les différents contenus            var retours = retour.toString().split('^');            var titre = retours[0];            var body = retours[1];            $('#modalAdressesTitre').html(titre);            $('#modalAdressesBody').html(body);            // Initialisation des outils JS            $('.selectpicker').selectpicker('render');            $('.togglemaster').bootstrapToggle();            $('[data-toggle="tooltip"]').tooltip();            // Appel au listener de la modale            adressesModalListener();        } // FIN Callback    }); // FIN aJax} // FIN fonction/** ****************************************** * Fonction déportée : chargement contacts ****************************************** */function chargeModaleContacts(client_id, id_contact) {    "use strict";    if (id_contact === undefined) { id_contact = 0; }    // On récupère le contenu de la modale    $.fn.ajax({        'script_execute': 'fct_clients.php',        'arguments': 'mode=modalContacts&id=' + client_id+'&id_contact='+id_contact,        'callBack': function (retour) {            // On intègre les différents contenus            var retours = retour.toString().split('^');            var titre = retours[0];            var body = retours[1];            $('#modalContactsTitre').html(titre);            $('#modalContactsBody').html(body);            // Appel au listener de la modale            contactsModalListener();        } // FIN Callback    }); // FIN aJax} // FIN fonction/** ****************************************** * Fonction déportée : chargement groupes ****************************************** */function chargeModaleGroupes(id_groupe) {    "use strict";    if (id_groupe === undefined) { id_groupe = 0; }    // On récupère le contenu de la modale    $.fn.ajax({        'script_execute': 'fct_clients.php',        'arguments': 'mode=modalGroupes&id_groupe='+id_groupe,        'return_id' : 'modalGroupesBody',        'done': function (retour) {            // Initialisation des outils JS            $('.selectpicker').selectpicker('render');            $('.togglemaster').bootstrapToggle();            $('[data-toggle="tooltip"]').tooltip();            // Appel au listener de la modale            groupesModalListener();        } // FIN Callback    }); // FIN aJax} // FIN fonction/** ****************************************** * Listener de la modale Groupes ****************************************** */function groupesModalListener() {    "use strict";    // --------------------------------    // Enregistre un groupe (addupd)    // --------------------------------    $('.btnAddUpdGroupe').off("click.btnAddUpdGroupe").on("click.btnAddUpdGroupe", function(e) {        e.preventDefault();        var nom = $('#addUpdGroupeClt input[name=nom]').val();        if (nom === '') { alert("Le nom du groupe ne peut pas être vide !"); return false; }        $(this).html('<i class="fa fa-spin fa-spinner"></i>');        $.fn.ajax({            'script_execute': 'fct_clients.php',            'form_id': 'addUpdGroupeClt',            'callBack': function (retour) {                retour+= '';                if (parseInt(retour) !== 1) {                    alert('ERREUR !\r\n\Echec lors de l\'enregistrement...\r\nCode erreur : ' + retour);                    return false;                }                chargeModaleGroupes(0);            } // FIN callback        }); // FIN ajax        return false;    }); // FIN save contact    // --------------------------------    // Supprime un contact    // --------------------------------    $('.btnSupprGroupe').off("click.btnSupprGroupe").on("click.btnSupprGroupe", function(e) {        e.preventDefault();        if (!confirm("Supprimer ce groupe ?")) { return false; }        var id_groupe = parseInt($(this).parents('tr').data('id'));        if (id_groupe === 0 || id_groupe === undefined) {            alert('ERREUR !\r\bIdentification du groupe impossible...\r\nCode erreur : X01PKKZ8');            return false;        }        $(this).find('i.fa').removeClass('fa-trash-alt').addClass('fa-spin fa-spinner');        $.fn.ajax({            'script_execute': 'fct_clients.php',            'arguments': 'mode=supprGroupe&id_groupe=' + id_groupe,            'callBack': function (retour) {                retour+= '';                if (parseInt(retour) !== 1) {                    alert('ERREUR !\r\n\Echec lors de la suppression...\r\nCode erreur : ' + retour);                    return false;                }                chargeModaleGroupes(0);            } // FIN Callback        }); // FIN aJax        return false;    }); // FIN supprime groupe    // --------------------------------    // Editer un contact    // --------------------------------    $('.btnEditGroupe').off("click.btnEditGroupe").on("click.btnEditGroupe", function(e) {        e.preventDefault();        var id_groupe = parseInt($(this).parents('tr').data('id'));        chargeModaleGroupes(id_groupe);        return false;    }); // FIN éditer adresse} // FIN listener