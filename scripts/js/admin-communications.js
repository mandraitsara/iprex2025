/** ------------------------------------------------------------------------ JS - Administration Communications Copyright (C) 2018 Intersed http://www.intersed.fr/ ------------------------------------------------------------------------ @author    Cédric Bouillon @copyright Copyright (c) 2018 Intersed @version   1.0 @since     2018 ------------------------------------------------------------------------ */$(document).ready(function() {    "use strict";    // Affiche la liste des communications (aJax)    chargeListeCommunications();    // Chargement du contenu de la modale Communication à son ouverture    $('#modalCommunication').on('show.bs.modal', function (e) {        // On récupère l'ID.        var communication_id = e.relatedTarget.attributes['data-communication-id'] === undefined ? 0 : parseInt(e.relatedTarget.attributes['data-communication-id'].value);        if (communication_id === 0) {            $('.btnSupprCommunication').hide();        } else {            $('.btnSupprCommunication').show();        }        // On récupère le contenu de la modale        $.fn.ajax({            'script_execute': 'fct_communications.php',            'arguments': 'mode=modalCommunication&id=' + communication_id,            'callBack': function (retour) {                // On intègre les différents contenus                var retours = retour.toString().split('^');                var titre = retours[0];                var body = retours[1];                var footer = retours[2];                $('#modalCommunicationTitre').html(titre);                $('#modalCommunicationBody').html(body);                // Initialisation des outils JS                $('.selectpicker').selectpicker('render');                $('.togglemaster').bootstrapToggle();                // Appel au listener de la modale                communicationModalListener();            } // FIN Callback        }); // FIN aJax    }); // Fin chargement du contenu de la modale    // Recherche    $('.btnRecherche').click(function() {       chargeListeCommunications();    }); // FIN bouton recherche    $('form#filtres input[type=text]').keyup(function (e) {        var code = (e.keyCode ? e.keyCode : e.which);        if (code === 13) {            e.preventDefault();            $('.btnRecherche').trigger('click');            return false;        }    });    $('form#filtres').submit(function() {        return false;    });    // Nettoyage du contenu de la modale Communication à sa fermeture    $('#modalCommunication').on('hidden.bs.modal', function (e) {        $('#modalCommunicationTitre').html('<i class="fa fa-spin fa-spinner fa-2x"></i>');        $('#modalCommunicationBody').html('<i class="fa fa-spin fa-spinner fa-2x"></i>');        $('.btnSupprCommunication').show();        $('.btnSaveCommunication').prop('disabled', false);        $('.btnSaveCommunication').html('<i class="fa fa-check margin-right-10"></i>Enregistrer');        $('.btnSupprCommunication').html('<i class="fa trash-lat margin-right-10"></i>Supprimer');        $('.btnSupprCommunication').prop('disabled', false);        $('.btnAnnulerCommunication').prop('disabled', false);    }); // FIN fermeture modale    // Nettoyage du contenu de la modale Dossiers à sa fermeture    $('#modalDossiers').on('hidden.bs.modal', function (e) {        $('#modalDossiersBody').html('<i class="fa fa-spin fa-spinner fa-2x"></i>');    }); // FIN fermeture modale    // Chargement du contenu de la modale Dossiers    $('#modalDossiers').on('show.bs.modal', function (e) {        // On récupère le contenu de la modale        $.fn.ajax({            'script_execute': 'fct_communications.php',            'arguments': 'mode=modalDossiers',            'return_id' : 'modalDossiersBody',            'done': function () {                arborescenceListener();            } // FIN Callback        }); // FIN aJax    }); // FIN modale dossiers}); // FIN ready/** ****************************************** * Listener de la modale ****************************************** */function communicationModalListener() {    $("input:file").change(function (){        var fichierArray = $(this).val().split('\\');        var nomFichier = fichierArray[fichierArray.length-1];        $(".nom-fichier-a-uploader").text(nomFichier);    });    // --------------------------------    // Bouton Enregistrer    // --------------------------------    $('.btnSaveCommunication').off("click.btnSaveCommunication").on("click.btnSaveCommunication", function(e) {        e.preventDefault();        // Récupération des variables du formulaire        var communication_id = parseInt($('#communication_id').val());        var id_vue           = $('select[name=id_vue]').val();        var nom              = $('input[name=nom]').val();        var chemin           = $('select[name=chemin]').val();        var actif            = $('input[name=activation]').is(':checked') ? 1 : 0;        // Vérification : fichier non sélectionné si nouvelle com..        if (communication_id === 0) {            if ($('#inputGroupFile01').val() === '') {                alert('Sélectionnez un fichier...');                return false;            }        }        // Vérification : ID vue        if (id_vue === '') {            alert('Sélectionnez une vue...');            return false;        }        // Vérification : Nom        if (nom === '') {            alert('Précisez un titre.\r\nCelui-ci servira de lien pour afficher le document.');            return false;        }        // Si nouvelle com, on upload...        if (communication_id === 0) {            // Ici tout est OK, on prépare les données à envoyer en aJax            var formData = new FormData();            formData.append('file', $('#inputGroupFile01')[0].files[0]);            formData.append('mode', 'saveCommunication');            formData.append('id_vue', id_vue);            formData.append('nom', nom);            formData.append('chemin', chemin);            formData.append('actif', actif);            // Appel aJax en XHR natif pour upload            $.ajax({                url: 'scripts/ajax/fct_communications.php',                type: 'POST',                beforeSend: traitementAvantEnvoi('save'),                success: function (retour) {                    callBackRetour(retour);                },                data: formData,                //Options signifiant à jQuery de ne pas s'occuper du type de données                cache: false,                contentType: false,                processData: false            }); // FIN aJax        // SI update...        } else {            $('.btnSaveCommunication').html('<i class="fa fa-spin fa-spinner"></i>');            $('#formCommunicationAddUpd').css('opacity', '.5');            $('#formCommunicationAddUpd').css('cursor', 'wait');            $.fn.ajax({                'script_execute': 'fct_communications.php',                'form_id': 'formCommunicationAddUpd',                'done': function () {                    chargeListeCommunications();                    $('#modalCommunication').modal('hide');                } // FIN Callback            }); // FIN ajax        } // FIN test add/upd        return false;    }); // FIN bouton Enregistrer    // --------------------------------    // Bouton Supprimer    // --------------------------------    $('.btnSupprCommunication').off("click.btnSupprimeCommunication").on("click.btnSupprimeCommunication", function(e) {        e.preventDefault();        // Si on ne trouve pas l'ID de l'communication, on ne va pas plus loin...        if ( $('#formCommunicationAddUpd').find('input[name=communication_id]') === undefined) { return false; }        // On initialise, formate et contrôle l'ID de l'communication        var id_communication = parseInt($('#formCommunicationAddUpd').find('input[name=communication_id]').val());        if (id_communication === 0) { return false; }        // Message de confirmation        var texte = "ATTENTION !\r\nVous allez supprimer une communication de l'intranet.\r\nContinuer ?";        if (!confirm(texte)) { return false; }        $('.btnSupprCommunication').html('<i class="fa fa-spin fa-spinner"></i>');        $('#formCommunicationAddUpd').css('opacity', '.5');        $('#formCommunicationAddUpd').css('cursor', 'wait');        // Confirmation OK, on supprime l'communication (aJax)        $.fn.ajax({            'script_execute': 'fct_communications.php',            'arguments': 'mode=supprCommunication&id_communication='+id_communication,            'callBack': function () {                // On recharge la liste à jour des communications et on ferme la modale.                chargeListeCommunications();                $('#modalCommunication').modal('hide');            } // FIN callback        }); // FIN ajax        return false;    }); // FIN bouton supprime} // FIN listener/** ****************************************** * Affiche la liste des communications ****************************************** */function chargeListeCommunications() {    $.fn.ajax({        'script_execute': 'fct_communications.php',        'form_id': 'filtres',        'return_id': 'listeCommunications',        'callBack': function (retour) {            listeCommunicationsListener();        } // FIN Callback    }); // FIN ajax    return true;} // FIN fonction/** ****************************************** * Listener de la liste des communications ****************************************** */function listeCommunicationsListener() {    // Pour une éventuelle pagination à venir...}/** ****************************************** * Fonction de traitement avant upload (disabled form) ****************************************** */function traitementAvantEnvoi(mode) {    if (!$('.retour-upload-erreur').hasClass('d-none')) {        $('.retour-upload-erreur').addClass('d-none');    }    if (!$('.retour-upload-ok').hasClass('d-none')) {        $('.retour-upload-ok').addClass('d-none');    }    $('#inputGroupFile01').prop('disabled', 'disabled');    $('#inputGroupFile01').parents('.form-group').css('opacity', '.5');    $('select[name=id_vue]').parents('.form-group').css('opacity', '.5');    $('input[name=nom]').parents('.form-group').css('opacity', '.5');    $('select[name=id_vue]').prop('disabled', true);    $('select[name=id_vue]').selectpicker('refresh');    $('input[name=nom]').prop('disabled', 'disabled');    $('.btnSaveCommunication').prop('disabled', true);    $('.btnSupprCommunication').prop('disabled', true);    $('.btnAnnulerCommunication').prop('disabled', true);    $('input[name=activation]').bootstrapToggle('disable')    if (mode === 'save' || mode === undefined) {        $('.btnSaveCommunication').html('<i class="fa fa-spin fa-spinner"></i>');    } else {        $('.btnSupprCommunication').html('<i class="fa fa-spin fa-spinner"></i>');    }    // On converti le "&"    $('input[name=nom]').val( $('input[name=nom]').val().replace('&', '#et#'));    // PAS DE RETURN SINON CA NE MARCHE PAS !} // FIN fonction traitement avant upload// Fonction CallBack retour Uploadfunction callBackRetour(retour){    // Si retour erreur, on remet les champs dispos    if (parseInt(retour) !== 1) {        $('input[name=nom]').val( $('input[name=nom]').val().replace('#et#', '&'));        $('#inputGroupFile01').prop('disabled', false);        $('#inputGroupFile01').parents('.form-group').css('opacity', '1');        $('select[name=id_vue]').parents('.form-group').css('opacity', '1');        $('input[name=nom]').parents('.form-group').css('opacity', '1');        $('select[name=id_vue]').prop('disabled', false);        $('select[name=id_vue]').selectpicker('refresh');        $('input[name=nom]').prop('disabled', false);        $('.btnSaveCommunication').prop('disabled', false);        $('input[name=activation]').bootstrapToggle('enable')        $('.btnSaveCommunication').html('<i class="fa fa-check margin-right-10"></i>Enregistrer');        $('.btnSupprCommunication').html('<i class="fa trash-lat margin-right-10"></i>Supprimer');        $('.btnSupprCommunication').prop('disabled', false);        $('.btnAnnulerCommunication').prop('disabled', false);        var texteErreur = "ERREUR !\r\n";        switch(parseInt(retour)) {            case  0: alert(texteErreur+"Format de fichier invalide.\r\nCode erreur : EA03DGM0");break;            case -1: alert(texteErreur+"Identification de la vue impossible.\r\nCode erreur : NISVTSLP");break;            case -2: alert(texteErreur+"Récupération du fichier impossible.\r\nCode erreur : YHLFSKJP");break;            case -3: alert(texteErreur+"Création du dossier upload/com impossible.\r\nCode erreur : EDVKRQNO");break;            case -4: alert(texteErreur+"Enregistrement du fichier sur le serveur impossible.\r\nCode erreur : PWTUNSUP");break;            case -5: alert(texteErreur+"Enregistrement en BDD échoué.\r\nCode erreur : MSQTIYHA");break;            case -6: alert(texteErreur+"Instanciation impossible.\r\nCode erreur : C651QI5Y");break;        }        alert(texteErreur);        return false;    }    // Tout s'est bien passé, on ferme la modale et on raffraichit la liste    chargeListeCommunications();    $('#modalCommunication').modal('hide');} // FIN CallBack retour Upload// Listener de la liste des dossiersfunction arborescenceListener() {    // Bouton supprimer dossier    $('.btnDelDossier').off("click.btnDelDossier").on("click.btnDelDossier", function(e) {        e.preventDefault();        if (!confirm("CONFIRMATION\r\nVous allez supprimer un dossier, les fichiers s'y trouvant seront déplacé à la racine...\r\nContinuer ?")) { return false; }        var objetTr = $(this).parents('tr');        var dossier = objetTr.data('dossier');        $.fn.ajax({            'script_execute': 'fct_communications.php',            'arguments': 'mode=supprimeDossier&dossier='+dossier,            'done': function() {                objetTr.fadeOut('fast');            }        }); // FIN ajax    }); // FIN bouton supprimer dossier    // Bouton créer un dossier ou sous-dossier    $('.btnAddDossier').off("click.btnAddDossier").on("click.btnAddDossier", function(e) {        e.preventDefault();        var parent = $(this).parents('tr').data('dossier');        if (parent === undefined) { parent = '/'; } else { parent+='/'; }        var nom = prompt("Entrez le nom du sous-dossier à créer :", "Nouveau dossier");        if (nom === null || nom.length === 0) { return false; }        parent = parent.replace('&', '#et#');        nom = nom.replace('&', '#et#');        $.fn.ajax({            'script_execute': 'fct_communications.php',            'arguments': 'mode=creerDossier&parent='+parent+'&nom='+nom,            'done': function() {                // On récupère le contenu de la modale                $.fn.ajax({                    'script_execute': 'fct_communications.php',                    'arguments': 'mode=modalDossiers',                    'return_id' : 'modalDossiersBody',                    'done': function () {                        arborescenceListener();                    } // FIN Callback                }); // FIN aJax            }        }); // FIN ajax    }); // FIN bouton créer un dossier ou sous-dossier} // FIN listener