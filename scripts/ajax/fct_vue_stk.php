<?php/*   _|_|_|  _|_|_|    _| _|        _|    _|  _|        CBO FrameWork _|        _|_|_|    _|        (c) 2018 Cédric Bouillon _|        _|    _|  _|   _|_|_|  _|_|_|    _|_|_|_|--------------------------------------------------------Contrôleur Ajax STOCK PRODUITS------------------------------------------------------*/// Initialisation du mode d'appel$mode       = isset($_REQUEST['mode']) ? $_REQUEST['mode'] : '';// Intégration de la configuration du FrameWork et des autorisationsrequire_once '../php/config.php';$fonctionNom = 'mode'.ucfirst($mode);if (function_exists($fonctionNom)) {	$fonctionNom();}/* ------------------------------------------FONCTION - Message d'erreur standard-------------------------------------------*/function erreur() {	?>	<div class="alert alert-danger text-center">		<i class="fa fa-exclamation-triangle fa-3x mb-2"></i><br>		<p>Erreur de récupération des données !</p>	</div>	<?php	exit;} // FIN fonctions/* ------------------------------------------MODE - Charge le contenu d'une étape de vue-------------------------------------------*/function modeChargeEtapeVue() {	global $cnx, $utilisateur;	$etape = isset($_REQUEST['etape']) ? intval($_REQUEST['etape']) : 0;	/** ----------------------------------------	 * DEV - On affiche l'étape pour débug	 *  ----------------------------------- */	if ($utilisateur->isDev()) { ?>		<div class="dev-etape-vue"><i class="fa fa-user-secret fa-lg mr-1"></i>Etape <kbd><?php echo $etape;?></kbd></div>	<?php } // FIN test DEV	/** ----------------------------------------	 * Etape        : 0	 * Description  : Selection du client	 *  ----------------------------------- */	if ($etape == 0) {	    $tiersManager = new TiersManager($cnx);		// On récupère les clients qui sont à afficher (stk_type > 0)	    $clients = $tiersManager->getListeTiers(['stk_vue' => true]);	    if (empty($clients)) { ?>            <div class="alert alert-danger mt-4 text-center">                Aucun client paramétré pour le stock produit !<br>Contactez un administrateur...            </div>		<?php exit; }	    foreach ($clients as $k => $client) {            // On récupère le nombre de palettes non expédiées pour ce client	        $nbPalettesClient = $tiersManager->getNbPalettesClient($client, false, true); // On exclu les palettes déjà en BL	        // Si aucune, on affiche pas le client puisqu'il n'y aura rien de toute façon	        if ($nbPalettesClient == 0) { unset($clients[$k]); continue; }	        // On récupère le nombre de colis ou blocs en stock pour ce client			$nbColis = $tiersManager->getNbColisClient($client, false, true);			// On récupère le poids en stock pour ce client			$poids = $tiersManager->getPoidsClient($client, false, true);			$nbProduitsClient = $tiersManager->getNbProduitsClient($client);			if ($nbProduitsClient == 0) { unset($clients[$k]); continue; }	        ?>	     <div class="card text-white bg-info mb-3 carte-lot <?php		 echo $client->getStk_type() == 1 ? 'carte-clt' : 'carte-depot';?> d-inline-block mr-3 mt-3" style="max-width: 35rem;" data-id-clt="<?php echo $client->getId(); ?>" data-etape-suivante="<?php         echo $client->getStk_type() == 1 ? 10 : 11;?>">                <div class="card-header text-36"><?php echo $client->getNom();                echo $client->getStk_type() == 2 ? '<i class="float-right fa fa-warehouse text-20 gris-d"></i>' : '';					?></div>                <div class="card-body">                    <table>                        <tr>                            <td>Nombre de produits</td>                            <th class="text-18 text-right"><?php echo $nbProduitsClient; ?></th>                        </tr>                        <tr>                            <td>Nombre de palettes</td>                            <th class="text-18 text-right"><?php echo $nbPalettesClient; ?></th>                        </tr>                        <tr>                            <td>Total colis / blocs</td>                            <th class="text-18 text-right"><?php echo $nbColis; ?></th>                        </tr>                        <tr>                            <td>Poids total (Kg)</td>                            <th class="text-18 text-right"><?php echo number_format($poids,3,'.', ' '); ?></th>                        </tr>                    </table>                </div>         </div>		<?php	    } // FIN boucle clients		if (empty($clients)) { ?>            <div class="alert alert-warning padding-50 mt-4 text-center">                <i class="fa fa-exclamation-circle fa-4x mb-5"></i>                <div class="text-28">Aucun client ayant des produits en stock !</div>Tous les produits ont peut-être déjà été intégrés à des BL...            </div>			<?php		}        exit;	} // FIN étape	/** ----------------------------------------	 * Etape        : 1	 * Description  : Liste des produits	 *  ----------------------------------- */	if ($etape == 1) {		// Appel à la fonction déportée pour afficher le tableau du stock produit		modeShowTableauStockProduits();	} // FIN étape	/** ----------------------------------------	 * Etape        : 2	 * Description  : Corrections	 *  ----------------------------------- */	if ($etape == 2) {	    $ids_datas = isset($_REQUEST['id']) ? $_REQUEST['id'] : '';	    $ids = explode(',', $ids_datas);	    if (empty($ids) || intval($ids[0]) == 0) { ?>            <div class="alert alert-danger"><strong>ERRREUR !</strong><br>Identification des données impossible !<br>Code erreur : V1N8J0AG</div>        <?php exit ; } ?>        <!-- On stocke les IDs dans un input pour communiquer avec le ticket -->        <input type="hidden" id="ids_compos" value="<?php echo $ids_datas; ?>"/>        <?php		$produitsManager = new ProduitManager($cnx);		$lotNegoceManager = new LotNegoceManager($cnx);		$params['ids'] = $ids_datas;		$produitsStockSeuls = $produitsManager->getProduitsStock($params);		$produitsNegoce = $lotNegoceManager->getProduitsNegoceStock($params);		$produitsStock = array_merge($produitsStockSeuls, $produitsNegoce);	    // Si on a qu'un seul produit sélectionné, on permet de modifier les quantités...	    if (count($ids) == 1) {			$pdtStock = $produitsStock[0];			$date_dlc = new DateTime($pdtStock->getDate_dlc());			$plurielBlocs = $pdtStock->getNb_colis() > 1 ? 's' : '';			$produit = $produitsManager->getProduit($pdtStock->getId_produit());			$poidsDefautProduit = $produit instanceof Produit ? $produit->getPoids() : 0;	        ?>            <div class="row">                <div class="col mt-3">                    <div class="alert alert-secondary">                        <div class="input-group clavier">                            <input type="hidden" id="champActif" value="nb_colis" />                            <div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary btn-large" data-valeur="1">1</button></div>                            <div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary btn-large" data-valeur="2">2</button></div>                            <div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary btn-large" data-valeur="3">3</button></div>                            <div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary btn-large" data-valeur="4">4</button></div>                            <div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary btn-large" data-valeur="5">5</button></div>                            <div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary btn-large" data-valeur="6">6</button></div>                            <div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary btn-large" data-valeur="7">7</button></div>                            <div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary btn-large" data-valeur="8">8</button></div>                            <div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary btn-large" data-valeur="9">9</button></div>                            <div class="col-4"><button type="button" class="form-control mb-2 btn btn-dark btn-large" data-valeur=".">.</button></div>                            <div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary btn-large" data-valeur="0">0</button></div>                            <div class="col-4"><button type="button" class="form-control mb-2 btn btn-danger btn-large" data-valeur="C"><i class="fa fa-backspace"></i></button></div>                            <div class="col-12"><button type="button" class="form-control mb-2 btn btn-success btn-large" data-valeur="V" data-id-compo="<?php echo $pdtStock->getId_compo(); ?>"><i class="fa fa-check"></i></button>                            </div>                        </div> <!-- FIN clavier -->                    </div> <!-- FIN alerte -->                </div>                <div class="col mt-3">                    <div class="input-group">                         <span class="input-group-prepend">                                  <span class="input-group-text text-28 gris-9"><i class="fa fa-boxes fa-fw"></i></span>                            </span>                        <input type="text" class="form-control text-100 text-center inputNbColis" name="nb_colis" placeholder="0" value="<?php echo $pdtStock->getNb_colis(); ?>" data-old="<?php echo $pdtStock->getNb_colis(); ?>">                        <span class="input-group-append">                                  <span class="input-group-text text-24 gris-5"><span class="w-50p">colis</span></span>                            </span>                    </div>                    <br>                    <div class="input-group">                             <span class="input-group-prepend">                                  <span class="input-group-text text-28 gris-9"><i class="fa fa-weight fa-fw"></i></span>                            </span>                        <input type="text" class="form-control text-100 text-center inputPoidsPdt" name="poids_pdt" placeholder="0" value="<?php echo $pdtStock->getPoids(); ?>" data-poids-defaut="<?php echo $poidsDefautProduit ?>" data-old="<?php echo $pdtStock->getPoids(); ?>">                        <span class="input-group-append">                                  <span class="input-group-text text-24 gris-5"><span class="w-50p">kg</span></span>                            </span>                    </div>                </div>                <div class="col mt-3">                    <div class="text-28 mb-2 padding-left-2"><?php echo $pdtStock->getNom_produit();?></div>                    <div class="alert alert-secondary mb-2">                        <input type="text" maxlength="158" class="form-control text-20" id="champ_clavier" value="<?php echo $pdtStock->getDesignation(); ?>" data-old="<?php echo $pdtStock->getDesignation(); ?>" placeholder="Désignation personnalisée" />                    </div>                    <div class="alert alert-secondary">                        <ul class="text-24">                            <li><span class="mr-1 text-14 gris-5 w-75p">Client</span><?php echo $pdtStock->getNom_client();?></li>                            <li><span class="mr-1 text-14 gris-5 w-75p">Palette</span><?php echo $pdtStock->getNumero_palette();?></li>                            <li><span class="mr-1 text-14 gris-5 w-75p">Lot</span><?php  echo $pdtStock->getNumlot(); echo $pdtStock->getQuantieme() > 0 ? $pdtStock->getQuantieme() : ''; ?></li>                            <li><span class="mr-1 text-14 gris-5 w-75p"><?php echo $pdtStock->getId_type_froid() == 0 ? 'DLC ' : 'DLUO '; ?></span><?php echo $date_dlc->format('d/m/Y'); ?> </li>                            <li><span class="mr-1 text-14 gris-5 w-75p">Traitement</span><?php								if ($pdtStock->getCode_froid() == 'neg') {									echo 'Négoce';								} else {									echo $pdtStock->getCode_froid() != '' ? $pdtStock->getCode_froid() : 'Frais';								}								?></li>                            <li><span class="mr-1 text-14 gris-5 w-75p">Quantité</span><?php echo $pdtStock->getNb_colis()  ; echo substr(strtolower($pdtStock->getCode_froid()),0,4) == 'srgv' ? ' bloc'.$plurielBlocs : ' colis'; ?></li>                            <li><span class="mr-1 text-14 gris-5 w-75p">Poids</span><?php echo number_format($pdtStock->getPoids(),3, '.', ' ') ; ?> kg</li>                        </ul>                    </div>                </div            </div>	        <?php            // On ne vas pas plus loin, le reste ne concerne le multiple.            exit;        }	    // Ici, plusieurs compos, on affiche la liste        ?>        <div class="row">          <div class="col mt-3">            <table class="table admin table-v-middle ">                <thead>                    <tr>                        <?php if ($utilisateur->isDev()) { ?>                            <th>ID compo</th>                        <?php } ?>                        <th>Client</th>                        <th>Produit</th>                        <th class="text-center">Palette</th>                        <th class="text-center">Nb de colis</th>                        <th class="text-right padding-right-15">Poids (kg)</th>                        <th>Lot</th>                        <th>DLC/DLUO</th>                    </tr>                </thead>                <tbody>        <?php		$sous_total_pdt_colis = 0;		$sous_total_pdt_poids = 0.0;	    // Boucle sur les produits pour liste	    foreach ($produitsStock as $pdtStock) {	        ?>            <tr data-id-compo="<?php echo $pdtStock->getId_compo(); ?>">				<?php				if ($utilisateur->isDev()) { ?>                    <td><i class="fa fa-user-secret mr-1"></i><code><?php echo $pdtStock->getId_compo(); ?></code></td>				<?php }				?>                <td><?php echo $pdtStock->getNom_client();?></td>                <td><?php echo $pdtStock->getDesignation() != '' ? $pdtStock->getDesignation() : $pdtStock->getNom_produit(); ?></td>                <td class="text-center"><?php echo $pdtStock->getNumero_palette();?></td>                <td class="text-center"><?php echo $pdtStock->getNb_colis();?></td>                <td class="text-right"><?php echo number_format($pdtStock->getPoids(),3,'.', ' ');?></td>				<td><?php					if ($pdtStock->getNumlot_regroupement() != '') { ?>						<i class="fa fa-random mr-1 gris-9"></i><?php echo $pdtStock->getNumlot_regroupement(); ?>					<?php } else if ($pdtStock->getCode_froid() == 'neg') {						?><i class="fa fa-sort fa-rotate-90 mr-1 gris-9"></i><?php echo $pdtStock->getNumlot();					} else {						echo $pdtStock->getNumlot();					}					echo intval($pdtStock->getQuantieme()) > 0  && $pdtStock->getNumlot_regroupement() == '' && $pdtStock->getCode_froid() != 'neg' ? $pdtStock->getQuantieme() : '';				?></td>                <td><?php  $date_dlc = new DateTime($pdtStock->getDate_dlc());					echo $date_dlc->format('d/m/Y'); ?></td>            </tr><?php			$sous_total_pdt_colis+= $pdtStock->getNb_colis();			$sous_total_pdt_poids+= $pdtStock->getPoids();        } // FIN boucle sur les produits pour liste        ?>        <tr class="tr-sous-total">			<?php			if ($utilisateur->isDev()) { ?>                <td></td>			<?php }			?>            <td>TOTAL</td>            <td></td>            <td></td>            <td class="text-center"><?php echo $sous_total_pdt_colis;?></td>            <td class="text-right"><?php echo number_format($sous_total_pdt_poids,3, '.', ' ');?></td>            <td></td>            <td></td>        </tr>                </tbody>            </table>          </div>        </div>    <?php	} // FIN étape	/** ----------------------------------------	 * Etape        : 10	 * Description  : Selection palettes     *                (client mixte)	 *  ----------------------------------- */	if ($etape == 10) {		$tiersManager = new TiersManager($cnx);		$ids_clients = isset($_REQUEST['id']) ? $_REQUEST['id'] : '';		$ids_clients_array = explode(',', $ids_clients);        if (empty($ids_clients_array)) { exit('Identification des Tiers impossibles !'); }		$palettes = [];		// Récupération des palettes des clients (toutes les palettes encore ouverte avec des compos pas supprimées et pas archivées)        foreach ($ids_clients_array as $id_client) {            $client = $tiersManager->getTiers($id_client);			if (!$client instanceof Tiers) { exit('Instanciation du Tiers ID#' . $id_client . ' impossible !'); }			$palettes = array_merge($palettes, $tiersManager->getPalettesClient($client));		}		if (empty($palettes)) { ?>            <div class="alert alert-danger mt-4 text-center">                Aucune palette identifiée pour ces clients !<br>Contactez un administrateur...            </div>			<?php exit;		}		$palettesManager = new PalettesManager($cnx);		// Boucle sur les palettes        foreach ($palettes as $palette) {			// On récupère le nombre de produits dans la palette			$nbProduitsPalette = $palettesManager->getNbProduitsPalette($palette, true);			// Si aucun, on affiche pas la palette puisqu'il n'y aura rien de toute façon			if ($nbProduitsPalette == 0) { continue; }			// On récupère le nombre de colis ou blocs en stock pour cette palette			$nbColis = $palettesManager->getNbColisPalette($palette, true);			// On récupère le poids en stock pour cette palette			$poids = $palettesManager->getPoidsPalette($palette, true);            ?>           <div class="card text-white bg-secondary mb-3 carte-lot d-inline-block mr-3 mt-3" style="max-width: 35rem;" data-id-clt="<?php            echo $palette->getId_client(); ?>" data-id-palette="<?php            echo $palette->getId();?>">                <div class="card-header text-14 vmiddle">Palette <span class="text-36 vmiddle pb-1 pl-1"><?php echo $palette->getNumero(); ?></span>                <?php                if ($utilisateur->isDev()) {                    echo '<span class="float-right"><i class="fa fa-user-secret mr-1"></i><span class="texte-fin">Palette ID '.$palette->getId().'</span></span>';				}                ?></div>                <div class="card-body">                    <table>                        <tr>                            <td>Client / dépot</td>                            <th class="text-18 text-right"><?php echo $palette->getNom_client(); ?></th>                        </tr>                        <tr>                            <td>Nombre de produits</td>                            <th class="text-18 text-right"><?php echo $nbProduitsPalette; ?></th>                        </tr>                        <tr>                            <td>Total colis / blocs</td>                            <th class="text-18 text-right"><?php echo $nbColis; ?></th>                        </tr>                        <tr>                            <td>Poids total (Kg)</td>                            <th class="text-18 text-right"><?php echo number_format($poids,3,'.', ' '); ?></th>                        </tr>                    </table>                </div>               <div class="card-footer">                   <?php echo $palette->getStatut_verbose(); ?>               </div>           </div>		<?php        } // FIN boucle sur les palettes        exit;	} // FIN étape	/** ----------------------------------------	 * Etape        : 11	 * Description  : Selection produits	 *                (plateforme stock)	 *  ----------------------------------- */	if ($etape == 11) {		$tiersManager = new TiersManager($cnx);		$id_client = isset($_REQUEST['id']) ? intval($_REQUEST['id']) : 0;		$client = $tiersManager->getTiers($id_client);		if (!$client instanceof Tiers) { exit('Instanciation du Tiers ID#' . $id_client . ' impossible !'); }		// Récupération des produits du client		$produits = $tiersManager->getProduitsClient($client, false);		if (empty($produits)) { ?>            <div class="alert alert-danger mt-4 text-center">                Aucune produit identifiée pour ce client !<br>Contactez un administrateur...            </div>			<?php exit;		}		$palettesManager = new PalettesManager($cnx);		// Boucle sur les produits en stock		foreach ($produits as $produit) {            $nbPalettesProduit = $palettesManager->getNbPalettesProduit($produit, $client);			// On récupère le nombre de colis ou blocs en stock pour ce produit			$nbColis = $palettesManager->getNbColisProduit($produit, $client);			// On récupère le poids en stock pour ce produit			$poids = $palettesManager->getPoidsProduit($produit, $client, false, true);			?>            <div class="card text-white bg-secondary mb-3 carte-lot d-inline-block mr-3 mt-3" style="max-width: 35rem;" data-id-clt="<?php			echo $client->getId(); ?>" data-id-pdt="<?php			echo $produit->getId();?>">                <div class="card-header text-14 vmiddle"><?php echo $produit->getNom(); ?></div>                <div class="card-body">                    <table>                        <tr>                            <td>Nombre de palettes</td>                            <th class="text-18 text-right"><?php echo $nbPalettesProduit; ?></th>                        </tr>                        <tr>                            <td>Total colis / blocs</td>                            <th class="text-18 text-right"><?php echo $nbColis; ?></th>                        </tr>                        <tr>                            <td>Poids total (Kg)</td>                            <th class="text-18 text-right"><?php echo number_format($poids,3,'.', ' '); ?></th>                        </tr>                    </table>                </div>            </div>			<?php		} // FIN boucle sur les palettes	} // FIN étape	exit;} // FIN mode/* ------------------------------------------FONCTION --------------------------------------------*/function modeShowTableauStockProduits($params = []) {    global $cnx, $utilisateur;	$produitsManager = new ProduitManager($cnx);	$lotNegoceManager = new LotNegoceManager($cnx);	if (empty($params) && isset($_SESSION['stkfiltres'])) {		$params = $_SESSION['stkfiltres'];    }	// On rajoute qu'on ne veux rien qui soit déjà dans un BL !	$params['hors_bl'] = true;	// Ni aucune compos de produit frais    $params['hors_frais'] = true;	// 18/01/21 - Si aucun filtre, trop de résultat, ça fait planter la prod, on s'assure donc qu'il y a bien au moins un des filtres manuel activé	if (   !isset($params['journee'])        && !isset($params['lot'])        && !isset($params['froid'])        && !isset($params['client'])        && !isset($params['clients'])        && !isset($params['produit'])        && !isset($params['produits'])        && !isset($params['palette'])    ) { ?>        <div class="row">            <div class="col mt-3">                <div class="alert alert-secondary text-center text-30 padding-50">                    <i class="fa fa-info-circle fa-lg mb-2"></i>                    <p class="nomargin">Aucun filtre sélectionné</p>                    <p class="text-16">Effectuez une recherche en utilisant les filtres ci-contre.</p>                </div>            </div>        </div>        <!-- Totaux pour le ticket -->        <input type="hidden" id="totalStockPdtsNbColis" value="0"/>        <input type="hidden" id="totalStockPdtsPoids"   value="0"/>        <input type="hidden" id="idsLots" value="0"/>    <?php exit; }	// On récupère les produits en stock    $produitsStockSeuls = $produitsManager->getProduitsStock($params);	// On récupère les produits de négoce...	$produitsNegoce = $lotNegoceManager->getProduitsNegoceStock($params);	$produitsStock = array_merge($produitsStockSeuls, $produitsNegoce);	    // Mise en mémoire session des filtres actifs pour filtres adaptatifs    $_SESSION['stkfiltres'] = $params;    if (!isset($params['palettes'])) {		$params['palettes'] = '';    }    // 23/11/2020 - On n'affiche pas les sous-totaux par produit si on est sur un filtre client + palette    $modeMixte =        ((isset($params['client']) && $params['client'] != '' && (int)$params['client'] != 0)         || (isset($params['clients']) && $params['clients'] != ''))        && isset($params['palettes']) && $params['palettes'] != '' && (int)$params['palettes'] != 0;    if (strpos($params['palettes'], '|') !== false) {		//$modeMixte = false;	}    // 18/01/21 - Il faut trier par palette avant tout si on est en filtre client + palette    if ($modeMixte) {		function cmp($a, $b) {			return strcmp($a->getId_palette(), $b->getId_palette());		}		usort($produitsStock, "cmp");    }	// Si aucun produit en stock...    if (!$produitsStock || empty($produitsStock)) { ?>		<div class="row">			<div class="col mt-3">				<div class="alert alert-warning text-center text-30 padding-50">					<i class="fa fa-exclamation-circle fa-lg mb-2"></i>                    <p class="nomargin">Aucun produit en stock</p>                    <p class="text-16">correspondant aux critères sélectionnés.</p>				</div>			</div>		</div>        <!-- Totaux pour le ticket -->        <input type="hidden" id="totalStockPdtsNbColis" value="0"/>        <input type="hidden" id="totalStockPdtsPoids"   value="0"/>        <input type="hidden" id="idsLots" value="0"/>    	<?php exit;	} // FIN aucun produit en stock	// Ici on une liste de produits en stock, on affiche le tableau (Front)	?>	<div class="row">		<div class="col mt-3">			<table class="table admin table-v-middle ">				<thead>					<tr>						<?php						if ($utilisateur->isDev()) { ?>							<th>ID compo</th>						<?php }						?>						<th>Client</th>						<th>Produit</th>						<th class="text-center">Palette</th>						<th class="text-center">Nb de colis</th>						<th class="text-right padding-right-15">Poids (kg)</th>						<th>Lot</th>						<th>Date froid</th>						<th>DLC/DLUO</th>						<th class="t-actions pointeur text-center">                            <input type="checkbox" class="icheck check-tout">                        </th>					</tr>				</thead>				<tbody class="stksfr">				<?php				// Gestion des sous-totaux par produit				$id_pdt                 	= 0;				$id_palette             	= 0;				$sous_total_pdt_poids   	= 0;				$sous_total_palette_poids   = 0;				$sous_total_pdt_colis   	= 0;				$sous_total_palette_colis   = 0;				$nb_pdts_idem           	= 1;				$nb_palettes_idem       	= 1;				$total_poids				= 0.0;				$total_nb_colis				= 0;				$numero_palette_precedente  = 0;				$nom_produit_precedent      = '';				$ids_lots               	= [];				$nbLignesPdtCss             = 0;				foreach ($produitsStock as $pdtStock) {					// Total général (pour le ticket)					$total_poids 		  = $total_poids 		  + $pdtStock->getPoids();					$total_nb_colis 	  = $total_nb_colis 	  + $pdtStock->getNb_colis();					// Sous-total					$sous_total_pdt_poids = $sous_total_pdt_poids + $pdtStock->getPoids();					$sous_total_pdt_colis = $sous_total_pdt_colis + $pdtStock->getNb_colis();					$sous_total_palette_poids = $sous_total_palette_poids + $pdtStock->getPoids();					$sous_total_palette_colis = $sous_total_palette_colis + $pdtStock->getNb_colis();					// On concatène les ID de lot pour le filtre                    if ($pdtStock->getCode_froid() == 'neg') {						$ids_lots['N'.$pdtStock->getId_lot()] = 'N'.$pdtStock->getId_lot();                    } else {						$ids_lots[$pdtStock->getId_lot()] = $pdtStock->getId_lot();                    }					// On rajoute les lots de regroupement...                    if ($pdtStock->getId_lot_regroupement() > 0) {						$ids_lots['R'.$pdtStock->getId_lot_regroupement()] = 'R'.$pdtStock->getId_lot_regroupement();                    }                    // Gestion des sous-totaux par palette : si on change de palette                    if ($pdtStock->getId_palette() != $id_palette || $pdtStock->getId_produit() != $id_pdt) {						// ON échape la première ligne						if ($id_palette > 0) {							// On affiche le sous-total                            //if (!$modeMixte) {                            if (!$modeMixte || ($modeMixte && $pdtStock->getId_palette() != $id_palette)) {								$sous_total_palette_colis = $sous_total_palette_colis - $pdtStock->getNb_colis();								$sous_total_palette_poids = $sous_total_palette_poids - $pdtStock->getPoids();							?>							<tr class="tr-sous-sous-total">								<?php								if ($utilisateur->isDev()) { ?>									<td></td>								<?php }								?>								<td colspan="3"><i class="fa fa-pallet fa-fw text-white mr-1"></i> TOTAL PALETTE <?php echo $numero_palette_precedente; ?></td>								<td class="text-center"><?php echo $sous_total_palette_colis;?></td>								<td class="text-right"><?php echo number_format($sous_total_palette_poids,3, '.', ' ');?></td>								<td></td>								<td></td>								<td></td>                                <td class="icheck-td pointeur padding-15 text-center check-sous-sous-total" data-id-pdt="<?php echo $id_pdt; ?>" data-id-palette="<?php echo $id_palette; ?>">                                    <input type="checkbox" class="icheck">                                </td>							</tr>							<?php								// on réinitialise les compteurs								$sous_total_palette_poids =  $pdtStock->getPoids();								$sous_total_palette_colis =  $pdtStock->getNb_colis();								$nb_palettes_idem           = 1;                            }							$nbLignesPdtCss = 0;						}  // FIN test première ligne						// On note qu'on est sur une nouvelle palette						$id_palette = $pdtStock->getId_palette();					// Gestion des sous-totaux par palette : si on est sur la même palette					} else {						$nb_palettes_idem++;					} // FIN test changement de produit					// Gestion des sous-totaux par produit : si on change de produit					if ($pdtStock->getId_produit() != $id_pdt )  {						// ON échape la première ligne						if ($id_pdt > 0) {							// On retire la valeur de la ligne en cours							$sous_total_pdt_colis = $sous_total_pdt_colis - $pdtStock->getNb_colis();							$sous_total_pdt_poids = $sous_total_pdt_poids - $pdtStock->getPoids();							// A l'époque d'Adam et Eve l'expression "Etre dur de la feuille" n'avait pas du tout la même signification... O_o							// On affiche le sous-total							if (!$modeMixte) {							?>                            <tr class="tr-sous-total">								<?php								if ($utilisateur->isDev()) { ?>									<td></td>								<?php }								?>                                <td colspan="3"><i class="fa fa-barcode fa-fw text-white mr-1"></i> TOTAL <?php echo $nom_produit_precedent; ?></td>                                <td class="text-center"><?php echo $sous_total_pdt_colis;?></td>                                <td class="text-right"><?php echo number_format($sous_total_pdt_poids,3, '.', ' ');?></td>                                <td></td>                                <td></td>                                <td></td>								<td class="icheck-td pointeur padding-15 text-center check-sous-total" data-id-pdt="<?php echo $id_pdt; ?>">									<input type="checkbox" class="icheck">								</td>                            </tr>							<?php                            }							$nbLignesPdtCss = 0;							// on réinitialise les compteurs							$sous_total_pdt_poids =  $pdtStock->getPoids();							$sous_total_pdt_colis =  $pdtStock->getNb_colis();							$nb_pdts_idem           = 1;						}  // FIN test première ligne						// On note qu'on est sur un nouveau produit						$id_pdt = $pdtStock->getId_produit();					// Gestion des sous-totaux par produit : si on est sur le même produit					} else {						$nb_pdts_idem++;					} // FIN test changement de produit				    $nbLignesPdtCss++;					?>				    <tr data-id-compo="<?php echo $pdtStock->getId_compo(); ?>" class="<?php echo $nbLignesPdtCss %2 == 0 ? 'stkpdteven' : ''; ?>">						<?php						if ($utilisateur->isDev()) { ?>							<td><i class="fa fa-user-secret mr-1"></i><code><?php echo $pdtStock->getId_compo(); ?></code></td>						<?php }						?>                        <td><?php echo $pdtStock->getNom_client();?></td>                        <td class="nowrap"><span class="texte-fin text-12 gris-7 w-50p"><?php echo $pdtStock->getCode_produit() != '' ? $pdtStock->getCode_produit() : '&mdash;';?></span><?php echo $pdtStock->getDesignation() != '' ? $pdtStock->getDesignation() : $pdtStock->getNom_produit();?></td>                        <td class="text-center"><?php echo $pdtStock->getNumero_palette() > 0 ? $pdtStock->getNumero_palette() : '&mdash;';?></td>                        <td class="text-center td-nb-colis"><?php echo $pdtStock->getNb_colis();?></td>                        <td class="text-right td-poids"><?php echo number_format($pdtStock->getPoids(),3,'.', ' ');?></td>                        <td><?php							if ($pdtStock->getNumlot_regroupement() != '') { ?>								<i class="fa fa-random mr-1 gris-9"></i><?php echo $pdtStock->getNumlot_regroupement(); ?>							<?php } else if ($pdtStock->getCode_froid() == 'neg') {								?><i class="fa fa-sort fa-rotate-90 mr-1 gris-9"></i><?php echo $pdtStock->getNumlot();							} else {								echo $pdtStock->getNumlot();                            }							echo intval($pdtStock->getQuantieme()) > 0  && $pdtStock->getNumlot_regroupement() == '' && $pdtStock->getCode_froid() != 'neg' ? $pdtStock->getQuantieme() : '';							?></td>						<td><?php echo $pdtStock->getDate_froid() != '' && $pdtStock->getDate_froid() != '0000-00-00 00:00:00' ? Outils::dateSqlToFr($pdtStock->getDate_froid()) : '&mdash;'; ?></td>                        <td><?php  $date_dlc = new DateTime($pdtStock->getDate_dlc());                        echo $date_dlc->format('d/m/Y'); ?></td>                        <td class="t-actions icheck-td pointeur padding-15 check-pdt-<?php echo $id_pdt;?> check-palette-<?php echo $id_palette;?>">							<input type="checkbox" class="icheck">						</td>                    </tr>                    <?php					$numero_palette_precedente = $pdtStock->getNumero_palette();					$nom_produit_precedent = $pdtStock->getNom_produit();				} // FIN boucle Produits Stock                // On affiche la dernière ligne de total				?>                <tr class="tr-sous-sous-total">					<?php					if ($utilisateur->isDev()) { ?>                        <td></td>					<?php }					?>                    <td colspan="3"><i class="fa fa-pallet text-white fa-fw mr-1"></i> TOTAL PALETTE <?php echo $numero_palette_precedente; ?></td>                    <td class="text-center"><?php echo $sous_total_palette_colis;?></td>                    <td class="text-right"><?php echo number_format($sous_total_palette_poids,3, '.', ' ');?></td>                    <td></td>                    <td></td>                    <td></td>                    <td class="icheck-td pointeur padding-15 text-center check-sous-sous-total" data-id-pdt="<?php echo $id_pdt; ?>" data-id-palette="<?php echo $id_palette; ?>">                        <input type="checkbox" class="icheck">                    </td>                </tr>                <?php	            if (!$modeMixte) {                ?>                <tr class="tr-sous-total">					<?php					if ($utilisateur->isDev()) { ?>						<td></td>					<?php }					?>                    <td colspan="3"><i class="fa fa-barcode fa-fw text-white mr-1"></i> TOTAL <?php echo $nom_produit_precedent; ?></td>                    <td class="text-center"><?php echo $sous_total_pdt_colis;?></td>                    <td class="text-right"><?php echo number_format($sous_total_pdt_poids,3, '.', ' ');?></td>                    <td></td>                    <td></td>                    <td></td>					<td class="icheck-td pointeur padding-15 text-center check-sous-total" data-id-pdt="<?php echo $id_pdt; ?>">						<input type="checkbox" class="icheck">					</td>                </tr>                <?php } ?>				</tbody>			</table>			<!-- Totaux pour le ticket -->			<input type="hidden" id="totalStockPdtsNbColis" value="<?php echo $total_nb_colis;?>"/>			<input type="hidden" id="totalStockPdtsPoids"   value="<?php echo $total_poids; ?>"/>			<input type="hidden" id="idsLots" value="<?php echo implode(',',$ids_lots); ?>"/>		</div>	</div>	<?php	exit;} // FIN showTableauStockProduits/* ------------------------------------------MODE - Charge le ticket-------------------------------------------*/function modeChargeTicket() {	global	$cnx, $utilisateur, $gescom;	// Récupération des variables	$etape = isset($_REQUEST['etape']) ? intval($_REQUEST['etape']) : 0;	$identifiant = isset($_REQUEST['id']) ? $_REQUEST['id'] : '';	$err = '<span class="badge danger badge-pill text-14">ERREUR !</span>';	// Récupèration des totaux	$total_nb_colis = isset($_REQUEST['total_nb_colis']) ? intval($_REQUEST['total_nb_colis']) : 0;	$total_poids 	= isset($_REQUEST['total_poids']) 	 ? floatval($_REQUEST['total_poids'])  : 0;	/** ----------------------------------------	 * TICKET	 * Etape        : 1	 * Contexte    : Liste des produits stock	 * Description  : Boutons filtres	 *  ----------------------------------- */	if ($etape == 0) {	    ?>          <div class="alert alert-secondary text-24 text-center pl-0 pr-0 mb-1">              &mdash;          </div>        <div class="mb-4"><i class="fa fa-chevron-left mr-1"></i>            Sélectionnez clients/dépots&hellip;        </div>        <button type="button" class="btn btn-success hid mt-2 btn-lg form-control btnSelectCltsOk text-left mb-3"><i class="fa fa-check fa-lg vmiddle mr-2"></i>Sélectionner</button>	<?php	}	if ($etape == 10 || $etape == 11) {	    $sujet = $etape == 10 ? 'palettes' : 'produits';		$tiersManager = new TiersManager($cnx);		$ids_clients = isset($_REQUEST['id']) ? $_REQUEST['id'] : '';		if ($ids_clients == '') { exit('Identification du Tiers impossible !'); }		$ids_clients_array = explode(',', $ids_clients);		if (empty($ids_clients_array)) { exit('Identification des Tiers impossible !'); }        ?>        <div class="alert alert-secondary text-24 text-center pl-0 pr-0 mb-2" id="idClientEtape0" data-ids-clts="<?php echo $ids_clients; ?>">            <ul class="mb-0">        <?php		foreach ($ids_clients_array as $id_client) {			$client = $tiersManager->getTiers($id_client);			if (!$client instanceof Tiers) { exit('Instanciation du Tiers ID#' . $id_client . ' impossible !'); }			echo '<li>'.$client->getNom().'</li>';		}    	?>            </ul>        </div>        <button type="button" class="btn btn-outline-secondary btn-lg form-control btnRetourEtape0 text-left mb-4"><i class="fa fa-undo fa-lg vmiddle mr-2"></i>Changer</button>        <div class="mb-1"><i class="fa fa-chevron-left mr-1"></i>            Sélectionnez les <?php echo $sujet; ?>&hellip;        </div>        <button type="button" class="btn btn-success btn-lg form-control btnSelection<?php echo ucfirst(strtolower($sujet));?> disabled text-left mb-4" disabled><i class="fa fa-check vmiddle mr-2"></i>Afficher le stock</button>		<?php	}	/** ----------------------------------------	 * TICKET	 * Etape        : 1	 * Contexte    : Liste des produits stock	 * Description  : Bouton retour avant BL	 *  ----------------------------------- */	if ($etape == 1) { ?>        <button type="button" class="btn btn-outline-secondary btn-lg form-control btnRetourEtape0 text-left mb-3"><i class="fa fa-undo fa-lg vmiddle mr-2"></i>Retour</button>	<?php }	/** ----------------------------------------	 * TICKET	 * Etape     : TOUTES	 * Contexte  : Bouton charger BL en attente	 *  ----------------------------------- */    if ($utilisateur->isGescom()) {		?>        <a href="<?php echo __CBO_ROOT_URL__; ?>bls-attente.php" class="btn btn-outline-warning btn-lg form-control btnChargerBlAttente text-left mt-2 mb-2">Charger un BL en attente</a>		<?php	}	/** ----------------------------------------	 * TICKET	 * Etape        : 1	 * Contexte    : Liste des produits stock	 * Description  : Boutons filtres	 *  ----------------------------------- */	if ($etape == 1) {	    $filtres = isset($_SESSION['stkfiltres']) ? $_SESSION['stkfiltres'] : [];		// On affiche les filtres...		?>        <div class="text-center"><button type="button" class="btn btn-dark btnShowHideFiltres"><i class="fa fa-ellipsis-h"></i></button></div>        <div id="filtresTicket" class="hid">            <button type="button" class="btn btn-secondary btn-lg mb-2 form-control btn-filtre text-left " data-filtre="journee" data-modale="0">                <input type="hidden" value="0"/>                <i class="fas fa-calendar fa-fw mr-2"></i> Journée            </button>            <button type="button" class="btn btn-secondary btn-lg mb-2 form-control btn-filtre text-left" data-filtre="lot" data-modale="1">                <input type="hidden" value="0"/>                <i class="fa fa-box fa-fw mr-2"></i> Lot&hellip;            </button>            <button type="button" class="btn btn-secondary btn-lg mb-2 form-control btn-filtre text-left" data-filtre="froid" data-modale="1">                <input type="hidden" value="0"/>                <i class="fas fa-snowflake fa-fw mr-2"></i> Traitement&hellip;            </button>            <button type="button" class="btn btn-<?php            echo isset($filtres['client']) && $filtres['client'] != '' ? 'info' : 'secondary'; ?> btn-lg mb-2 form-control btn-filtre text-left <?php            echo isset($filtres['client']) && $filtres['client'] != '' ? 'active' : ''; ?>" data-filtre="client" data-modale="1">                <input type="hidden" value="<?php echo isset($filtres['client'])  ? $filtres['client'] : '0'; ?>"/>                <i class="fas fa-address-card fa-fw mr-2"></i> Client&hellip;            </button>            <button type="button" class="btn btn-<?php            echo isset($filtres['produits']) && $filtres['produits'] != '' ? 'info' : 'secondary'; ?> btn-lg mb-2 form-control btn-filtre text-left <?php            echo isset($filtres['produits']) && $filtres['produits'] != '' ? 'active' : ''; ?>" data-filtre="produit" data-modale="1">                <input type="hidden" value="<?php echo isset($filtres['produits'])  ? $filtres['produits'] : '0'; ?>"/>                <i class="fas fa-dolly fa-fw mr-2"></i> Produit&hellip;            </button>            <button type="button" class="btn btn-<?php            echo isset($filtres['palettes']) && $filtres['palettes'] != '' ? 'info' : 'secondary'; ?> btn-lg mb-2 form-control btn-filtre text-left <?php            echo isset($filtres['palettes']) && $filtres['palettes'] != '' ? 'active' : ''; ?>" data-filtre="palette" data-modale="1">                <input type="hidden" value="<?php echo isset($filtres['palettes'])  ? $filtres['palettes'] : ''; ?>"/>                <i class="fas fa-pallet fa-fw mr-2"></i> Palette&hellip;            </button>        </div>		<?php		// On affiche les totaux si on les a...		if ($total_nb_colis > 0 && $total_poids > 0) { ?>			<div class="row mt-3 mb-3 gris-9">				<div class="col">					<h4 class="text-20">Total affiché</h4>				</div>				<div class="col text-right">					<span class="text-20" id="ticketNbColis"><?php echo $total_nb_colis; ?></span> colis<br>					<span class="text-20" id="ticketPoids"><?php echo number_format($total_poids,3, '.', ' '); ?></span> kg				</div>			</div>		<!-- Conteneur pour le nombre d'éléments sélectionnés et bouton action groupées -->		<div class="row">			<div class="col-12 text-center">				<span class="gris-c nb-selectionnes texte-fin">Aucun élément sélectionné&hellip;</span>            </div>        </div>        <div class="row mt-3 mb-3 total-selectionnes hid">            <div class="col">                <h4 class="text-20">Total sélection</h4>            </div>            <div class="col text-right">                <span class="text-20" id="ticketNbColisSelection"></span> colis<br>                <span class="text-20" id="ticketPoidsSelection"></span> kg            </div>        </div>        <div class="row">            <div class="col-12 text-center">				<div class="mt-1 conteneurBtnCorrection" style="display: none;">					<div class="padding-bottom-5 text-center"><i class="fa fa-caret-down"></i></div>					<button type="button" class="btn btn-lg btn-info form-control btnEditSelection">						<i class="fa fa-tasks float-left padding-top-5"></i> Correction					</button>				</div>			</div>		</div>		<?php		} // FIN totaux		exit;	} // FIN ETAPE 1	/** ----------------------------------------	 * TICKET	 * Etape        : 2	 * Contexte    : Corrections	 * Description  : -	 *  ----------------------------------- */	if ($etape == 2) {	    // On stock les IDs des compos sélectionnés pour le listener du ticket ?>        <input type="hidden" id="idsCompos" value="<?php echo $identifiant; ?>"/>        <button type="button" class="btn btn-danger btn-lg form-control btnRetourEtape1 text-left mb-4"><i class="fa fa-undo fa-lg vmiddle mr-2"></i>Annuler</button>        <button type="button" class="btn btn-secondary btn-lg form-control btnTransfertClient text-left mb-2 position-relative">            <i class="fa fa-address-card vmiddle mr-2"></i>            <i class="fa fa-exchange-alt ifa-abs text-warning"></i>            Transfert client/dépot</button>        <button type="button" class="btn btn-secondary btn-lg form-control btnTransfertPalette text-left mb-2 position-relative">            <i class="fa fa-pallet vmiddle mr-2"></i>            <i class="fa fa-exchange-alt ifa-abs text-warning"></i>            Transfert palette</button>        <button type="button" class="btn btn-secondary btn-lg form-control btnSupprPalette text-left mb-2 position-relative">            <i class="fa fa-pallet vmiddle mr-2"></i>            <i class="fa fa-times ifa-abs text-danger"></i>            Retirer de la palette</button>        <button type="button" class="btn btn-secondary btn-lg form-control btnLotRegroupement text-left mb-4 position-relative">            <i class="fa fa-box vmiddle mr-2"></i>            <i class="fa fa-compress-arrows-alt ifa-abs text-pourpre text-18"></i>            Lot de regroupement</button>		<?php if ($utilisateur->isGescom()) { ?>        <button type="button" class="btn btn-outline-warning btn-lg form-control btnBonTransfert text-left mb-2"><i class="fa fa-sign-out-alt fa-fw mr-2"></i>Bon de transfert</button><a href="" target="_blank" download id="lienPdf"></a>        <button type="button" class="btn btn-outline-warning btn-lg form-control btnBonLivraison text-left">			<i class="fa fa-truck fa-fw mr-2"></i>			Bon de livraison</button>        <?php } // FIN test gescom ou Dev	} // FIN ETAPE 2} // FIN charge ticket/* ------------------------------------------MODE - Affiche la modale de filtre-------------------------------------------*/function modeModalFiltreStockPdt() {	global $cnx, $utilisateur;	$filtre = isset($_REQUEST['filtre']) ? trim(strtolower($_REQUEST['filtre'])) : '';	$id_lots = isset($_REQUEST['id_lots']) ? $_REQUEST['id_lots'] : '';	if ($filtre == '') { ?><!-- ERREUR -->        <div class="alert alert-danger"><strong>ERRREUR !</strong><br>Identification du filtre impossible !<br>Code erreur : DC8A9WIG</div>    <?php exit; }    $fonction = 'htmlModaleFiltre'.ucfirst($filtre);	if (!function_exists($fonction)) { ?><!-- ERREUR -->        <div class="alert alert-danger"><strong>ERRREUR !</strong><br>Identification de la fonction du filtre impossible !<br>Code erreur : L8JKFKVI</div>		<?php exit;    }	$fonction($id_lots);	exit;} // FIN mode/* ------------------------------------------MODE - Filtre la liste-------------------------------------------*/function modeFiltresListe() {    global $cnx, $utilisateur;    $filtres_data = isset($_REQUEST['filtres']) ? explode(',', $_REQUEST['filtres']) : [];    $filtres = [];    foreach ($filtres_data as $filtre_data) {        $detail = explode(':', $filtre_data);		if ($detail[0] == 'lot' && substr($detail[1], 0,1 ) == 'R') {            $filtres['lot_r'] = substr($detail[1],-1);        } else if ($detail[0] == 'lot' && substr($detail[1], 0,1 ) == 'N') {			$filtres['lot_n'] = substr($detail[1],-1);		}  else if ($detail[0] == 'froid' && substr($detail[1], 0,1 ) == 'N') {			$filtres['froid'] = -1; // Pour ne retourner aucun traitement de froid		} else {			$filtres[$detail[0]] = isset($detail[1]) ? $detail[1] : 0;        }    }	modeShowTableauStockProduits($filtres);    exit;} // FIN mode/* ------------------------------------------FONCTION DEPORTEE - Contenu modale filtre > Sélection d'un client-------------------------------------------*/function htmlModaleFiltreClient() {    global $cnx;    ?>	<div class="row">		<div class="col text-16">			<div class="mb-2">				<i class="fa fa-caret-down gris-9 mr-1"></i> Sélectionnez un client&hellip;			</div>		</div>	</div>	<div class="row">		<?php		// On récupère la liste des clients visibles		$tiersManager = new TiersManager($cnx);		$params = ['visibilite_palettes' => 1];		$filtesActifs = $_SESSION['stkfiltres'];		if (isset($filtesActifs['produit'])) {			$params['id_produit'] = $filtesActifs['produit'];		}		if (isset($filtesActifs['palette'])) {			$params['id_palette'] = $filtesActifs['palette'];		}		if (isset($filtesActifs['palettes'])) {			$params['id_palettes'] = $filtesActifs['palettes'];		}		if (isset($filtesActifs['froid'])) {			$params['id_froid'] = $filtesActifs['froid'];		}		if (isset($filtesActifs['lot'])) {			$params['id_lot'] = $filtesActifs['lot'];		}		$listeClients = $tiersManager->getListeClients($params);		// Si aucun client visible		if (empty($listeClients)) { ?>			<div class="alert alert-danger">Aucun client visible...<br>Contactez un administrateur.</div>		<?php } // FIN test aucun client visible		// On boucle sur les clients visibles		foreach ($listeClients as $clt) { ?>			<div class="col-4 mb-2">				<button type="button" class="btn btn-secondary btn-lg form-control text-16 btnChoix" data-id="<?php echo $clt->getId(); ?>">					<?php echo Outils::cleanCut($clt->getNom(), 30); ?>				</button>			</div>		<?php } // FIN boucle clients visibles		?>	</div><?php} // FIN fonction/* ------------------------------------------FONCTION DEPORTEE - Contenu modale filtre> Sélection d'un lot-------------------------------------------*/function htmlModaleFiltreLot($ids_lots = '') {	global $cnx;	?>    <div class="row">        <div class="col text-16">            <div class="mb-2">                <i class="fa fa-caret-down gris-9 mr-1"></i> Sélectionnez un lot&hellip;            </div>        </div>    </div>    <div class="row">        <?php		$lotsManager = new LotManager($cnx);        $lotNegoceManager = new LotNegoceManager($cnx);		$idsLots = explode(',', $ids_lots);        foreach ($idsLots as $id_lot) {            $lot = substr($id_lot,0,1) === 'R' ?  $lotsManager->getLotRegroupement(substr($id_lot,1)) :  $lotsManager->getLot($id_lot);            if (substr($id_lot,0,1) === 'N') {				$lot = $lotNegoceManager->getLotNegoce(substr($id_lot,1));            }            if (!$lot instanceof Lot && !$lot instanceof LotRegroupement && !$lot instanceof LotNegoce) { continue; }  ?>            <div class="col-4 mb-2">                <button type="button" class="btn btn-secondary btn-lg form-control text-16 btnChoix" data-id="<?php echo $id_lot; ?>">					<?php                    echo substr($id_lot,0,1) === 'R'  ? '<i class="fa fa-random mr-1 gris-c"></i>' : '';                    echo substr($id_lot,0,1) === 'N'  ? '<i class="fa fa-sort fa-rotate-90 mr-1 gris-c"></i>' : '';                    echo $lot->getNumlot(); ?>                </button>            </div>			<?php        } // FIN boucle sur les lots        if (empty($idsLots) || $ids_lots == 0 || (int)$ids_lots[0] == 0) { ?>            <div class="col alert alert-warning text-center">                Aucun lot disponible dans les produits en stocks affichés...            </div>        <?php }		?>    </div>	<?php} // FIN fonction/* ------------------------------------------FONCTION DEPORTEE - Contenu modale filtre> Sélection d'un traitement (code)-------------------------------------------*/function htmlModaleFiltreFroid() {	global $cnx;	?>	<div class="row">		<div class="col-7">			<div class="alert alert-secondary">				<div class="input-group clavier clavier-froid text-14">					<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="1">1</button></div>					<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="2">2</button></div>					<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="3">3</button></div>					<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="4">4</button></div>					<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="5">5</button></div>					<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="6">6</button></div>					<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="7">7</button></div>					<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="8">8</button></div>					<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="9">9</button></div>					<div class="col-4"><button type="button" class="form-control mb-2 btn btn-dark padding-15 btn-large" data-valeur="N"><span class="text-18">Negoce</span></button></div>					<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="0">0</button></div>					<div class="col-4"><button type="button" class="form-control mb-2 btn btn-danger padding-15 btn-large" data-valeur="C"><i class="fa fa-backspace"></i></button></div>				</div>			</div> <!-- FIN alerte -->		</div>		<div class="col-5 text-left">			<i class="fa fa-caret-left gris-9 mr-1"></i><span class="text-16 vtbottom">Entrez le code du traitement&hellip;</span>			<div class="alert alert-info text-14 texte-fin">				<i class="fa fa-info-circle mr-2"></i> Saisissez juste le numéro du traitement. Par exemple pour la congélation CGL0027, entrez simplement « 27 ».			</div>			<div class="codeTraitementSaisi text-100 text-center gris-5"></div>		</div>	</div>	<?php} // FIN fonction/* ------------------------------------------FONCTION DEPORTEE - Contenu modale filtre> Sélection d'un produit-------------------------------------------*/function htmlModaleFiltreProduit() {	global $cnx;	$produitsManager = new ProduitManager($cnx);	?>	<div id="referencesProduits" class="text-left">		<i class="fa fa-caret-down gris-9 mr-1"></i> <span class="gris-5 text-16">Liste des codes produits</span>		<div class="alert alert-secondary text-13">			<div class="row">			<?php			$params = [];			$liste = $produitsManager->getListeProduits($params);			foreach ($liste as $pdt) { ?>				<div class="col-6 texte-fin margin-bottom-2">					<span class="badge badge-info mr-1 texte-fin text-13"><?php echo $pdt->getCode(); ?></span>					<?php echo $pdt->getNom(); ?>				</div>			<?php }	?>		</div>		</div>	</div>	<div id="selectionProduits">		<div class="row">			<div class="col-6">				<div class="alert alert-secondary">					<div class="alert alert-light text-50 codeProduit padding-5-10">&nbsp;</div>					<div class="input-group clavier clavier-produit text-14">						<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="1">1</button></div>						<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="2">2</button></div>						<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="3">3</button></div>						<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="4">4</button></div>						<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="5">5</button></div>						<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="6">6</button></div>						<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="7">7</button></div>						<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="8">8</button></div>						<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="9">9</button></div>						<div class="col-4"><button type="button" class="form-control mb-2 btn btn-dark padding-15 btn-large" data-valeur="I"><i class="fa fa-info-circle"></i></button></div>						<div class="col-4"><button type="button" class="form-control mb-2 btn btn-secondary padding-15 btn-large" data-valeur="0">0</button></div>						<div class="col-4"><button type="button" class="form-control mb-2 btn btn-danger padding-15 btn-large" data-valeur="C"><i class="fa fa-backspace"></i></button></div>					</div>				</div> <!-- FIN alerte -->			</div>			<div class="col-6">				<div class="row" id="listeProduitsCode">					<i class="fa fa-caret-left fa-lg mr-2 gris-c padding-top-20"></i><span class="text-18 gris-5 padding-top-15">Recherhe par code article...</span>				</div>			</div>		</div>	</div>	<?php} // FIN fonction/* ------------------------------------------FONCTION DEPORTEE - Contenu modale filtre > Sélection d'une palette-------------------------------------------*/function htmlModaleFiltrePalette() {	global $cnx;	?>    <div class="row">        <div class="col text-16">            <div class="mb-2">                <i class="fa fa-caret-down gris-9 mr-1"></i> Sélectionnez une palette&hellip;            </div>        </div>    </div>    <div class="row">		<?php		// On récupère la liste des palettes en cours		$palettesManager = new PalettesManager($cnx);		$params = ['vides' => false, 'statuts' => '0,1', 'froid_termine' => true, 'hors_frais' => true];		$filtesActifs = $_SESSION['stkfiltres'];		if (isset($filtesActifs['produit'])) {		    $params['id_produit'] = $filtesActifs['produit'];        }		if (isset($filtesActifs['produits'])) {			$params['id_produits'] = $filtesActifs['produits'];		}		if (isset($filtesActifs['client'])) {			$params['id_client'] = $filtesActifs['client'];		}		if (isset($filtesActifs['froid'])) {			$params['id_froid'] = $filtesActifs['froid'];		}		if (isset($filtesActifs['lot'])) {			$params['id_lot'] = $filtesActifs['lot'];		}		$listePalettes = $palettesManager->getListePalettes($params);		// Si aucune palette		if (empty($listePalettes)) { ?>            <div class="alert alert-danger">Aucune palette...<br>Contactez un administrateur.</div>		<?php } // FIN test aucuns palette		// On boucle sur les palettes		foreach ($listePalettes as $pal) { ?>            <div class="col-2 mb-2">                <button type="button" class="btn btn-secondary btn-lg form-control btnChoix" data-id="<?php echo $pal->getId(); ?>">					<span class="text-24"><?php echo $pal->getNumero(); ?></span>					<div class="texte-fin text-12"><?php echo Outils::dateSqlToFr($pal->getDate()); ?></div>                </button>            </div>		<?php } // FIN boucle palettes		?>    </div>	<?php} // FIN fonction/* --------------------------------------------MODE - Enregistrement modif qté/poids sur compo---------------------------------------------*/function modeUpdateQteCompo() {    global $cnx, $utilisateur;    // Récupération des variable    $id_compo = isset($_REQUEST['id_compo']) ? intval($_REQUEST['id_compo']) : 0;    $nb_colis = isset($_REQUEST['nb_colis']) ? intval($_REQUEST['nb_colis']) : 0;    $poids    = isset($_REQUEST['poids'])    ? floatval($_REQUEST['poids'])  : 0.0;    $designation = isset($_REQUEST['designation']) ? trim($_REQUEST['designation']) : '';	$designation = str_replace('[PLUS]', '+', $designation);	$designation = str_replace('[ET]', '&', $designation);	$designation = str_replace('[EGAL]', '=', $designation);	$designation = str_replace('[DQ]', '"', $designation);	$designation = str_replace('[SQ]', '\'', $designation);    // Gestion des erreurs    if ($id_compo == 0) { exit('VD1QURDX'); }    if ($nb_colis <= 0 || $poids <= 0) { exit('PUY7MZ03'); }    // Instanciation de l'objet Composition    $palettesManager = new PalettesManager($cnx);	$compo = $palettesManager->getComposition($id_compo);	// Gestion des erreurs	if (!$compo instanceof PaletteComposition) { exit('7GZCFD7Q'); }	// Mise à jour des quantités    $oldColis = $compo->getNb_colis();    $oldPoids = $compo->getPoids();	$compo->setNb_colis($nb_colis);	$compo->setPoids($poids);	// Mise à jour de la description    if ($designation != '' || $compo->getDesignation() != '') {        $compo->setDesignation($designation);    }	// Sauvegarde BDD et gestion des erreurs	if (!$palettesManager->savePaletteComposition($compo)) { exit('DWO3CCME'); }	//On met à jour le statut de la palette si complète	$palettesManager->updStatutPalette($compo->getId_palette());	// On met à jour les totaux pour, à la fois pour les produits de négoce et les produits froid...	$palettesManager->majTotauxPdtFroidFromCompos($compo->getId_lot_pdt_froid());	$palettesManager->majTotauxPdtNegoceFromCompos($compo->getId_lot_pdt_negoce());	// Logs	$log = new Log([]);	$log->setLog_type('info');	$log->setLog_texte("[STK] Modification de la composition #" . $id_compo . " - Colis : " . $oldColis . " -> " . $nb_colis . ", Poids : " . $oldPoids . " -> " . $poids . " kg") ;	$logsManager = new LogManager($cnx);	echo $logsManager->saveLog($log) ? '1' : '66ZNW7ZG';    exit;} // FIN fonction/* --------------------------------------------MODE - Charge la modale d'action (transfert...)---------------------------------------------*/function modeModalOperationsStockPdt() {    global $cnx;    $op = isset($_REQUEST['op']) ? $_REQUEST['op'] : '';    if ($op === '') {?><div class="alert alert-danger">ERREUR !<br>Identification de l'opération impossible...<br>Code erreur : HD235WA6</div><?php exit; }    // Transfert Client    if ($op === 'tr_clt') {		htmlModaleFiltreClient();	// Transfert Palette    } else if ($op === 'tr_pal') {        // Ici on a besoin des IDs Compos pour calculer le poids, on vérifie donc qu'on les a bien        $ids_compos = isset($_REQUEST['ids_compos']) ? $_REQUEST['ids_compos'] : '';        if ($ids_compos == '') {  ?><div class="alert alert-danger">ERREUR !<br>Identification des compositions...<br>Code erreur : 0KJG25S8</div><?php exit; }        htmlModalDeplacementPalette($ids_compos);    // Opération onon identifiée... O_o	} else { ?><div class="alert alert-danger">ERREUR !<br>Identification de l'opération impossible...<br>Code erreur : DD19LREW</div><?php exit; }    exit;} // FIN mode/* --------------------------------------------MODE - Transfert client---------------------------------------------*/function modeTransfertClient() {    global $cnx;    // Récupération des variables    $ids_compos = isset($_REQUEST['ids_compos']) ? $_REQUEST['ids_compos']       : '';    $id_choix   = isset($_REQUEST['id_choix'])   ? intval($_REQUEST['id_choix']) : 0;	$compos     = explode(',', $ids_compos);    // Gestion des erreurs    if ($ids_compos == '' || !is_array($compos) || empty($compos)) { exit('OTO5DES4'); }    if ($id_choix   == 0 ) { exit('KEI9GMLN'); }    // Instanciation des managers    $palettesManager = new PalettesManager($cnx);	$logsManager     = new LogManager($cnx);    // On boucle sur les compositions concernées    foreach ($compos as $id_compo) {        // Instanciation de l'objet et gestion des erreurs		$compo = $palettesManager->getComposition($id_compo);		if (!$compo instanceof PaletteComposition) { exit('LMZ5X1PZ:'.$id_compo); }        // On met à jour le client        $old_client = $compo->getId_client();		$compo->setId_client($id_choix);		if (!$palettesManager->savePaletteComposition($compo)) { exit('1TAKFQSO:'.$id_compo.'/'.$id_choix); }        // On log		$log = new Log([]);		$log->setLog_type('info');		$log->setLog_texte("[STK] Transfert client/dépot de la compo #" . $id_compo . " Ancien client : #".$old_client.", nouveau : #".$id_choix) ;		echo !$logsManager->saveLog($log) ? 'A81YSEMK' : '';    } // FIN boucle    echo '1';    exit;} // FIN mode/* --------------------------------------------MODE - Transfert palette---------------------------------------------*/function modeTransfertPalette() {	global $cnx;	// Récupération des variables	$ids_compos = isset($_REQUEST['ids_compos']) ? $_REQUEST['ids_compos']       : '';	$id_choix   = isset($_REQUEST['id_choix'])   ? intval($_REQUEST['id_choix']) : 0;	$poids      = isset($_REQUEST['poids'])      ? floatval($_REQUEST['poids'])  : 0;	$compos     = explode(',', $ids_compos);	// Gestion des erreurs	if ($ids_compos == '' || !is_array($compos) || empty($compos)) { exit('GPJL2S8L'); }	if ($id_choix   == 0 ) { exit('R3W6OT5C'); }	if ($poids      == 0 ) { exit('PYNX5HG2'); }	// Instanciation des managers	$palettesManager = new PalettesManager($cnx);	$logsManager     = new LogManager($cnx);    // On récupère les totaux    $poidsTotalCompos = 0.0;	$nb_colisTotalCompos = 0;	foreach ($compos as $id_compo) {		// Instanciation de l'objet et gestion des erreurs		$compo = $palettesManager->getComposition($id_compo);		if (!$compo instanceof PaletteComposition) { exit('HPTLWT6V'); }		// On incrémente le poids total et le nb de colis total		$poidsTotalCompos+=floatval($compo->getPoids());		$nb_colisTotalCompos+=intval($compo->getNb_colis());	} // FIN boucle compos    if ($poidsTotalCompos == 0.0) { exit('RQULIUEP'); }    // Si le poids total correspond au poids à transférer...    if ($poidsTotalCompos == $poids) {        // On boucle pour juste changer la palette de chacune de compos        foreach ($compos as $id_compo) {			$compo = $palettesManager->getComposition($id_compo);			changePaletteCompo($compo, $id_choix);		}        // Une fois toutes les compos modifiées, on quitte...		echo '1';		exit;    } // FIN test tout transférer    // Ici c'est qu'on ne vas pas pouvoir tout transférer aussi facilement... on a une séparation des compositions...    // On cherche si une des compo a exactement le meme poids que le poids à transférer...	foreach ($compos as $id_compo) {		// Instanciation de l'objet et gestion des erreurs		$compo = $palettesManager->getComposition($id_compo);		if (!$compo instanceof PaletteComposition) { continue; }		// On vois si ça matche...		if (floatval($compo->getPoids()) == $poids) {			// Si oui, on change juste son numéro de palette, c'est tout            changePaletteCompo($compo, $id_choix);            echo '1';            exit;        } // FIN test compo idéale trouvée	} // FIN boucle compos    // Bon, ici on a pas trouvé notre bonheur avec une seule compo... :/    // Si on a une seule compo concernée, on va la couper en deux : le poids voulu qu'on va déplacer, et ce qui restera...    if (count($compos) == 1) {        // On instancie l'objet PaletteComposition + gestion des erreurs		$id_compo = $compos[0];		$compo    = $palettesManager->getComposition($id_compo);		if (!$compo instanceof PaletteComposition) { exit('HPTLWT6V'); }		// Le poids à transférer est forcément inférieur au total de la compo        $nouveau_poids_ancienne_compo = floatval($compo->getPoids()) - $poids;		$nouveau_nb_colis_ancienne_compo = round((intval($compo->getNb_colis()) * $nouveau_poids_ancienne_compo) / floatval($compo->getPoids()));        $nb_colis_nouvelle_compo = intval($compo->getNb_colis()) - $nouveau_nb_colis_ancienne_compo;        if ($nb_colis_nouvelle_compo == 0) { $nb_colis_nouvelle_compo++; }		// On met à jour l'ancienne compo		$compo->setPoids($nouveau_poids_ancienne_compo);		$compo->setNb_colis($nouveau_nb_colis_ancienne_compo);		if (!$palettesManager->savePaletteComposition($compo)) { exit('G84J7KH0');}		//On met à jour le statut de la palette si complète		$palettesManager->updStatutPalette($compo->getId_palette());		// On crée une nouvelle compo à l'image de l'ancienne, mais avec le poids restant et la palette de destination        $nouvelle_compo = new PaletteComposition([]);		$nouvelle_compo->setPoids($poids);		$nouvelle_compo->setId_palette($id_choix);		$nouvelle_compo->setSupprime(0);		$nouvelle_compo->setId_client($compo->getId_client());		$nouvelle_compo->setNb_colis($nb_colis_nouvelle_compo);		$nouvelle_compo->setDate($compo->getDate());		$nouvelle_compo->setId_lot_pdt_froid($compo->getId_lot_pdt_froid());		$nouvelle_compo->setId_lot_pdt_negoce($compo->getId_lot_pdt_negoce());		$nouvelle_compo->setId_produit($compo->getId_produit());		$nouvelle_compo->setId_user($compo->getId_user());		if (!$palettesManager->savePaletteComposition($nouvelle_compo)) { exit('BHGDYOVC');}        echo '1';        exit;    } // FIN test compo uniquer    // Oh pînaise !! Ici on a plusieurs compos à regrouper puis à découper...    // On prends comme référence la plus grosse compo (en poids)    $compoPoidsMax  = 0;    $compoMaxId     = 0;    foreach ($compos as $id_compo) {		$compo = $palettesManager->getComposition($id_compo);		if (!$compo instanceof PaletteComposition) { exit('HPTLWT6V'); }        if (floatval($compo->getPoids()) > $compoPoidsMax) {			$compoMaxId = $id_compo;        }    } // FIN boucle ids compos    // Instanciation de la composition de référence    if ($compoMaxId == 0) { exit('VRZOOWKO'); }    $compoRef =  $palettesManager->getComposition($compoMaxId);    if (!$compoRef instanceof PaletteComposition) { exit('HPTLWT6V'); }    // On calcule le nb de colis des compos à créer	$nouveau_poids_compo_2 = $poidsTotalCompos - $poids;    $nouveau_nb_colis_compo_2 = round((floatval($nouveau_poids_compo_2) * $nb_colisTotalCompos ) /  $poidsTotalCompos);	if ($nouveau_nb_colis_compo_2 == 0) { $nouveau_nb_colis_compo_2++; }	$nouveau_poids_compo_1 = $poids;	$nouveau_nb_colis_compo_1 = $nb_colisTotalCompos - $nouveau_nb_colis_compo_2;	if ($nouveau_nb_colis_compo_1 == 0) { $nouveau_nb_colis_compo_1++; }    // On va donc créer une première composition avec les données de la composition de référence avec le poids demandé. Elle prends la nouvelle palette et le nb de colis au proprata.	$nouvelle_compo_1 = new PaletteComposition([]);	$nouvelle_compo_1->setPoids($nouveau_poids_compo_1);	$nouvelle_compo_1->setId_palette($id_choix);	$nouvelle_compo_1->setSupprime(0);	$nouvelle_compo_1->setId_client($compoRef->getId_client());	$nouvelle_compo_1->setNb_colis($nouveau_nb_colis_compo_1);	$nouvelle_compo_1->setDate($compoRef->getDate());	$nouvelle_compo_1->setId_lot_pdt_froid($compoRef->getId_lot_pdt_froid());	$nouvelle_compo_1->setId_lot_pdt_negoce($compoRef->getId_lot_pdt_negoce());	$nouvelle_compo_1->setId_produit($compoRef->getId_produit());	$nouvelle_compo_1->setId_user($compoRef->getId_user());	if (!$palettesManager->savePaletteComposition($nouvelle_compo_1)) { exit('JJZDLSGC');}	//On met à jour le statut de la palette si complète	$palettesManager->updStatutPalette($id_choix);    // Ensuite on crée une seconde composition avec le poids restant. Elle conserve la palette d'origine.	$nouvelle_compo_2 = new PaletteComposition([]);	$nouvelle_compo_2->setPoids($nouveau_poids_compo_2);	$nouvelle_compo_2->setId_palette($compoRef->getId_palette());	$nouvelle_compo_2->setSupprime(0);	$nouvelle_compo_2->setId_client($compoRef->getId_client());	$nouvelle_compo_2->setNb_colis($nouveau_nb_colis_compo_2);	$nouvelle_compo_2->setDate($compoRef->getDate());	$nouvelle_compo_2->setId_lot_pdt_froid($compoRef->getId_lot_pdt_froid());	$nouvelle_compo_2->setId_lot_pdt_negoce($compoRef->getId_lot_pdt_negoce());	$nouvelle_compo_2->setId_produit($compoRef->getId_produit());	$nouvelle_compo_2->setId_user($compoRef->getId_user());	if (!$palettesManager->savePaletteComposition($nouvelle_compo_2)) { exit('RLNSTGJM');}	//On met à jour le statut de la palette si complète	$palettesManager->updStatutPalette($compoRef->getId_palette());    // Enfin on peux supprimer les compositions obsolètes, c'est à dire tous les IDS passé en paramètre...	foreach ($compos as $id_compo) {		$compo = $palettesManager->getComposition($id_compo);		if (!$compo instanceof PaletteComposition) { exit('HPTLWT6V'); }		$compo->setSupprime(1);		if (!$palettesManager->savePaletteComposition($compo)) { exit('NOSVONQT');}	} // FIN boucle ids compos	echo '1';	exit;} // FIN mode/* --------------------------------------------MODE - Supprime les compositions---------------------------------------------*/function modeSupprimeCompos() {    global $cnx;	// Récupération des variables	$ids_compos = isset($_REQUEST['ids_compos']) ? $_REQUEST['ids_compos']       : '';	$compos     = explode(',', $ids_compos);	// Gestion des erreurs	if ($ids_compos == '' || !is_array($compos) || empty($compos)) { exit('YWB4B4S8'); }	// Instanciation des managers	$palettesManager = new PalettesManager($cnx);	$logsManager     = new LogManager($cnx);    // On boucle sur les compositions concernées	foreach ($compos as $id_compo) {		// Instanciation de l'objet et gestion des erreurs		$compo = $palettesManager->getComposition($id_compo);		if (!$compo instanceof PaletteComposition) { exit('HPTLWT6V:'.$id_compo); }		// On met à jour la palette		$compo->setSupprime(1);		if (!$palettesManager->savePaletteComposition($compo)) { exit('8VEFS683:'.$id_compo); }		// On log		$log = new Log([]);		$log->setLog_type('warning');		$log->setLog_texte("[STK] Suppression de la composition #" . $id_compo . " (champ supprime à 1)") ;		echo !$logsManager->saveLog($log) ? 'A33732MX' : '';	} // FIN boucle	echo '1';	exit;} // FIN mode/* --------------------------------------------FONCTION - Retourne le formulaire de sélection---------------------------------------------*/function htmlModalDeplacementPalette($ids_compos) {    global $cnx;	// Récupération des variables	$ids_compos = isset($_REQUEST['ids_compos']) ? $_REQUEST['ids_compos']  : '';	$compos     = explode(',', $ids_compos);	// Gestion des erreurs	if ($ids_compos == '' || !is_array($compos) || empty($compos)) { exit('MQOZSBX4'); }	// Instanciation des managers	$palettesManager = new PalettesManager($cnx);	$logsManager     = new LogManager($cnx);    // On vérifie que les compos partagent le même id produit	$idPdt = [];	$id_produit = 0;	$poids_total = 0.0;	$colis_total = 0;	$ids_clients = [];    foreach ($compos as $id_compo) {        $compo = $palettesManager->getComposition($id_compo);        $idPdt[$compo->getId_produit()] = $compo->getId_produit();		$id_produit = $compo->getId_produit();		$poids_total+=$compo->getPoids();		$colis_total+=$compo->getNb_colis();		$ids_clients[] = $compo->getId_client();    }    // Si on a pas qu'un seul produit... (panachage) on ne peut déplacer sans avoir de palette mixte ! donc on retourne un message d'avertissement, c'est tout...    if (count($idPdt) != 1 || $id_produit == 0) { ?>        <div class="alert alert-danger text-16">            <i class="fa fa-exclamation-circle mb-2 fa-2x"></i>            <p><strong class="text-24">Attention !</strong></p>            <p class="nomargin">Les produits sélectionnés sont différents.</p>            <p>Le transfert vers une autre palette conduirait à une mixité ou une ambiguïté de sa composition.</p>            <p class="nomargin">Merci de ne sélectionner que des produits identiques pour effectuer un transfert de palette.</p>        </div>    <?php exit; }    // Toutes les compos sont du meme produit, on peut proposer une selection quantitative (formulaire)    ?>    <div class="row">    <div class="col mt-3">        <div class="alert alert-secondary">            <div class="input-group clavier clavier-transfert">                <div class="col-4"><button type="button" class="form-control mb-2 text-20 padding-15 btn btn-secondary btn-large" data-valeur="1">1</button></div>                <div class="col-4"><button type="button" class="form-control mb-2 text-20 padding-15 btn btn-secondary btn-large" data-valeur="2">2</button></div>                <div class="col-4"><button type="button" class="form-control mb-2 text-20 padding-15 btn btn-secondary btn-large" data-valeur="3">3</button></div>                <div class="col-4"><button type="button" class="form-control mb-2 text-20 padding-15 btn btn-secondary btn-large" data-valeur="4">4</button></div>                <div class="col-4"><button type="button" class="form-control mb-2 text-20 padding-15 btn btn-secondary btn-large" data-valeur="5">5</button></div>                <div class="col-4"><button type="button" class="form-control mb-2 text-20 padding-15 btn btn-secondary btn-large" data-valeur="6">6</button></div>                <div class="col-4"><button type="button" class="form-control mb-2 text-20 padding-15 btn btn-secondary btn-large" data-valeur="7">7</button></div>                <div class="col-4"><button type="button" class="form-control mb-2 text-20 padding-15 btn btn-secondary btn-large" data-valeur="8">8</button></div>                <div class="col-4"><button type="button" class="form-control mb-2 text-20 padding-15 btn btn-secondary btn-large" data-valeur="9">9</button></div>                <!--<div class="col-4"><button type="button" class="form-control mb-2 text-20 padding-15 btn btn-dark btn-large" data-valeur=".">.</button></div>-->                <div class="col-4"><button type="button" class="form-control mb-2 text-20 padding-15  btn btn-dark btn-large" data-valeur="T"><i class="fa fa-tachometer-alt text-14"></i><span class="ml-1 text-12 texte-fin">100 %</span></button></div>                <div class="col-4"><button type="button" class="form-control mb-2 text-20 padding-15 btn btn-secondary btn-large" data-valeur="0">0</button></div>                <div class="col-4"><button type="button" class="form-control mb-2 text-20 padding-15 btn btn-danger btn-large" data-valeur="C"><i class="fa fa-backspace"></i></button></div>                <!--<div class="col-8"><button type="button" class="form-control mb-2 text-20 padding-15 btn btn-success btn-large" data-valeur="V" data-ids-compos="<?php echo $$ids_compos; ?>"><i class="fa fa-check"></i></button></div>-->            </div> <!-- FIN clavier -->        </div> <!-- FIN alerte -->    </div>        <input type="hidden" id="champActifTransfertPalette" value="inputPoidsPdtTransfert"/>        <div class="col mt-3">            <div class="input-group">                <span class="input-group-prepend">                    <span class="input-group-text text-28 gris-9"><i class="fa fa-weight fa-fw"></i></span>                </span>                <input type="text" class="form-control text-50 text-center inputPoidsPdtTransfert" placeholder="0" value="<?php echo $poids_total; ?>" data-old="<?php echo $poids_total; ?>">                <span class="input-group-append">                    <span class="input-group-text text-24 gris-5"><span class="w-50p">kg</span></span>                </span>            </div>            <div class="input-group mt-2">                <span class="input-group-prepend">                    <span class="input-group-text text-28 gris-9"><i class="fa fa-boxes fa-fw"></i></span>                </span>                <input type="text" class="form-control text-50 text-center inputNbColisTransfert" placeholder="0" value="<?php echo $colis_total; ?>" data-old="<?php echo $colis_total; ?>">                <span class="input-group-append">                    <span class="input-group-text text-24 gris-5"><span class="w-50p">colis</span></span>                </span>            </div>            <div class="mt-3 mb-1 text-16">                <i class="fa fa-caret-down gris-9 mr-1"></i> Sélectionnez la palette de destination            </div>            <div class="row">				<?php				// On récupère la liste des palettes en cours				$palettesManager = new PalettesManager($cnx);				$produitManager = new ProduitManager($cnx);				$produit = $produitManager->getProduit($id_produit);				if (!$produit instanceof Produit) { $produit = new Produit([]); }				// Vides autorisées + si mixtes				$params = [					'statuts'     => '0,1,2',					'vides'      => false,					'id_produit' => $id_produit,					'ids_clients' => $ids_clients,					'mixte' => $produit->isMixte(),					'hors_frais' => true				];				//$params = ['vides' => false, 'statuts' => '0,1,2', 'id_produit' => $id_produit];				$listePalettes = $palettesManager->getListePalettes($params);				// Si aucune palette				if (empty($listePalettes)) { ?>                    <div class="alert alert-warning">Aucune palette disponible pour ce produit !</div>				<?php } // FIN test aucuns palette				// On boucle sur les palettes				foreach ($listePalettes as $pal) { ?>                    <div class="col-3">                        <button type="button" class="btn btn-secondary btn-lg form-control btnChoix mb-2 text-20 padding-15" data-id="<?php echo $pal->getId(); ?>">                            <span class="text-24"><?php echo $pal->getNumero(); ?></span>                        </button>                    </div>				<?php } // FIN boucle palettes				?>            </div>        </div>    </div>    <?php} // FIN fonction/* -----------------------------------------------FONCTION DEPORTEE - Change la palette d'une compo------------------------------------------------*/function changePaletteCompo(PaletteComposition $compo, $id_palette) {    global $cnx;	$palettesManager = new PalettesManager($cnx);	$logsManager     = new LogManager($cnx);	// On met à jour la palette	$old_palette = $compo->getId_palette();	$compo->setId_palette($id_palette);	if (!$palettesManager->savePaletteComposition($compo)) { exit('TB5OAHWP:'.$compo->getId().'/'.$id_palette); }	// On log	$log = new Log([]);	$log->setLog_type('info');	$log->setLog_texte("[STK] Transfert palette de la compo #" . $compo->getId() . " Anciene palette : #".$old_palette.", nouvelle : #".$id_palette) ;	echo !$logsManager->saveLog($log) ? 'FVL72E7G' : '';} // FIN fonction/* -----------------------------------------------MODE - Retourne les produits correspondant au code------------------------------------------------*/function modeSearchProduitsCode() {	global $cnx;	$productManager = new ProduitManager($cnx);	$code = isset($_REQUEST['code']) ? intval($_REQUEST['code']) : 0;	if ($code == 0) { ?>        <i class="fa fa-caret-left fa-lg mr-2 gris-c padding-top-20"></i><span class="text-18 gris-5 padding-top-15">Recherhe par code article...</span>    <?php exit; }	    $liste = $productManager->searchProduitsByCode($code, true);	if (!$liste || empty($liste)) { ?>        <div class="alert alert-warning padding-20 form-control margin-right-15">            <i class="fa fa-times-circle mr-1 vmiddle"></i> <span class="text-16 vmiddle">Aucun produit trouvé avec ce code...</span>        </div>    <?php exit; }	if (count($liste) > 8) { ?>		<div class="alert alert-warning padding-20 form-control margin-right-15">			<i class="fa fa-exclamation-circle mr-1 vmiddle"></i> <span class="text-16 vmiddle"><?php echo count($liste);?> produits trouvés, affinez votre recherche...</span>		</div>	<?php exit; }	// Liste des produits sélectionnables	foreach ($liste as $pdt) { ?>		<div class="col-12">			<button type="button" class="btn btn-secondary btn-lg btnChoixProduit form-control mb-1" data-id="<?php echo $pdt->getId(); ?>">				<?php echo Outils::cleanCut($pdt->getNom(), 32); ?>			</button>		</div>	<?php	} // FIN boucle produits	exit;} // FIN fonction/* --------------------------------------------MODE - Lots de regroupement---------------------------------------------*/function modeShowLotsRegroupementsModal() {	global $cnx;	// Récupération des variables	$ids_compos = isset($_REQUEST['ids_compos']) ? explode(',',$_REQUEST['ids_compos']) : [];	// Instanciation des managers    $lotsManager = new LotManager($cnx);    $palettesManager = new PalettesManager($cnx);	// On récupère les lots de regroupements en cours    $params = ['statut' => 0];    $lotsR = $lotsManager->getListeLotsRegroupement($params);    $txt = empty($lotsR) ? 'Créez un nouveau lot de regroupement' : 'Sélectionnez un lot de regroupement ou créez-en un nouveau';    $ids_lots_regroupements = [];    $ids_clients = [];    // Est-ce que les compos passés en paramètre sont déjà toutes associées au même lot de regroupement ? -> Si oui, on va le mettre en disabled    // On récupère aussi le client pour vérifier l'unicité	foreach ($ids_compos as $id_compo) {		$compo = $palettesManager->getComposition($id_compo);		if (!$compo instanceof PaletteComposition) { continue; }			if ($compo->getId_lot_regroupement() > 0) {				$ids_lots_regroupements[$compo->getId_lot_regroupement()] = $compo->getId_lot_regroupement();			}		    $ids_clients[$compo->getId_client()] = $compo->getId_client();	}	// Si les compos sont associés à des clients différents, on ne doit pas pouvoir modifier les lots de regroupement    if (count($ids_clients) != 1) { ?>        <div class="alert alert-warning">            <i class="fa fa-exclamation-circle fa-2x mb-2"></i>            <p class="nomargin">Impossible de regrouper ces produits !</p>            <p class="nomargin">Ils sont destinés à des clients différents...</p>        </div>    <?php        exit;    } // FIN plusieurs clients	?>    <div class="row">        <div class="col text-16">            <div class="mb-2">                <i class="fa fa-caret-down gris-9 mr-1"></i> <?php echo $txt; ?>&hellip;            </div>        </div>    </div>	<div class="listeLotsRegroupement">		<div class="row justify-content-center">			<?php			foreach ($lotsR as $lotR) { ?>				<div class="col-3 text-center mb-2">					<button type="button" class="btn btn-secondary btn-lg form-control btnChoix" <?php					echo count($ids_lots_regroupements) == 1 && current($ids_lots_regroupements) == $lotR->getId() ? 'disabled' : '';					?> data-id="<?php echo $lotR->getId(); ?>"><?php echo $lotR->getNumlot(); ?></button>				</div>			<?php }			?>		</div>		<hr>		<div class="row justify-content-center">			<?php if (count($ids_lots_regroupements) == 1) { ?>				<div class="col-6 text-center">					<button type="button" class="btn btn-danger btn-lg form-control btnSupprAssociationComposLotR"><i class="fa fa-trash-alt mr-1"></i>Retirer du lot</button>				</div>			<?php } ?>			<div class="col-6 text-center">				<button type="button" class="btn btn-dark btn-lg form-control btnAddLotRegroupement"><i class="fa fa-plus mr-1"></i>Nouveau...</button>			</div>		</div>	</div>	<form class="row formNewLotRegroupement" style="display: none;">		<div class="col">			<div class="alert alert-secondary">				<div class="row">					<div class="col-9 padding-top-2">						<input type="text" maxlength="50" class="form-control text-20" id="champ_clavier_lotr" value="" placeholder="Numéro de lot">					</div>					<div class="col-3">						<button type="button" class="btn btn-success btn-lg form-control btnSaveNewLotR"><i class="fa fa-check mr-1"></i>Créer</button>					</div>				</div>			</div>		</div>	</form><?php} // FIN mode// Association des compositions au lot de regroupementfunction modeAddComposLotRegroupement() {	global $cnx;	$ids_compos = isset($_REQUEST['ids_compos']) ? explode(',', $_REQUEST['ids_compos']) : [];	$id_lot_r = isset($_REQUEST['id_lot_r']) ?  intval($_REQUEST['id_lot_r']) : 0;	if (empty($ids_compos) || $id_lot_r == 0) { exit; }	$compoManager = new PalettesManager($cnx);	foreach ($ids_compos as $id_compo) {		$compo = $compoManager->getComposition($id_compo);		if (!$compo instanceof PaletteComposition) { exit; }		$compo->setId_lot_regroupement($id_lot_r);		if (!$compoManager->savePaletteComposition($compo)) { exit; }	} // FIN boucle sur les compos	echo '1'; // Retour positif ajax	exit;} // FIN mode