<?php/*   _|_|_|  _|_|_|    _| _|        _|    _|  _|        CBO FrameWork _|        _|_|_|    _|        (c) 2018 Cédric Bouillon _|        _|    _|  _|   _|_|_|  _|_|_|    _|_|_|_|--------------------------------------------------------Contrôleur Ajax TARIFS------------------------------------------------------*/error_reporting(0);// Évite les problèmes de génération de PDF suite à des Warning// Initialisation du mode d'appel$mode       = isset($_REQUEST['mode']) ? $_REQUEST['mode'] : '';// Intégration de la configuration du FrameWork et des autorisationsrequire_once '../php/config.php';// Instanciation des Managers$tiersManager = new TiersManager($cnx);$tarifsManager = new TarifsManager($cnx);$fonctionNom = 'mode'.ucfirst($mode);if (function_exists($fonctionNom)) {	$fonctionNom();}/* ------------------------------------MODE - Liste tarifs [FOURNISSEURS]------------------------------------*/function modeShowlisteTarifsFournisseur() {    global $cnx, $tiersManager, $tarifsManager, $utilisateur, $mode;    $produitsManager = new ProduitManager($cnx);    $id_pdt = isset($_REQUEST['id_pdt']) ? intval($_REQUEST['id_pdt']) : 0;    $id_frs = isset($_REQUEST['id_frs']) ? intval($_REQUEST['id_frs']) : 0;    $page   = isset($_REQUEST['page'])   ? intval($_REQUEST['page'])   : 1;	$nbResultPpage      = 20;	$filtresPagination  = '?mode='.$mode.'&id_pdt='.$id_pdt.'&id_frs='.$id_frs;	$start              = ($page-1) * $nbResultPpage;	$params = [	        'start'          =>  $start,	        'nb_result_page' =>  $nbResultPpage,	        'id_frs'         =>  $id_frs,	        'id_pdt'         =>  $id_pdt    ];	$liste = $tarifsManager->getListeTarifFournisseurs($params);	if (empty($liste)) { ?>        <div class="alert alert-warning padding-50 text-center">            <i class="fa fa-exclamation-circle fa-3x mb-4"></i>            <div>Aucun tarif fournisseur...</div>            <div class="row mt-3">                <div class="col-2 offset-5">                    <button type="button" class="btn btn-secondary form-control btnRazVide"><i class="fa fa-backspace mr-1 fa-fw"></i> Supprimer les filtres</button>                </div>            </div>        </div>    <?php exit; }	// Liste non vide, construction de la pagination...	$nbResults  = $tarifsManager->getNb_results();	$pagination = new Pagination($page);	$pagination->setUrl($filtresPagination);	$pagination->setNb_results($nbResults);	$pagination->setAjax_function(true);	$pagination->setNb_results_page($nbResultPpage);	?>     <form class="row" id="filtres">         <input type="hidden" name="page" value="<?php echo $page; ?>"/>         <div class="col-3">             <div class="input-group mb-3">                 <div class="input-group-prepend">                     <span class="input-group-text"><i class="fa fa-industry gris-9"></i></span>                 </div>                 <select class="selectpicker form-control show-tick" name="filtre_frs" title="Fournisseur" data-live-search="true" data-live-search-placeholder="Rechercher">                     <option value="">Tous les fournisseurs</option>                     <option data-divider="true"></option>					 <?php					 foreach ($tiersManager->getListeFournisseurs([]) as $frs) { ?>                         <option value="<?php echo $frs->getId(); ?>" <?php echo $frs->getId() == $id_frs ? 'selected' : ''; ?>><?php echo $frs->getNom(); ?></option>					 <?php }					 ?>                 </select>             </div>         </div>         <div class="col-3">             <div class="input-group mb-3">                 <div class="input-group-prepend">                     <span class="input-group-text"><i class="fa fa-dolly gris-9"></i></span>                 </div>                 <select class="selectpicker form-control show-tick" name="filtre_pdt" title="Produit" data-live-search="true" data-live-search-placeholder="Rechercher">                     <option value="">Tous les produits</option>                     <option data-divider="true"></option>					 <?php					 foreach ($produitsManager->getListeProduits([]) as $pdt) { ?>                         <option value="<?php echo $pdt->getId(); ?>" data-subtext="<?php echo $pdt->getCode(); ?>" <?php echo $pdt->getId() == $id_pdt ? 'selected' : ''; ?>><?php echo $pdt->getNom(); ?></option>					 <?php }					 ?>                 </select>             </div>         </div>         <div class="col-2 offset-4">             <div class="row">                 <div class="col-8">                     <button type="button" class="btn btn-info form-control btnRecherche"><i class="fa fa-search mr-1 fa-fw"></i> Filtrer</button>                 </div>                 <div class="col-4">                     <button type="button" class="btn btn-secondary form-control btnRaz"><i class="fa fa-backspace mr-1 fa-fw"></i></button>                 </div>             </div>         </div>     </form>    <table class="table table-v-middle admin">        <thead>            <tr>                <th class="<?php echo $utilisateur->isDev() ? 'w-mini-admin-cell' : 'd-none'; ?>">ID</th>                <th>Fournisseur</th>                <th>Produit</th>                <th class="w-court-admin-cell text-right padding-right-">Tarif</th>                <th class="t-actions w-mini-admin-cell text-center">Modifier</th>            </tr>        </thead>        <tbody>        <?php        foreach ($liste as $tarif) { ?>            <tr>                <td <?php echo $utilisateur->isDev() ? '' : 'class="d-none"'; ?>><kbd><?php echo $tarif->getId();?></kbd></td>                <td><?php echo $tarif->getNom_frs();?></td>                <td><?php echo $tarif->getNom_pdt();?> <span class="texte-fin text-12 gris-7"><?php echo $tarif->getCode_pdt();?></span></td>                <td class="text-right"><?php echo number_format($tarif->getPrix(),2, '.', ' ');?> €</td>                <td class="t-actions">                    <button type="button" class="btn btn-secondary"  data-toggle="modal" data-target="#modalTarif" data-id="<?php echo $tarif->getId();?>"><i class="fa fa-edit"></i></button>                </td>            </tr>        <?php }        ?>        </tbody>    </table>    <?php	// Pagination (aJax)	if (isset($pagination)) {		// Pagination bas de page, verbose...		$pagination->setVerbose_pagination(1);		$pagination->setVerbose_position('right');		$pagination->setNature_resultats('tarif');		$pagination->setNb_apres(2);		$pagination->setNb_avant(2);		echo ($pagination->getPaginationHtml());	} // FIN test pagination} // FIN MODE/* ------------------------------------MODE - Liste tarifs [CLIENTS]------------------------------------*/function modeShowlisteTarifsClient() {	global $cnx, $tiersManager, $tarifsManager, $utilisateur, $mode;	$produitsManager = new ProduitManager($cnx);	$id_pdt = isset($_REQUEST['id_pdt']) ? intval($_REQUEST['id_pdt']) : 0;	$id_clt = isset($_REQUEST['id_clt']) ? intval($_REQUEST['id_clt']) : 0;	$id_grp = isset($_REQUEST['id_grp']) ? intval($_REQUEST['id_grp']) : 0;	$page   = isset($_REQUEST['page'])   ? intval($_REQUEST['page'])   : 1;	$is_clt_fixe   = isset($_REQUEST['fixe']) && intval($_REQUEST['fixe']) == 1;	$nbResultPpage      = 1000000;	$filtresPagination  = '?mode='.$mode.'&id_pdt='.$id_pdt.'&id_clt='.$id_clt.'&id_grp='.$id_grp;	$start              = ($page-1) * $nbResultPpage;	$params = [		'start'          =>  $start,		'nb_result_page' =>  $nbResultPpage,		'id_clt'         =>  $id_clt,		'id_grp'         =>  $id_grp,		'id_pdt'         =>  $id_pdt	];	$liste = $tarifsManager->getListeTarifClients($params);	if (empty($liste)) { ?>        <div class="alert alert-warning padding-50 text-center">            <i class="fa fa-exclamation-circle fa-3x mb-4"></i>            <div>Aucun tarif client...</div>            <div class="row mt-3 <?php echo $is_clt_fixe ? 'd-none' : ''; ?>">                <div class="col-2 offset-5">                    <button type="button" class="btn btn-secondary form-control btnRazVide"><i class="fa fa-backspace mr-1 fa-fw"></i> Supprimer les filtres</button>                </div>            </div>        </div>		<?php exit; }	// Liste non vide, construction de la pagination...	$nbResults  = $tarifsManager->getNb_results();	$pagination = new Pagination($page);	$pagination->setUrl($filtresPagination);	$pagination->setNb_results($nbResults);	$pagination->setAjax_function(true);	$pagination->setNb_results_page($nbResultPpage);	?>    <form class="row <?php echo $is_clt_fixe ? 'd-none' : ''; ?>" id="filtres">        <input type="hidden" name="page" value="<?php echo $page; ?>"/>        <div class="col-3">            <div class="input-group mb-3">                <div class="input-group-prepend">                    <span class="input-group-text"><i class="fa fa-address-card gris-9"></i></span>                </div>                <select class="selectpicker form-control show-tick" name="filtre_clt" title="Client" data-live-search="true" data-live-search-placeholder="Rechercher">                    <option value="">Tous les clients</option>                    <option data-divider="true"></option>					<?php					foreach ($tiersManager->getListeClients([]) as $clt) { ?>                        <option value="<?php echo $clt->getId(); ?>" <?php echo $clt->getId() == $id_clt ? 'selected' : ''; ?>><?php echo $clt->getNom(); ?></option>					<?php }					?>                </select>            </div>        </div>		<div class="col-3">			<div class="input-group mb-3">				<div class="input-group-prepend">					<span class="input-group-text"><i class="fa fa-sitemap gris-9"></i></span>				</div>				<select class="selectpicker form-control show-tick" name="filtre_grp" title="Groupe client" data-live-search="true" data-live-search-placeholder="Rechercher">					<option value="">Tous les groupes clients</option>					<option data-divider="true"></option>					<?php					foreach ($tiersManager->getListeTiersGroupes() as $grp) { ?>						<option value="<?php echo $grp->getId(); ?>" <?php echo $grp->getId() == $id_grp ? 'selected' : ''; ?>><?php echo $grp->getNom(); ?></option>					<?php }					?>				</select>			</div>		</div>        <div class="col-3">            <div class="input-group mb-3">                <div class="input-group-prepend">                    <span class="input-group-text"><i class="fa fa-dolly gris-9"></i></span>                </div>                <select class="selectpicker form-control show-tick" name="filtre_pdt" title="Produit" data-live-search="true" data-live-search-placeholder="Rechercher">                    <option value="">Tous les produits</option>                    <option data-divider="true"></option>					<?php					foreach ($produitsManager->getListeProduits([]) as $pdt) { ?>                        <option value="<?php echo $pdt->getId(); ?>" data-subtext="<?php echo $pdt->getCode(); ?>" <?php echo $pdt->getId() == $id_pdt ? 'selected' : ''; ?>><?php echo $pdt->getNom(); ?></option>					<?php }					?>                </select>            </div>        </div>        <div class="col-2 offset-1">            <div class="row">                <div class="col-8">                    <button type="button" class="btn btn-info form-control btnRecherche"><i class="fa fa-search mr-1 fa-fw"></i> Filtrer</button>                </div>                <div class="col-4">                    <button type="button" class="btn btn-secondary form-control btnRaz"><i class="fa fa-backspace mr-1 fa-fw"></i></button>                </div>            </div>        </div>    </form>    <form id="formTarifsClients">        <input type="hidden" name="mode" value="saveTousTarifs"/>        <table class="table table-v-middle admin">            <thead>            <tr>                <th class="<?php echo $utilisateur->isDev() ? 'w-mini-admin-cell' : 'd-none'; ?>">ID</th>                <th>Client / Groupe</th>                <th>Code produit</th>                <th>Produit</th>                <th class="w-court-admin-cell padding-right-">Tarif</th>                <th class="t-actions w-mini-admin-cell text-center">Supprimer</th>            </tr>            </thead>            <tbody>            <?php            foreach ($liste as $tarif) { ?>                <tr>                    <td <?php echo $utilisateur->isDev() ? '' : 'class="d-none"'; ?>><kbd><?php echo $tarif->getId();?></kbd></td>                    <td><?php echo $tarif->getNom_clt() != '' ? $tarif->getNom_clt() :  '<span class="badge badge-secondary text-12 texte-fin mr-1">GROUPE</span>'. $tarif->getNom_grp();?></td>                    <td><?php echo $tarif->getCode_pdt();?></td>                    <td><?php echo $tarif->getNom_pdt();?></td>                    <td class="text-right">                        <div class="input-group">                            <input type="text" class="form-control text-right" placeholder="0.00" name="tarifclt[<?php echo $tarif->getId();?>]" value="<?php echo number_format($tarif->getPrix(),2); ?>">                            <div class="input-group-append">                                <span class="input-group-text">€</span>                            </div>                        </div>                        <?php // echo number_format($tarif->getPrix(),2, '.', ' ');?>                    </td>                    <td class="t-actions">                        <!--<button type="button" class="btn btn-secondary"  data-toggle="modal" data-target="#modalTarif" data-id="<?php /*echo $tarif->getId();*/?>"><i class="fa fa-edit"></i></button>-->                        <button type="button" class="btn btn-danger btnSupprTarifClient" data-id="<?php echo $tarif->getId();?>"><i class="fa fa-trash-alt"></i></button>                    </td>                </tr>            <?php }            ?>            </tbody>        </table>    </form>	<?php	// Pagination (aJax)	if (isset($pagination)) {		// Pagination bas de page, verbose...		$pagination->setVerbose_pagination(1);		$pagination->setVerbose_position('right');		$pagination->setNature_resultats('tarif');		$pagination->setNb_apres(2);		$pagination->setNb_avant(2);		echo ($pagination->getPaginationHtml());	} // FIN test pagination} // FIN MODE/* ----------------------------------------MODE - Modale add/upd tarifs [FOURNISSEUR]-----------------------------------------*/function modeModalTarifFrs() {	global $cnx, $tiersManager, $tarifsManager;	$id = isset($_REQUEST['id']) ? intval($_REQUEST['id']) : 0;	$tarif = $id > 0 ? $tarifsManager->getTarifFournisseur($id) : new TarifFournisseur([]);	if (!$tarif instanceof TarifFournisseur) { exit('ERREUR^Instanciation échouée.'); }    $creation = $tarif->getId() == 0;	?>    <i class="fa fa-<?php echo $creation ? 'plus' : 'dollar-sign'; ?> mr-1 gris-c"></i> <?php    echo $creation ? 'Nouveau ' : 'Edition du';?> tarif fournisseur^    <?php    // En création, on sélectionne le frs et le pdt    if ($creation) {        $pdtManager = new ProduitManager($cnx);        ?>        <div class="row mb-3">            <div class="col">                <div class="input-group input-group">                    <div class="input-group-prepend">                        <span class="input-group-text">Fournisseur</span>                    </div>                    <select class="form-control selectpicker show-tick" name="id_frs" title="Sélectionnez..." data-live-search="true" data-size="10" data-live-search-placeholder="Rechercher...">						<?php						foreach ($tiersManager->getListeFournisseurs([]) as $frs) { ?>                            <option value="<?php echo $frs->getId();?>"><?php echo $frs->getNom();?></option>						<?php } ?>                    </select>                </div>            </div>        </div>        <div class="row mb-5">            <div class="col">                <div class="input-group input-group">                    <div class="input-group-prepend">                        <span class="input-group-text">Produit</span>                    </div>                    <select class="form-control selectpicker show-tick" name="id_pdt" title="Sélectionnez..." data-live-search="true" data-size="10" data-live-search-placeholder="Rechercher par nom ou code...">						<?php						foreach ($pdtManager->getListeProduits() as $pdt) { ?>                            <option value="<?php echo $pdt->getId();?>" data-subtext="<?php echo $pdt->getCode(); ?>"><?php echo $pdt->getNom();?></option>						<?php } ?>                    </select>                </div>            </div>        </div>        <?php    // En modif, on affiche juste le fournisseur et le produit    } else { ?>        <div class="row mb-4">            <div class="col">                <div class="alert alert-info">                    <p class="text-center"><?php echo $tarif->getNom_frs(); ?></p>                    <p class="text-center nomargin"><?php echo $tarif->getNom_produit(); ?></p>                </div>            </div>        </div>        <?php    } // FIN test création/modif    ?>    <div class="row mb-4">        <div class="col-6 offset-3">            <div class="input-group input-group-lg">                <div class="input-group-prepend">                    <span class="input-group-text">Tarif</span>                </div>               <input type="text" name="prix" class="form-control text-right" placeholder="0.00" value="<?php echo $tarif->getPrix() > 0 ? $tarif->getPrix() : ''; ?>"/>                <div class="input-group-append">                    <span class="input-group-text">€</span>                </div>            </div>        </div>    </div>    <input type="hidden" name="mode" value="saveTarifFrs"/>    <input type="hidden" name="id_tarif" value="<?php echo $id; ?>"/>    <?php    ?>    ^<?php echo $creation ? 'hideSuppr' : ''; // On masque le bouton "Supprimer" si on est en création    exit;} // FIN mode/* ----------------------------------------MODE - Modale add/upd tarifs [CLIENT]-----------------------------------------*/function modeModalTarifClt() {	global $cnx, $tiersManager, $tarifsManager;	$id = isset($_REQUEST['id']) ? intval($_REQUEST['id']) : 0;	$tarif = $id > 0 ? $tarifsManager->getTarifClient($id) : new TarifClient([]);	if (!$tarif instanceof TarifClient) { exit('ERREUR^Instanciation échouée.'); }	$creation = $tarif->getId() == 0;	?>	<i class="fa fa-<?php echo $creation ? 'plus' : 'dollar-sign'; ?> mr-1 gris-c"></i> <?php	echo $creation ? 'Nouveau ' : 'Edition du';?> tarif client^	<?php	// En création, on sélectionne le clt/grp et le pdt	if ($creation) {		$pdtManager = new ProduitManager($cnx);		?>		<div class="alert alert-info">			<div class="row mb-2">				<div class="col">					<div class="input-group input-group">						<div class="input-group-prepend">							<span class="input-group-text">Client</span>						</div>						<select class="form-control selectpicker show-tick" name="id_clt" title="Sélectionnez..." data-live-search="true" data-size="10" data-live-search-placeholder="Rechercher...">							<?php							foreach ($tiersManager->getListeClients([]) as $clt) { ?>								<option value="<?php echo $clt->getId();?>"><?php echo $clt->getNom();?></option>							<?php } ?>						</select>					</div>				</div>			</div>			<div class="row mb-2">				<div class="col text-center texte-fin text-info">					&mdash; ou &mdash;				</div>			</div>			<div class="row">				<div class="col">					<div class="input-group input-group">						<div class="input-group-prepend">							<span class="input-group-text">Groupe</span>						</div>						<select class="form-control selectpicker show-tick" name="id_grp" title="Sélectionnez..." data-live-search="true" data-size="10" data-live-search-placeholder="Rechercher...">							<?php							foreach ($tiersManager->getListeTiersGroupes() as $grp) { ?>								<option value="<?php echo $grp->getId();?>"><?php echo $grp->getNom();?></option>							<?php } ?>						</select>					</div>				</div>			</div>		</div>		<div class="row mb-5">			<div class="col">				<div class="input-group input-group">					<div class="input-group-prepend">						<span class="input-group-text">Produit</span>					</div>					<select class="form-control selectpicker show-tick" name="id_pdt" title="Sélectionnez..." data-live-search="true" data-size="10" data-live-search-placeholder="Rechercher par nom ou code...">						<?php						foreach ($pdtManager->getListeProduits() as $pdt) { ?>							<option value="<?php echo $pdt->getId();?>" data-subtext="<?php echo $pdt->getCode(); ?>"><?php echo $pdt->getNom();?></option>						<?php } ?>					</select>				</div>			</div>		</div>		<?php		// En modif, on affiche juste le fournisseur et le produit	} else { ?>		<div class="row mb-4">			<div class="col">				<div class="alert alert-info">					<p class="text-center"><?php echo $tarif->getId_clt() > 0 ? $tarif->getNom_clt() : $tarif->getNom_groupe(); ?></p>					<p class="text-center nomargin"><?php echo $tarif->getNom_produit(); ?></p>				</div>			</div>		</div>		<?php	} // FIN test création/modif	?>	<div class="row mb-4">		<div class="col-6 offset-3">			<div class="input-group input-group-lg">				<div class="input-group-prepend">					<span class="input-group-text">Tarif</span>				</div>				<input type="text" name="prix" class="form-control text-right" placeholder="0.00" value="<?php echo $tarif->getPrix() > 0 ? $tarif->getPrix() : ''; ?>"/>				<div class="input-group-append">					<span class="input-group-text">€</span>				</div>			</div>		</div>	</div>	<input type="hidden" name="mode" value="saveTarifClt"/>	<input type="hidden" name="id_tarif" value="<?php echo $id; ?>"/>	<?php	?>	^<?php echo $creation ? 'hideSuppr' : ''; // On masque le bouton "Supprimer" si on est en création	exit;} // FIN mode/* ----------------------------------------MODE - Save tarif (add/upd) [FOURNISSEUR]-----------------------------------------*/function modeSaveTarifFrs() {	global $cnx, $tarifsManager;	$id_tarif = isset($_REQUEST['id_tarif']) ? intval($_REQUEST['id_tarif']) : 0;	$tarif = $id_tarif > 0 ? $tarifsManager->getTarifFournisseur($id_tarif) : new TarifFournisseur([]);	if (!$tarif instanceof TarifFournisseur) { exit('-1'); }	$creation = $id_tarif == 0;	$id_frs = isset($_REQUEST['id_frs']) ? intval($_REQUEST['id_frs']) : 0;	$id_pdt = isset($_REQUEST['id_pdt']) ? intval($_REQUEST['id_pdt']) : 0;	$prix   = isset($_REQUEST['prix'])   ? floatval($_REQUEST['prix']) : 0;	// Si on est en création et qu'on a pas de produit ou de fournisseur, on sa barre !	if ($creation && ($id_frs == 0 || $id_pdt == 0)) { exit('-2'); }	// Si on a pas de prix, pareil, rien à faire ici !    if ($prix == 0) { exit('-3'); }    // En création, on enregistre le fournisseur et le produit    if ($creation) {        $tarif->setId_tiers($id_frs);        $tarif->setId_produit($id_pdt);    } // FIN création    $tarif->setPrix($prix);    $res = $tarifsManager->saveTarifFournisseur($tarif);	$logTexte = $res  &&  $creation ? "Création du tarif fournisseur ID #".(int)$res : "";	$logTexte = $res  && !$creation ? "Modification du tarif fournisseur ID #".$id_tarif : $logTexte;	$logTexte = !$res &&  $creation ? "Erreur lors de la création d'un tarif fournisseur !" : $logTexte;	$logTexte = !$res && !$creation ? "Erreur lors de la modification d'un tarif fournisseur !" : $logTexte;	$logType  = $res ? 'info' : 'danger';    $logManager = new LogManager($cnx);    $log = new Log([]);    $log->setLog_texte($logTexte);    $log->setLog_type($logType);	$logManager->saveLog($log);	echo $res ? 1 : 0;	exit;} // FIN mode/* ----------------------------------------MODE - Save tarif (add/upd) [CLIENT]-----------------------------------------*/function modeSaveTarifClt() {	global $cnx, $tarifsManager;	$id_tarif = isset($_REQUEST['id_tarif']) ? intval($_REQUEST['id_tarif']) : 0;	$tarif = $id_tarif > 0 ? $tarifsManager->getTarifClient($id_tarif) : new TarifClient([]);	if (!$tarif instanceof TarifClient) { exit('-1'); }	$creation = $id_tarif == 0;	$id_clt = isset($_REQUEST['id_clt']) ? intval($_REQUEST['id_clt']) : 0;	$id_grp = isset($_REQUEST['id_grp']) ? intval($_REQUEST['id_grp']) : 0;	$id_pdt = isset($_REQUEST['id_pdt']) ? intval($_REQUEST['id_pdt']) : 0;	$prix   = isset($_REQUEST['prix'])   ? floatval($_REQUEST['prix']) : 0;	// Si on est en création et qu'on a pas de produit ou de client, on sa barre !	if ($creation && (($id_clt == 0 && $id_grp == 0) || $id_pdt == 0)) { exit('-2'); }	// Si on a un client + un groupe, on prends le client et on ignore le groupe !	if ($id_clt > 0) { $id_grp = 0; }	// Si on a pas de prix, pareil, rien à faire ici !	if ($prix == 0) { exit('-3'); }	// En création, on enregistre le fournisseur et le produit	if ($creation) {		$tarif->setId_tiers($id_clt);		$tarif->setId_tiers_groupe($id_grp);		$tarif->setId_produit($id_pdt);	} // FIN création	$tarif->setPrix($prix);	$res = $tarifsManager->saveTarifClient($tarif);	$logTexte = $res  &&  $creation ? "Création du tarif client ID #".(int)$res : "";	$logTexte = $res  && !$creation ? "Modification du tarif client ID #".$id_tarif : $logTexte;	$logTexte = !$res &&  $creation ? "Erreur lors de la création d'un tarif client !" : $logTexte;	$logTexte = !$res && !$creation ? "Erreur lors de la modification d'un tarif client !" : $logTexte;	$logType  = $res ? 'info' : 'danger';	$logManager = new LogManager($cnx);	$log = new Log([]);	$log->setLog_texte($logTexte);	$log->setLog_type($logType);	$logManager->saveLog($log);	echo $res ? 1 : 0;	exit;} // FIN mode/* --------------------------------------MODE - Supprime un tarif  [CLIENT]---------------------------------------*/function modeSupprTarifClt() {	global $cnx, $tarifsManager;	$id_tarif = isset($_REQUEST['id_tarif']) ? intval($_REQUEST['id_tarif']) : 0;	if ($id_tarif == 0) { exit('-1'); }	$tarif = $tarifsManager->getTarifClient($id_tarif);	if (!$tarif instanceof TarifClient) { exit('-2'); }	$res = $tarifsManager->supprTarifClt($tarif);	$logTexte = $res  ? "Suppression du tarif client ID #" . $id_tarif : "";	$logTexte = !$res ? "Erreur lors de la suppression du tarif client ID #" . $id_tarif : $logTexte;	$logType  = $res ? 'warning' : 'danger';	$logManager = new LogManager($cnx);	$log = new Log([]);	$log->setLog_texte($logTexte);	$log->setLog_type($logType);	$logManager->saveLog($log);	echo $res ? 1 : 0;	exit;} // FIN mode/* --------------------------------------MODE - Supprime un tarif  [FOURNISSEUR]---------------------------------------*/function modeSupprTarifFrs() {	global $cnx, $tarifsManager;	$id_tarif = isset($_REQUEST['id_tarif']) ? intval($_REQUEST['id_tarif']) : 0;	if ($id_tarif == 0) { exit('-1'); }	$tarif = $tarifsManager->getTarifFournisseur($id_tarif);	if (!$tarif instanceof TarifFournisseur) { exit('-2'); }	$res = $tarifsManager->supprTarifFrs($tarif);	$logTexte = $res  ? "Suppression du tarif fournisseur ID #" . $id_tarif : "";	$logTexte = !$res ? "Erreur lors de la suppression du tarif fournisseur ID #" . $id_tarif : $logTexte;	$logType  = $res ? 'warning' : 'danger';	$logManager = new LogManager($cnx);	$log = new Log([]);	$log->setLog_texte($logTexte);	$log->setLog_type($logType);	$logManager->saveLog($log);	echo $res ? 1 : 0;	exit;} // FIN mode/* --------------------------------------MODE - Modale import CSV [FOURNISSEUR]---------------------------------------*/function modeModaleImportCsvFrs() {	global $cnx, $tarifsManager, $tiersManager;    ?>    <form class="row" enctype="multipart/form-data" method="post" id="formImportCsv" action="<?php echo __CBO_SCRIPTS_AJAX_URL__?>fct_tarifs.php">        <input type="hidden" name="mode" value="importCsvFrs" />        <div class="col-6">            <div class="row">                <div class="col">                    <div class="alert alert-secondary">                        <p class="gris-5 mb-1"><i class="fa fa-database gris-9 mr-1"></i> Méthode d'import :</p>                        <hr class="mt-0 mb-2">                        <ul class="nomargin">                            <li><input type="radio" class="icheck" id="methImp1" name="methode" value="add" checked><label for="methImp1" class="ml-2 pointeur text-13">Ajouter les données du fichier aux tarifs existants</label></li>                            <li><input type="radio" class="icheck" id="methImp2" name="methode" value="upd"><label for="methImp2" class="ml-2 pointeur text-13">Remplacer les tarifs du fournisseur par les données du fichier</label></li>                        </ul>                    </div>                </div>            </div>            <div class="row mt-1">                <div class="col">                    <div class="alert alert-secondary">                        <p class="gris-5 mb-1"><i class="fa fa-industry gris-9 mr-1"></i> Fournisseur :</p>                        <hr class="mt-0 mb-2">                        <select class="selectpicker form-control show-tick" name="id_frs" title="Sélectionnez..." data-live-search="true" data-live-search-placeholder="Rechercher">							<?php							foreach ($tiersManager->getListeFournisseurs([]) as $frs) { ?>                                <option value="<?php echo $frs->getId(); ?>"><?php echo $frs->getNom(); ?></option>							<?php }							?>                        </select>                    </div>                </div>            </div>        </div>        <div class="col-6">            <p class="gris-5 mb-1"><i class="fa fa-file-csv gris-9 mr-1"></i> Format de fichier requis :</p>            <hr class="mt-0 mb-2">            <ul class="nomargin">                <li class="texte-fin text-13"><i class="fa fa-check gris-9 mr-1 fa-fw"></i> Fichier <kbd>CSV</kbd> avec séparateur « <em class="texte-fin">point-virgule</em> » (;)</li>                <li class="texte-fin text-13"><i class="fa fa-check gris-9 mr-1 fa-fw"></i> Première colonne («A») : Code article <em class="texte-fin">(Exemple : 30202)</em></li>                <li class="texte-fin text-13"><i class="fa fa-check gris-9 mr-1 fa-fw"></i> Seconde colonne («B») : Tarif fournisseur <em class="texte-fin">(Exemple : 12.34)</em></li>            </ul>            <div class="alert alert-warning mt-3 text-center">                <i class="fa fa-info-circle"></i>                <span class="texte-fin text-13">ATTENTION !<br/>N'utiliser que des caractères numériques dans la colonne « Tarif » :</span>                <ul class="nomargin">                    <li class="texte-fin text-danger text-13"> 12.34 <b>€</b> <i class="fa fa-times fa-fw ml-1"></i></li>                    <li class="texte-fin text-danger text-13"> 12.34 <b>HT</b> <i class="fa fa-times fa-fw ml-1"></i></li>                    <li class="texte-fin text-success text-13"> 12.34 <i class="fa fa-check fa-fw ml-1"></i></li>                </ul>            </div>        </div>        <div class="col-12 mt-3">            <div class="alert alert-secondary">                <div class="custom-file">                    <input type="file" class="custom-file-input" id="customFile" name="fichier">                    <label class="custom-file-label" for="customFile">Cliquez ici pour sélectionnez le fichier à traiter...</label>                </div>            </div>        </div>    </form>    <?php} // FIN mode/* --------------------------------------MODE - Import CSV [FOURNISSEUR]---------------------------------------*/function modeImportCsvFrs() {	global $cnx, $tarifsManager;	$id_frs     = isset($_REQUEST['id_frs'])    ? intval($_REQUEST['id_frs'])   : 0;	$methode    = isset($_REQUEST['methode'])   ? $_REQUEST['methode']          : '';	$fichier    = isset($_FILES['fichier'])     ? $_FILES['fichier']            : false;	// Gestion erreur données	if (!$fichier || $id_frs == 0) {	    header('Location: ' . __CBO_ROOT_URL__.'gc-tarifs-frs.php?e='.base64_encode(1));	    exit;    }	// Lecture du fichier	$csv = fopen($fichier['tmp_name'], 'r+');    $nb_lignes = 0;    $query_ins = 'INSERT IGNORE INTO `pe_tarif_fournisseur` (`id_tiers`, `id_produit`, `prix`) VALUES ';    $checklen = strlen($query_ins);    // Boucle sur les lignes du fichier	while (($row= fgetcsv($csv, 1000)) !== false ) {        $ligne      = is_array($row) ? $row[0] : $row ;	    $colonnes   = explode(';',$ligne);	    $code_pdt   = isset($colonnes[0]) ? intval(str_replace('"','',trim($colonnes[0])))   : '';	    $prix       = isset($colonnes[1]) ? floatval(str_replace('"','',trim(str_replace(',', '.', $colonnes[1])))) : 0;	    // On récupère les ID produit par le code        $query_ids_pdts = 'SELECT `id` FROM `pe_produits` WHERE `code` = ' . $code_pdt;        $query = $cnx->prepare($query_ids_pdts);        $query->execute();        $ids = [];		foreach ($query->fetchAll(PDO::FETCH_ASSOC) as $donnee) { $ids[] = $donnee['id']; }	    // On ignore les lignes non pertinantes        if ($code_pdt == '' || $prix < 0.001 || empty($ids)) { continue; }        // On concatène la requête en bouclant sur les ID -> Si ils ont attribués plusieurs codes identitiques, on intègre les tarifs pour chaque produit ayant le même code        foreach ($ids as $id_produit) {			$query_ins.= '('.$id_frs.', '.$id_produit.', '.$prix.'),';        } // FIN boucle sur les ID produit		$nb_lignes++;	} // FIN boucle sur les lignes du fichier    // On vérifie que la requête n'est pas vide et on supprime le dernier espace    if (strlen($query_ins) == $checklen) {		header('Location: ' . __CBO_ROOT_URL__.'gc-tarifs-frs.php?e='.base64_encode(2));		exit;    }	$query_ins = substr($query_ins,0,-1);    // Si on doit supprimer en amont...	if ($methode == 'upd') {	    $query_del = 'DELETE FROM `pe_tarif_fournisseur` WHERE `id_tiers` = ' . $id_frs;		$queryD = $cnx->prepare($query_del);		if (!$queryD->execute()) {			header('Location: ' . __CBO_ROOT_URL__.'gc-tarifs-frs.php?e='.base64_encode(3));			exit;        }    }	// Intégration des données    $queryI = $cnx->prepare($query_ins);	if (!$queryI->execute()) {		header('Location: ' . __CBO_ROOT_URL__.'gc-tarifs-frs.php?e='.base64_encode(4));		exit;	}	// Log    $logManager = new LogManager($cnx);	$log = new Log([]);	$log->setLog_type('info');	$log->setLog_texte('Import CSV de ' . $nb_lignes . ' tarifs fournisseurs');    $logManager->saveLog($log);	// OK, redirection	header('Location: ' . __CBO_ROOT_URL__.'gc-tarifs-frs.php?i='.base64_encode($nb_lignes));	exit;} // FIN mode/* --------------------------------------MODE - Export CSV [FOURNISSEUR]---------------------------------------*/function modeExportFrsCsv() {	global $cnx, $tarifsManager;	$liste = $tarifsManager->getListeTarifFournisseurs();	$fichier = 'tarifs-frs.csv';	$chemin = __CBO_ROOT_PATH__.'/temp/'.$fichier;	if (file_exists($chemin)) { unlink($chemin); }	$csv = fopen($chemin, 'w');	// En-tête	fputcsv($csv, [		'Fournisseur',		'Produit',		'Tarif (EUR)'	], ';');	foreach ( $liste as $tarif ) {		$ligneArray = [			$tarif->getNom_frs(),			$tarif->getNom_pdt(),			number_format($tarif->getPrix(),2, '.', '')		];		fputcsv($csv, $ligneArray, ';');	}	fclose($csv);	echo __CBO_TEMP_URL__.$fichier;} // FIN mode/* --------------------------------------MODE - Export CSV [CLIENT]---------------------------------------*/function modeExportCltCsv() {	global $cnx, $tarifsManager;	$liste = $tarifsManager->getListeTarifClients();	$fichier = 'tarifs-clt.csv';	$chemin = __CBO_ROOT_PATH__.'/temp/'.$fichier;	if (file_exists($chemin)) { unlink($chemin); }	$csv = fopen($chemin, 'w');	// En-tête	fputcsv($csv, [		'Client/Groupe',		'Produit',		'Tarif (EUR)'	], ';');	foreach ( $liste as $tarif ) {		$nomCltGrp = $tarif->getNom_clt() != '' ? $tarif->getNom_clt() : 'Groupe ' . $tarif->getNom_grp();		$ligneArray = [			$nomCltGrp,			$tarif->getNom_pdt(),			number_format($tarif->getPrix(),2, '.', '')		];		fputcsv($csv, $ligneArray, ';');	}	fclose($csv);	echo __CBO_TEMP_URL__.$fichier;} // FIN mode/* ------------------------------------------MODE - Export PDF [FOURNISSEUR]-------------------------------------------*/function modeExportPdf() {	require_once(__CBO_ROOT_PATH__.'/vendor/html2pdf/html2pdf.class.php');	$type = isset($_REQUEST['type']) ? trim(strtolower($_REQUEST['type'])) : '';	$types = ['frs', 'clt'];	if (!in_array($type, $types)) {exit('-1'); }	$id_client = isset($_REQUEST['id_client']) ? intval($_REQUEST['id_client']) : 0;	ob_start();	$content = $id_client == 0 ?  genereContenuPdf($type) : genereContenuPdfClient($id_client);	$content .= ob_get_clean();	$nom_fichier = 'tarifs-'.$type.'.pdf';	$chemin = __CBO_ROOT_PATH__.'/temp/'.$nom_fichier;	if (file_exists($chemin)) { unlink($chemin); }	try {		$html2pdf = new HTML2PDF('P', 'A4', 'fr', false, 'UTF-8', [15, 15, 15, 15]);		$html2pdf->pdf->SetAutoPageBreak(false, 0);		$html2pdf->setDefaultFont('helvetica');		$html2pdf->writeHTML(utf8_decode($content));;		$savefilepath = __CBO_ROOT_PATH__.'/temp/'.$nom_fichier;		$html2pdf->Output($savefilepath, 'F');		echo __CBO_TEMP_URL__.$nom_fichier;	}	catch(HTML2PDF_exception $e) {		vd($e);		exit;	}	exit;} // FIN mode/* ----------------------------------------------------------------------------FONCTION DEPORTEE - Génère le contenu HTML pour le PDF CLIENT-----------------------------------------------------------------------------*/function genereContenuPdfClient($id_client) {	global $cnx, $tarifsManager;	$tiersManager = new TiersManager($cnx);	$client = $tiersManager->getTiers($id_client);	if (!$client instanceof Tiers) { exit('Erreur instanciation client !'); }	// HEAD	$contenu = '<!DOCTYPE html>        <html>        <head>          <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>          <style type="text/css">'.file_get_contents(__CBO_CSS_URL__.'pdf.css').'</style>         </head>        <body>';	$documentsManager = new DocumentManager($cnx);	$traductionsManager = new TraductionsManager($cnx);	$id_langue = $client->getId_langue();	$designationTrad = $traductionsManager->getTrad('designation', $id_langue);	$tarifTrad = $traductionsManager->getTrad('tarif', $id_langue);	$htTrad = $traductionsManager->getTrad('ht', $id_langue);	$contenu.= $documentsManager->getHeaderDocumentPdf($client, 'f', 'tarifs', $id_langue);	$listeTarifs = $tarifsManager->getListeTarifClients([ 'id_clt' => $id_client, 'id_langue' => $id_langue ]);	$contenu.= '<table class="table mt-10">                    <tr>                        <th class="w10">Code</th>                        <th class="w15">EAN</th>                        <th class="w60">'.$designationTrad.'</th>                        <th class="w15 text-right pr-10">'.$tarifTrad.' '.$htTrad.' (EUR)</th>                    </tr>';	// Boucle sur les tarifs du client	foreach ($listeTarifs as $tarifClt) {	    // Attention le caractère Œ n'est pas géré par HTML2PDF, même en UTF-8 !		$contenu.= '<tr>                        <td class="w10">'.$tarifClt->getCode_produit().'</td>                        <td class="w15">'.$tarifClt->getEan13().'</td>                        <td class="w60">'.str_replace('Œ', 'OE',$tarifClt->getNom_pdt()).'</td>                         <td class="w15 text-right pr-10">'.number_format($tarifClt->getPrix(),2).'</td>                    </tr>';    } // FIN boucle sur les tarifs du client    $contenu.= '</table>';	$contenu.= '</body>        </html>';	// RETOUR CONTENU	return $contenu;} // FIN fonction/* ----------------------------------------------------------------------------FONCTION DEPORTEE - Génère le contenu HTML pour le PDF-----------------------------------------------------------------------------*/function genereContenuPdf($type) { // type = frs / clt	global $cnx, $tarifsManager;	// HEAD	$contenu = '<!DOCTYPE html><html><head>  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>  <style type="text/css">'.file_get_contents(__CBO_CSS_URL__.'pdf.css').'</style> </head><body>';	$contenu.=  genereEntetePagePdf($type);	// PAGE 1	// GENERAL	// Préparation des variables	$na             = '<span class="gris-9 text-11"><i>Non renseigné</i></span>';	$tiret          = '<span class="gris-9 text-11"><i>-</i></span>';	// Préparation des variables	$liste = $type == 'frs' ? $tarifsManager->getListeTarifFournisseurs() : $tarifsManager->getListeTarifClients();	// Génération du contenu HTML	$contenu.= '<table class="table table-liste w100 mt-10">';	$type_txt = $type == 'frs' ? 'fournisseur' : 'client';	// Aucun	if (empty($liste)) {		$contenu.= '<tr><td class="w100 text-center gris-9 text-11"><i>Aucun tarif '.$type_txt.'</i></td></tr>';	// Liste	} else {		$type_txt_th =  $type == 'frs' ? 'Fournisseur' : 'Client/Groupe';		$contenu.= '<tr>                        <th class="w40">'.$type_txt_th.'</th>                        <th class="w40">Produit</th>                        <th class="w20 text-right">Tarif (EUR)</th>                    </tr>';		foreach ($liste as $item) {			$nomItem = $item instanceof TarifFournisseur ? $item->getNom_frs() : '';			if ($nomItem == '') {				$nomItem = $item->getNom_clt() != '' ? $item->getNom_clt() :  'Groupe '.$item->getNom_grp();			}			$contenu.= '<tr>                            <td class="w40">' . $nomItem . '</td>                            <td class="w40">' . $item->getNom_pdt() . '</td>                            <td class="w20 text-right pr-10">' . number_format($item->getPrix(),2,'.', '') . '</td>                        </tr>';		} // FIN boucle	} // FIN test pas vide	$contenu.= '</table>';	$contenu.= '<table class="table w100 mt-15"><tr><th class="w100 recap">Nombre de tarifs '.$type_txt.' : '. count($liste) .'</th></tr></table>';	// FOOTER	$contenu.= '<table class="w100 gris-9">                    <tr>                        <td class="w50 text-8">Document édité le '.date('d/m/Y').' à '.date('H:i:s').'</td>                        <td class="w50 text-right text-6">&copy; 2020 IPREX / INTERSED </td>                    </tr>                </table>            </body>        </html>';	// RETOUR CONTENU	return $contenu;} // FIN fonction déportée/* ----------------------------------------------------------------------------FONCTION DEPORTEE - Génère le header du PDF (logo...)-----------------------------------------------------------------------------*/function genereEntetePagePdf($type) { // type = frs / clt	$type_txt = $type ==  'frs' ? 'fournisseur' : 'client';	$entete = '<div class="header">                <table class="table w100">                    <tr>                        <td class="w33"><img src="'.__CBO_ROOT_URL__.'img/logo-pe-350.jpg" alt="PROFIL EXPORT" class="logo"/></td>                        <td class="w34 text-center pt-10">                            Liste des tarifs '.$type_txt.' au '.date("d/m/Y").'                        </td>                        <td class="w33 text-right text-14">                            <p class="text-18"><b>IPREX</b></p>                            <p class="text-12 gris-7">Intranet PROFIL EXPORT</p>                        </td>                    </tr>                                </table>               </div>';	return $entete;} // FIN fonction déportée/* --------------------------------------MODE - Modale import CSV [CLIENT]---------------------------------------*/function modeModaleImportCsvClt() {	global $cnx, $tarifsManager, $tiersManager;	?>	<form class="row" enctype="multipart/form-data" method="post" id="formImportCsv" action="<?php echo __CBO_SCRIPTS_AJAX_URL__?>fct_tarifs.php">		<input type="hidden" name="mode" value="importCsvClt" />		<div class="col-6">			<div class="row">				<div class="col">					<div class="alert alert-secondary">						<p class="gris-5 mb-1"><i class="fa fa-database gris-9 mr-1"></i> Méthode d'import :</p>						<hr class="mt-0 mb-2">						<ul class="nomargin">							<li><input type="radio" class="icheck" id="methImp1" name="methode" value="add" checked><label for="methImp1" class="ml-2 pointeur text-13">Ajouter les données du fichier aux tarifs existants</label></li>							<li><input type="radio" class="icheck" id="methImp2" name="methode" value="upd"><label for="methImp2" class="ml-2 pointeur text-13">Remplacer les tarifs du client/groupe par ceux du fichier</label></li>						</ul>					</div>				</div>			</div>			<div class="row mt-1">				<div class="col-12">					<div class="alert alert-secondary">						<p class="gris-5 mb-1"><i class="fa fa-address-card gris-9 mr-1"></i> Client :</p>						<hr class="mt-0 mb-2">						<select class="selectpicker form-control show-tick" name="id_clt" title="Sélectionnez..." data-live-search="true" data-live-search-placeholder="Rechercher">							<?php							foreach ($tiersManager->getListeClients([]) as $clt) { ?>								<option value="<?php echo $clt->getId(); ?>"><?php echo $clt->getNom(); ?></option>							<?php }							?>						</select>                        <div class="text-center gris-9 texte-fin mt-2">                            &mdash; ou &mdash;                        </div>                        <p class="gris-5 mb-1 margin-top--8"><i class="fa fa-sitemap gris-9 mr-1"></i> Groupe :</p>                        <hr class="mt-0 mb-2">                        <select class="selectpicker form-control show-tick" name="id_grp" title="Sélectionnez..." data-live-search="true" data-live-search-placeholder="Rechercher">							<?php							foreach ($tiersManager->getListeTiersGroupes() as $grp) { ?>                                <option value="<?php echo $grp->getId(); ?>"><?php echo $grp->getNom(); ?></option>							<?php }							?>                        </select>					</div>				</div>			</div>		</div>		<div class="col-6">			<p class="gris-5 mb-1"><i class="fa fa-file-csv gris-9 mr-1"></i> Format de fichier requis :</p>			<hr class="mt-0 mb-2">			<ul class="nomargin">				<li class="texte-fin text-13"><i class="fa fa-check gris-9 mr-1 fa-fw"></i> Fichier <kbd>CSV</kbd> avec séparateur « <em class="texte-fin">point-virgule</em> » (;)</li>				<li class="texte-fin text-13"><i class="fa fa-check gris-9 mr-1 fa-fw"></i> Première colonne («A») : Code article <em class="texte-fin">(Exemple : 30202)</em></li>				<li class="texte-fin text-13"><i class="fa fa-check gris-9 mr-1 fa-fw"></i> Seconde colonne («B») : Tarif <em class="texte-fin">(Exemple : 12.34)</em></li>			</ul>			<div class="alert alert-warning mt-3 text-center">				<i class="fa fa-info-circle"></i>				<span class="texte-fin text-13">ATTENTION !<br/>N'utiliser que des caractères numériques dans la colonne « Tarif » :</span>				<ul class="nomargin">					<li class="texte-fin text-danger text-13"> 12.34 <b>€</b> <i class="fa fa-times fa-fw ml-1"></i></li>					<li class="texte-fin text-danger text-13"> 12.34 <b>HT</b> <i class="fa fa-times fa-fw ml-1"></i></li>					<li class="texte-fin text-success text-13"> 12.34 <i class="fa fa-check fa-fw ml-1"></i></li>				</ul>			</div>		</div>		<div class="col-12 mt-3">			<div class="alert alert-secondary">				<div class="custom-file">					<input type="file" class="custom-file-input" id="customFile" name="fichier">					<label class="custom-file-label" for="customFile">Cliquez ici pour sélectionnez le fichier à traiter...</label>				</div>			</div>		</div>	</form>	<?php} // FIN mode/* --------------------------------------MODE - Import CSV [CLIENT]---------------------------------------*/function modeImportCsvClt() {	global $cnx, $tarifsManager;	$id_clt     = isset($_REQUEST['id_clt'])    ? intval($_REQUEST['id_clt'])   : 0;	$id_grp     = isset($_REQUEST['id_grp'])    ? intval($_REQUEST['id_grp'])   : 0;	$methode    = isset($_REQUEST['methode'])   ? $_REQUEST['methode']          : '';	$fichier    = isset($_FILES['fichier'])     ? $_FILES['fichier']            : false;	// Gestion erreur données	if (!$fichier || ($id_clt == 0 && $id_grp == 0)) {		header('Location: ' . __CBO_ROOT_URL__.'gc-tarifs-clt.php?e='.base64_encode(1));		exit;	}	// Si on a ballancé un client + un groupe, on ignore le groupe    if ($id_clt > 0) { $id_grp = 0; }	// Lecture du fichier	$csv = fopen($fichier['tmp_name'], 'r+');	$nb_lignes = 0;	$query_ins = 'INSERT IGNORE INTO `pe_tarif_client` (`id_tiers`, `id_tiers_groupe`, `id_produit`, `prix`) VALUES ';	$checklen = strlen($query_ins);	// Boucle sur les lignes du fichier	while (($row= fgetcsv($csv, 1000)) !== false ) {		$ligne      = is_array($row) ? $row[0] : $row ;		$colonnes   = explode(';',$ligne);		$code_pdt   = isset($colonnes[0]) ? intval(str_replace('"','',trim($colonnes[0])))   : '';		$prix       = isset($colonnes[1]) ? floatval(str_replace('"','',trim(str_replace(',', '.', $colonnes[1])))) : 0;		// On récupère les ID produit par le code		$query_ids_pdts = 'SELECT `id` FROM `pe_produits` WHERE `code` = ' . $code_pdt;		$query = $cnx->prepare($query_ids_pdts);		$query->execute();		$ids = [];		foreach ($query->fetchAll(PDO::FETCH_ASSOC) as $donnee) { $ids[] = $donnee['id']; }		// On ignore les lignes non pertinantes		if ($code_pdt == '' || $prix < 0.001 || empty($ids)) { continue; }		// On concatène la requête en bouclant sur les ID -> Si ils ont attribués plusieurs codes identitiques, on intègre les tarifs pour chaque produit ayant le même code		foreach ($ids as $id_produit) {			$query_ins.= '('.$id_clt.', '.$id_grp.', '.$id_produit.', '.$prix.'),';		} // FIN boucle sur les ID produit		$nb_lignes++;	} // FIN boucle sur les lignes du fichier	// On vérifie que la requête n'est pas vide et on supprime le dernier espace	if (strlen($query_ins) == $checklen) {		header('Location: ' . __CBO_ROOT_URL__.'gc-tarifs-clt.php?e='.base64_encode(2));		exit;	}	$query_ins = substr($query_ins,0,-1);	// Si on doit supprimer en amont...	if ($methode == 'upd') {		$query_del = 'DELETE FROM `pe_tarif_client` WHERE ';		$query_del.= $id_clt > 0 ? ' `id_tiers` = ' . $id_clt : '';		$query_del.= $id_grp > 0 ? ' `id_tiers_groupe` = ' . $id_grp : '';		$queryD = $cnx->prepare($query_del);		if (!$queryD->execute()) {			header('Location: ' . __CBO_ROOT_URL__.'gc-tarifs-clt.php?e='.base64_encode(3));			exit;		}	}	// Intégration des données	$queryI = $cnx->prepare($query_ins);	if (!$queryI->execute()) {		header('Location: ' . __CBO_ROOT_URL__.'gc-tarifs-clt.php?e='.base64_encode(4));		exit;	}	// Log	$logManager = new LogManager($cnx);	$log = new Log([]);	$log->setLog_type('info');	$log->setLog_texte('Import CSV de ' . $nb_lignes . ' tarifs clients');	$logManager->saveLog($log);	// OK, redirection	header('Location: ' . __CBO_ROOT_URL__.'gc-tarifs-clt.php?i='.base64_encode($nb_lignes));	exit;} // FIN mode// Enregistre les tarifs modifiés dans la listefunction modeSaveTousTarifs() {	global $cnx, $tarifsManager;	$tarifclt = isset($_REQUEST['tarifclt']) && is_array($_REQUEST['tarifclt']) ? $_REQUEST['tarifclt'] : [];	if (empty($tarifclt)) { exit; }	$erreur = false;	// Boucle sur les tarifs passés	foreach ($tarifclt as $id_tarif => $prix) {		$prix = str_replace(',','.', $prix);	    $tarif = $tarifsManager->getTarifClient($id_tarif);	    if (!$tarif instanceof TarifClient) { continue; }	    $tarif->setPrix($prix);	    if (!$tarifsManager->saveTarifClient($tarif)) { $erreur = true; }    } // FIN boucle tarifs	echo $erreur ? 0 : 1;	$typeLog    = $erreur ? 'danger' : 'info';	$texteLog   = $erreur ? 'Echec lors de la modification des tarifs client' : 'Modification massive des tarifs clients';	$log = new Log([]);	$log->setLog_type($typeLog);	$log->setLog_texte($texteLog);	$logManager = new LogManager($cnx);	$logManager->saveLog($log);	exit;} // FIN mode// Supprime un tarif clientfunction modeSupprTarifClient() {	global $cnx, $tarifsManager;	$id_tarif = isset($_REQUEST['id_tarif']) ? intval($_REQUEST['id_tarif']) : 0;	if ($id_tarif == 0) { exit; }	$tarif = $tarifsManager->getTarifClient($id_tarif);	if (!$tarif instanceof TarifClient) { exit; }	$res = $tarifsManager->supprTarifClt($tarif);	$typeLog    = $res ? 'info' :  'danger';	$texteLog   = $res ? 'Suppression tarif client' : 'Echec de la suppresion tarif client';	$log = new Log([]);	$log->setLog_type($typeLog);	$log->setLog_texte($texteLog);	$logManager = new LogManager($cnx);	$logManager->saveLog($log);	exit;} // FIN mode// Affiche la liste des produits à rattacher à un clientfunction modeSelectionPdtsClient() {	global $cnx, $tarifsManager;	$tiersManager = new TiersManager($cnx);	$id_client = isset($_REQUEST['id_client']) ? intval($_REQUEST['id_client']) : 0;	if ($id_client == 0) { exit; }	$client = $tiersManager->getTiers($id_client);	if (!$client instanceof Tiers) { exit; }    // On affiche tous les produits !! et une checkbox a côté pour savoir s'il est rattaché au client (c'est à dire s'il est dans la table tarif client)    $produitsManager = new ProduitManager($cnx);	$produits = $produitsManager->getListeProduits(['show_inactifs' => true]);	if (empty($produits)) { exit('Erreur de récupération des produits !'); }	// On récupère un array des produits déjà rattachés pour précocher les checkbox    $idsProduitsClient = $tarifsManager->getIdsProduitsTarifClients($client);	?>    <form id="assoPdtClt">        <input type="hidden" name="mode" value="saveAssoCltPdt"/>        <input type="hidden" name="id_client" value="<?php echo $id_client; ?>"/>        <table class="table admin table-v-middle" id="selectPdts4clt">            <thead>                <tr>                    <th data-colonne="0" class="pointeur">Code <i class="fa fa-sort gris-c ml-1"></i></th>                    <th data-colonne="1" class="pointeur">Produit <i class="fa fa-sort gris-c ml-1"></i></th>                    <th data-colonne="2" class="text-center t-actions"><?php echo $client->getNom()?></th>                </tr>            </thead>            <tbody>            <?php            foreach ($produits as $pdt) { ?>                <tr>                    <td><?php echo $pdt->getCode(); ?></td>                    <td><?php echo $pdt->getNom(); ?></td>                    <td class="text-center t-actions">                        <input type="checkbox" class="icheck" <?php echo in_array($pdt->getId(), $idsProduitsClient) ? 'checked' : ''; ?> name="assopdtclt[<?php echo $pdt->getId();?>]"/>                    </td>                </tr>            <?php }            ?>            </tbody>        </table>    </form>    <?php} // FIN mode// Enregistre les association entre produits et clientfunction modeSaveAssoCltPdt() {	global $cnx, $tarifsManager;	$tiersManager = new TiersManager($cnx);	$id_client = isset($_REQUEST['id_client']) ? intval($_REQUEST['id_client']) : 0;	if ($id_client == 0) { exit; }	$client = $tiersManager->getTiers($id_client);	if (!$client instanceof Tiers) { exit; }	$assopdtclt = isset($_REQUEST['assopdtclt']) && is_array($_REQUEST['assopdtclt']) ? $_REQUEST['assopdtclt'] : [];	if (empty($assopdtclt)) { exit; }	// ici il est du genre "assopdtclt[idpdt] = on", on doit en faire un array de type "assopdtclt[]  = idpdt"    $liste = [];    foreach ($assopdtclt as $asso => $v) {        $liste[] = (int)$asso;    }	// on récupère tous les id_pdt de ce client	$ids_pdt_clt = $tarifsManager->getIdsProduitsTarifClients($client);	// On boucle dessus    foreach ($ids_pdt_clt as $id_pdt_clt) {        // Si il n'est pas dans ceux cochés, on le supprime        if (!in_array($id_pdt_clt, $liste)) {			$tarifsManager->supprTarifCltByClientPdt($id_client, $id_pdt_clt);        }    } // FIN boucle    // A présent on rajoute tous les tarifs cochés    foreach ($liste as $id_pdt) {        // S'il existe déjà on ne l'inserre pas        if (in_array($id_pdt, $ids_pdt_clt)) { continue; }        $tarifClient = new TarifClient([]);		$tarifClient->setId_tiers($id_client);		$tarifClient->setPrix(0);		$tarifClient->setId_produit($id_pdt);		$tarifClient->setId_tiers_groupe(0);		$tarifsManager->saveTarifClient($tarifClient);    }	$log = new Log([]);	$log->setLog_type('info');	$log->setLog_texte('Sélection des produits associés au client #'.$id_client.' (tarifs client)');	$logManager = new LogManager($cnx);	$logManager->saveLog($log);	exit;    exit;} // FIN mode// Modale de sélection de l'adresse pour envoi des tarifs à un client par mailfunction modeModalEnvoiMail() {	global $cnx, $tarifsManager;	$tiersManager = new TiersManager($cnx);	$id_client = isset($_REQUEST['id_client']) ? intval($_REQUEST['id_client']) : 0;	if ($id_client == 0) { exit; }	$client = $tiersManager->getTiers($id_client);	if (!$client instanceof Tiers) { exit; }	$contactsManager = new ContactManager($cnx);	$contacts = $contactsManager->getListeContacts(['id_tiers' => $id_client]);	$emails = [];	foreach ($contacts as $ctc) {	    if (!Outils::verifMail($ctc->getEmail())) { continue; }	    $tmp = [];	    $tmp['nom'] = $ctc->getNom_complet();	    $tmp['id'] = $ctc->getId();	    $emails[$ctc->getEmail()] = $tmp;    }	// Si aucune adresse e-mail    if (empty($emails)) { ?>        <div class="alert alert-danger">            ENVOI IMPOSSIBLE !<p>Aucune adresse e-mail valide renseignée pour ce client...</p>        </div>    <?php exit; }	?>    <input type="hidden" class="idclt" value="<?php echo $id_client; ?>"/>    <div class="row mb-0">        <div class="col-12 texte-fin text-13">            Sélectionnez le contact destinataire :        </div>        <div class="col-12">            <select class="selectpicker form-control">                <?php                foreach ($emails as $mail => $donnees) {                    $nom = isset($donnees['nom']) ? trim($donnees['nom']) : '';                    $id = isset($donnees['id']) ? intval($donnees['id']) : 0;                    if ($id == 0) { continue; }                    ?>                    <option value="<?php echo $id; ?>" data-subtext="<?php echo $nom; ?>"><?php echo $mail; ?></option>				<?php }                ?>            </select>        </div>        <div class="col-12 mt-2 texte-fin text-13 text-center">            Recevoir une copie            <input type="checkbox" class="togglemaster"                   data-toggle              = "toggle"                   data-on                  = "Oui"                   data-off                 = "Non"                   data-onstyle             = "info"                   data-offstyle            = "secondary"                   data-height                = "20"                   checked                    />        </div>        <div class="col-12">        <div class="alert alert-info mt-3 texte-fin text-12">            <i class="fa fa-info-circle mr-1 text-infof"></i>            La ou les adresses en copies sont modifiables dans les paramètres de la Gescom.        </div>        </div>    </div>    <?php} // FIN mode// Envoi des tarifs au client par e-mailfunction modeEnvoiPdfClient() {	global $cnx, $tarifsManager, $conf_email; // $conf_email = from	$tiersManager = new TiersManager($cnx);	$id_client = isset($_REQUEST['id_client']) ? intval($_REQUEST['id_client']) : 0;	if ($id_client == 0) { exit; }	$client = $tiersManager->getTiers($id_client);	if (!$client instanceof Tiers) { exit; }	$id_ctc = isset($_REQUEST['id_ctc']) ? intval($_REQUEST['id_ctc']) : 0;	$contactsManager = new ContactManager($cnx);	$ctc = $contactsManager->getContact($id_ctc);	if (!$ctc instanceof Contact) { exit; }	if (!Outils::verifMail($ctc->getEmail())) { exit; }	$dest_cc = [];	$dest = [$ctc->getEmail()];	$cc = isset($_REQUEST['cc']) ? intval($_REQUEST['cc']) : 0;	if ($cc == 1) {	    $configManager = new ConfigManager($cnx);	    $cc_mails = $configManager->getConfig('cc_mails');	    $mails_cc = explode(';', $cc_mails->getValeur());	    $dest_cc = [];	    foreach ($mails_cc as $mcc) {			$mcc = trim(strtolower($mcc));	        if (!Outils::verifMail($mcc)) { continue; }	        $dest_cc[] = $mcc;        }    }    // On génère le PDF	require_once(__CBO_ROOT_PATH__.'/vendor/html2pdf/html2pdf.class.php');	ob_start();	$content = genereContenuPdfClient($id_client);	$content .= ob_get_clean();	$nom_fichier = time().'.pdf';	$chemin = __CBO_ROOT_PATH__.'/temp/'.$nom_fichier;	if (file_exists($chemin)) { unlink($chemin); }	try {		$html2pdf = new HTML2PDF('P', 'A4', 'fr', false, 'UTF-8', [15, 15, 15, 15]);		$html2pdf->pdf->SetAutoPageBreak(false, 0);		$html2pdf->setDefaultFont('helvetica');		$html2pdf->writeHTML(utf8_decode($content));;		$savefilepath = __CBO_ROOT_PATH__.'/temp/'.$nom_fichier;		$html2pdf->Output($savefilepath, 'F');	}	catch(HTML2PDF_exception $e) {		vd($e);		exit;	}	$fichier = __CBO_TEMP_URL__.$nom_fichier;	$traductionsManager = new TraductionsManager($cnx);	$titre = 'PROFIL EXPORT - '. $traductionsManager->getTrad('tarifs', $client->getId_langue());	$contenu = Outils::formatContenuMailClient(nl2br($traductionsManager->getTrad('mail_tarif_clt', $client->getId_langue())));	echo Outils::envoiMail($dest, $conf_email, $titre, utf8_decode($contenu), 0, $dest_cc, [$chemin]) ? 1 : 0;    exit;} // FIN mode// Mise à jour du tarif fournisseur depuis BLfunction modeUpdTarifFrs() {	global $tarifsManager, $cnx;	$logManager = new LogManager($cnx);	$id_frs         = isset($_REQUEST['id_frs'])        ? intval($_REQUEST['id_frs'])       : 0;	$id_produit     = isset($_REQUEST['id_produit'])    ? intval($_REQUEST['id_produit'])   : 0;	$pa             = isset($_REQUEST['pa'])            ? floatval($_REQUEST['pa'])         : 0;	if($id_produit == 0 || $pa == 0) { exit; }    if ($id_frs == 0) {        $tiersManager = new TiersManager($cnx);        $id_frs = $tiersManager->getIdProfilExport();    }	// On tente de récupérer l'ID du tarif	$tarif = $tarifsManager->getTarifFournisseurByFrsAndProduit($id_frs, $id_produit);	if (!$tarif instanceof TarifFournisseur) { $tarif = new TarifFournisseur([]); }	if ($tarif->getId() == 0) {		$tarif->setId_tiers($id_frs);		$tarif->setId_produit($id_produit);	}	$tarif->setPrix($pa);	$res = $tarifsManager->saveTarifFournisseur($tarif) ? 1 : 0;	echo $res ? 1 : 0;	$log = new Log([]);	if (is_numeric($res)) { $id_tarif = $res; }	$logTxt = $res		? 'Mise à jour du tarif fournisseur #'.$id_tarif.' depuis BL'		: 'Echec lors de la mise à jour du tarif fournisseur depuis BL';	$logType = $res ? 'info' : 'danger';	$log->setLog_texte($logTxt);	$log->setLog_type($logType);	$logManager->saveLog($log);	exit;} // FIN mode// Mise à jour du tarif client depuis BLfunction modeUpdTarifClient() {    global $tarifsManager, $cnx;	$logManager = new LogManager($cnx);    $id_client      = isset($_REQUEST['id_client'])     ? intval($_REQUEST['id_client'])    : 0;    $id_produit     = isset($_REQUEST['id_produit'])    ? intval($_REQUEST['id_produit'])   : 0;    $pu             = isset($_REQUEST['pu'])            ? floatval($_REQUEST['pu'])         : 0;    if($id_produit == 0 || $id_client == 0 || $pu == 0) { exit; }    // On tente de récupérer l'ID du tarif    $tarif = $tarifsManager->getTarifClientByClientAndProduit($id_client, $id_produit);    if (!$tarif instanceof TarifClient) { $tarif = new TarifClient([]); }	if ($tarif->getId() == 0) {	    $tarif->setId_tiers($id_client);	    $tarif->setId_produit($id_produit);    }	$tarif->setPrix($pu);	$res = $tarifsManager->saveTarifClient($tarif) ? 1 : 0;	echo $res ? 1 : 0;	$log = new Log([]);	$verbe = $id_client > 0 ? 'Mise à jour ' : ' Création';	if (is_numeric($res)) { $id_tarif = $res; }	$logTxt = $res		? $verbe. ' du tarif client #'.$id_tarif		: 'Echec lors de la '.strtolower($verbe).' du tarif client depuis un BL';	$logType = $res ? 'info' : 'danger';	$log->setLog_texte($logTxt);	$log->setLog_type($logType);	$logManager->saveLog($log);	exit;} // FIN mode// Retourne le tarif client d'un produitfunction modeGetTarifClientByProduct() {    global $tarifsManager;    $id_client = isset($_REQUEST['id_clt']) ? intval($_REQUEST['id_clt']) : 0;    $id_produit = isset($_REQUEST['id_pdt']) ? intval($_REQUEST['id_pdt']) : 0;    $th_sep = isset($_REQUEST['th_sep']) ? $_REQUEST['th_sep'] : ' ';    if ($id_client == 0 || $id_produit == 0) { exit; }    $tarif = $tarifsManager->getTarifClientByClientAndProduit($id_client, $id_produit);    if (!$tarif instanceof TarifClient) { exit; }    echo number_format($tarif->getPrix(),3,'.',$th_sep);    exit;} // FIN modefunction modeGetTarifFournisseurByProduct() {	global $tarifsManager, $cnx;	$id_frs = isset($_REQUEST['id_frs']) ? intval($_REQUEST['id_frs']) : 0;	$id_produit = isset($_REQUEST['id_pdt']) ? intval($_REQUEST['id_pdt']) : 0;	if ($id_produit == 0) { exit; }	if ($id_frs == 0) {		$tiersManager = new TiersManager($cnx);		$id_frs = intval($tiersManager->getIdProfilExport());        if ($id_frs == 0) { exit; }    }	$tarif = $tarifsManager->getTarifFournisseurByFrsAndProduit($id_frs, $id_produit);	if (!$tarif instanceof TarifFournisseur) { exit; }	echo number_format($tarif->getPrix(),2,'.',' ');	exit;} // FIN mode