<?php/*   _|_|_|  _|_|_|    _| _|        _|    _|  _|        CBO FrameWork _|        _|_|_|    _|        (c) 2018 Cédric Bouillon _|        _|    _|  _|   _|_|_|  _|_|_|    _|_|_|_|--------------------------------------------------------Contrôleur Ajax PAYS------------------------------------------------------*/error_reporting(0);// Évite les problèmes de génération de PDF suite à des Warning// Initialisation du mode d'appel$mode       = isset($_REQUEST['mode']) ? $_REQUEST['mode'] : '';// Intégration de la configuration du FrameWork et des autorisationsrequire_once '../php/config.php';// Instanciation des Managers$paysManager = new PaysManager($cnx);$logsManager = new LogManager($cnx);$fonctionNom = 'mode'.ucfirst($mode);if (function_exists($fonctionNom)) {	$fonctionNom();}/* ------------------------------------MODE - Modale Pays (admin)------------------------------------*/function modeModalPays() {    global	    $cnx,	    $utilisateur,	    $paysManager;    // On vérifie qu'on est bien loggé    if (!isset($_SESSION['logged_user'])) { exit;}	$pays_id = isset($_REQUEST['id']) ? intval($_REQUEST['id']) : 0;	$pays    = $pays_id > 0 ? $paysManager->getPays($pays_id) : new Pays([]);	// On instancie l'utilisateur en session s'il ne l'est pas déjà	if (!isset($utilisateur)) {		$utilisateur = unserialize($_SESSION['logged_user']);    }	// Retour Titre	echo '<i class="fa fa-globe-americas"></i>';	echo $pays_id > 0 ? $pays->getNom() : "Nouveau pays&hellip;";	// Séparateur Titre/Body pour le callback aJax	echo '^';	// Retour Body ?>	<form class="container-fluid" id="formPaysAddUpd">        <input type="hidden" name="mode" value="savePays"/>        <input type="hidden" name="pays_id" id="input_id" value="<?php echo $pays_id; ?>"/>		<div class="row">			<div class="col-6 input-group mb-2">				<?php				$languesManager = new LanguesManager($cnx);				$langues = $languesManager->getListeLangues(['actif' => 1]);				foreach ($langues as $langue) { ?>                    <div class="input-group mb-2">                        <div class="input-group-prepend">                                <span class="input-group-text">                                    <img src="<?php echo $langue->getDrapeau(); ?>" class="mr-1"/> Libellé                                </span>                        </div>                        <input type="text" class="form-control" placeholder="Nom / libellé" name="noms[<?php echo $langue->getId(); ?>]"  value="<?php echo isset($pays->getNoms()[$langue->getId()]) ? $pays->getNoms()[$langue->getId()] : ''; ?>">                    </div>				<?php }				?>            </div>            <div class="col-6">                <div class="row">                    <div class="col-6 input-group mb-2">                        <div class="input-group-prepend">                            <span class="input-group-text">ISO</span>                        </div>                        <input type="text" class="form-control" placeholder="Code" name="iso" id="input_iso" value="<?php echo $pays->getIso(); ?>">                        <div class="invalid-feedback">Le code ISO est obligatoire.</div>                    </div>                    <div class="col-6 input-group mb-2">                        <div class="input-group-prepend">                            <span class="input-group-text">Code</span>                        </div>                        <input type="text" class="form-control" placeholder="Code" name="code" id="input_code" value="<?php echo $pays->getCode(); ?>">                    </div>                </div>            </div>            <div class="col">                <span class="text-13 mb-0">Mention TVA Export sur factures :                    <input type="checkbox"                           name="export"                       class="togglemaster"                       <?php echo $pays->isExport() ? 'checked': ''; ?>                       data-toggle="toggle"                       data-on="Oui"                       data-off="Non"                       data-onstyle="info"                       data-offstyle="secondary"                    /></span>            </div>        </div>	</form>    <div class="row mt-2">        <div class="col doublon d-none">            <div class="alert alert-danger">                <i class="fa fa-exclamation-circle mr-1"></i> Un autre pays porte déjà ce code !            </div>        </div>    </div>	<?php	// Séparateur Body/Footer pour le callback aJax	echo '^';	// Retour boutons footer si pays existant (bouton supprimer)    if ($pays_id > 0) {	?>	    <button type="button" class="btn btn-danger btn-sm btnSupprimePays">            <i class="fa fa-times fa-lg vmiddle mr-1"></i> Supprimer	    </button>	<?php    } // FIN test édition utilisateur existant	exit;} // FIN mode/* ------------------------------------MODE - Enregistre un pays (add/upd)------------------------------------*/function modeSavePays() {    global $paysManager, $cnx;	// Vérification des données	$pays_id    = isset($_REQUEST['pays_id'])   ? intval($_REQUEST['pays_id'])      : 0;	$code            = isset($_REQUEST['code'])           ? strtoupper(trim($_REQUEST['code']))    : '';	$iso            = isset($_REQUEST['iso'])           ? strtoupper(trim($_REQUEST['iso']))    : '';	$export            = isset($_REQUEST['export'])           ? 1 : 0;	if ($iso == '') { $iso = $code; }	// On vérifie que le nom n'existe pas déjà    if ($paysManager->checkExisteDeja($code, $pays_id)) {        echo '-1';        exit;    } // FIN contrôle existe déjà	// Instanciation de l'objet PAYS (hydraté ou vide)	$pays = $pays_id > 0 ? $paysManager->getPays($pays_id) : new Pays([]);	// mise à jour des champs de base	$pays->setCode($code);	$pays->setIso($iso);    $pays->setExport($export);    // Enregistrement et retour pour callBack ajax    $retour = $paysManager->savePays($pays);    if ($pays_id == 0 && intval($retour) > 0) {        $pays_id = intval($retour);        $pays->setId($pays_id);    }    // On enregistre les traductions	// On récupère toutes les langues actives pour récupérer les trads	$languesManager = new LanguesManager($cnx);	$langues = $languesManager->getListeLangues(['actif' => 1]);	foreach ($langues as $langue) {		if (!isset($_REQUEST['noms'][$langue->getId()])) { continue; }		$trad = trim($_REQUEST['noms'][$langue->getId()]);		$paysManager->saveTradPays($pays, $langue->getId(), $trad);	}    // Logs    $logsManager = new LogManager($cnx);    $log = new Log([]);    if ($retour) {		$log->setLog_type('info');		if ($pays_id == 0) {		    $log->setLog_texte("Création d'un nouveu pays : " . $pays->getNom());        } else {			$log->setLog_texte("Modification du pays #" . (int)$pays_id);        }    } else {		$log->setLog_type('danger');		if ($pays_id == 0) {			$log->setLog_texte("ERREUR lors de la création d'un nouveau pays : " . $nom);		} else {			$log->setLog_texte("ERREUR lors de la modificaion du pays #" . (int)$pays_id);		}    } // FIN test retour création/maj pour log	$logsManager->saveLog($log);	echo $retour !== false ? '1' : '0';	exit;} // FIN mode/* ------------------------------------MODE - Affiche la liste des pays------------------------------------*/function modeShowListePays() {    global	    $utilisateur,        $paysManager;	$listePays = $paysManager->getListePays();	// Si aucun pays a afficher	if (empty($listePays)) { ?>        <div class="alert alert-danger">            <i class="fa fa-times-circle text-28 vmiddle mr-1"></i> <strong>Aucun pays !</strong>        </div>    <?php	// Sinon, affichage de la liste des pays	} else { ?>        <div class="alert alert-danger d-md-none text-center">            <i class="fa fa-exclamation-circle text-28 mb-1"></i> <p>Connectez-vous depuis un apareil permettant un affichage plus large pour afficher cet écran&hellip;</p>        </div>        <table class="admin w-100 d-none d-md-table">            <thead>                <tr>				    <?php                    // On affiche l'ID que si on est développeur                    if ($utilisateur->isDev()) { ?><th class="w-court-admin-cell  d-none d-xl-table-cell">ID</th><?php } ?>                    <th>Nom</th>                    <th class="w-court-admin-cell text-center">ISO</th>                    <th class="w-court-admin-cell text-center">Code (Bizerba)</th>                    <th class="text-center">Mention TVA export</th>                    <th class="t-actions w-court-admin-cell">Détails</th>                </tr>            </thead>            <tbody>			    <?php                // Boucle sur les pays				foreach ($listePays as $pays) {					?>                    <tr>						<?php						// On affiche l'ID que si on est développeur                        if ($utilisateur->isDev()) { ?>                            <td class="w-court-admin-cell  d-none d-xl-table-cell"><span class="badge badge-pill badge-warning"><?php echo $pays->getId();?></span></td>                        <?php } ?>                        <td class="text-18"><?php echo $pays->getNom();?></td>                        <td class="w-court-admin-cell text-center"><code class="text-14"><?php echo $pays->getIso();?></code></td>                        <td class="w-court-admin-cell text-center"><code class="text-14"><?php echo $pays->getCode();?></code></td>                        <td class="w-court-admin-cell text-center text-<?php echo $pays->isExport() ? 'info' : 'secondary'; ?>"><?php echo $pays->isExport() ? 'Oui' : 'Non'; ?></td>                        <td class="t-actions w-court-admin-cell"><button type="button" class="btn btn-sm btn-secondary" data-toggle="modal" data-target="#modalPays" data-pays-id="<?php                            echo $pays->getId(); ?>"><i class="fa fa-edit"></i> </button></td>                        </tr>                <?php				} // FIN boucle pays ?>            </tbody>        </table>	<?php } // FIN test pays à afficher    exit;} // FIN mode/* ---------------------------------------MODE - Supprime un pays---------------------------------------*/function modeSupprPays() {    global	    $paysManager,		$logsManager;    //  -> On ne supprime pas réellement pour les raisons de traçabilité, on passe le champ "supprime" à 1    // On récupère l'ID de l'pays, si il n'est pas clairement identifié, on ne va pas plus loin    $id_pays = isset($_REQUEST['id_pays']) ? intval($_REQUEST['id_pays']) : 0;    if ($id_pays == 0) { exit; }    // Instanciation de l'objet Pays    $pays = $paysManager->getPays($id_pays);    // On passe le statut à supprimé	$pays->setSupprime(1);	// Si la mise à jour s'est bien passé en BDD    if ($paysManager->savePays($pays)) {        // On sauvegarde dans les LOGS        $log = new Log([]);        $log->setLog_texte("Suppression du pays (champ 'supprime' à 1) : ID #" . $id_pays);        $log->setLog_type('warning');		$logsManager->saveLog($log);    } // FIN test suppression OK pour Log    exit;} // FIN mode/* ------------------------------------------MODE - Vérifie si existe déjà (admin/modale)-------------------------------------------*/function modeCheckExisteDeja() {    global	    $paysManager;    $id     = isset($_REQUEST['id'])        ? (int)$_REQUEST['id']      : 0;    $iso   = isset($_REQUEST['iso'])      ? trim($_REQUEST['iso'])   : '';	echo $paysManager->checkExisteDeja($iso, $id) ? 1 : 0;	exit;} // FIN mode/* ------------------------------------------MODE - Export en PDF-------------------------------------------*/function modeExportPdf() {	global $tiersManager;	require_once(__CBO_ROOT_PATH__.'/vendor/html2pdf/html2pdf.class.php');	ob_start();	$content = genereContenuPdf();	$content .= ob_get_clean();	// On supprime tous les fichiers du même genre sur le serveur	foreach (glob(__CBO_ROOT_PATH__.'/temp/iprexorig-*.pdf') as $fichier) {		unlink($fichier);	}	try {		$nom_fichier = 'iprexorig-'.date('is').'.pdf';		$html2pdf = new HTML2PDF('P', 'A4', 'fr', false, 'ISO-8859-15');		$html2pdf->pdf->SetAutoPageBreak(false, 0);		$html2pdf->setDefaultFont('helvetica');		$html2pdf->writeHTML(utf8_decode($content));;		$savefilepath = __CBO_ROOT_PATH__.'/temp/'.$nom_fichier;		$html2pdf->Output($savefilepath, 'F');		echo __CBO_TEMP_URL__.$nom_fichier;	}	catch(HTML2PDF_exception $e) {		exit;	}	exit;} // FIN mode/* ----------------------------------------------------------------------------FONCTION DEPORTEE - Génère le contenu HTML pour le PDF-----------------------------------------------------------------------------*/function genereContenuPdf() {	global $cnx, $paysManager;	// HEAD	$contenu = '<!DOCTYPE html><html><head>  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>  <style type="text/css">      * { margin:0; padding: 0; }      .header { border-bottom: 2px solid #ccc; }    .header img.logo { width: 200px; }    .text-right { text-align: right; }    .text-center { text-align: center; }    .table { border-collapse: collapse; }    .table-donnees th { font-size: 11px; }    .table-liste th { font-size: 9px; background-color: #d5d5d5; padding:3px; }    .table-liste td { font-size: 9px; padding-top: 3px; padding-bottom: 3px; border-bottom: 1px solid #ccc;}    .table-liste td.no-bb { border-bottom: none; padding-bottom: 0px; }    .titre {       background-color: teal;       color: #fff;       padding: 3px;       text-align: center;       font-weight: normal;       font-size: 14px;    }    .recap {       background-color: #ccc;       padding: 3px;       text-align: center;       font-weight: normal;       font-size: 10px;    }        .w100 { width: 100%; }    .w80 { width: 80%; }    .w75 { width: 75%; }    .w50 { width: 50%; }    .w40 { width: 40%; }    .w25 { width: 25%; }    .w33 { width: 33%; }    .w34 { width: 34%; }    .w20 { width: 20%; }    .w30 { width: 30%; }    .w15 { width: 15%; }    .w35 { width: 35%; }    .w5 { width: 5%; }    .w10 { width: 10%; }    .w15 { width: 15%; }        .text-6 { font-size: 6px; }    .text-7 { font-size: 7px; }    .text-8 { font-size: 8px; }    .text-9 { font-size: 9px; }    .text-10 { font-size: 10px; }    .text-11 { font-size: 11px; }    .text-12 { font-size: 12px; }    .text-14 { font-size: 14px; }    .text-16 { font-size: 16px; }    .text-18 { font-size: 18px; }    .text-20 { font-size: 20px; }        .gris-3 { color:#333; }    .gris-5 { color:#555; }    .gris-7 { color:#777; }    .gris-9 { color:#999; }    .gris-c { color:#ccc; }    .gris-d { color:#d5d5d5; }    .gris-e { color:#e5e5e5; }        .mt-0 { margin-top: 0px; }    .mt-2 { margin-top: 2px; }    .mt-5 { margin-top: 5px; }    .mt-10 { margin-top: 10px; }    .mt-15 { margin-top: 15px; }    .mt-20 { margin-top: 20px; }    .mt-25 { margin-top: 25px; }    .mt-50 { margin-top: 50px; }        .mb-0 { margin-bottom: 0px; }    .mb-2 { margin-bottom: 2px; }    .mb-5 { margin-bottom: 5px; }    .mb-10 { margin-bottom: 10px; }    .mb-15 { margin-bottom: 15px; }    .mb-20 { margin-bottom: 20px; }    .mb-25 { margin-bottom: 25px; }    .mb-50 { margin-bottom: 50px; }        .mr-0 { margin-right: 0px; }    .mr-2 { margin-right: 2px; }    .mr-5 { margin-right: 5px; }    .mr-10 { margin-right: 10px; }    .mr-15 { margin-right: 15px; }    .mr-20 { margin-right: 20px; }    .mr-25 { margin-right: 25px; }    .mr-50 { margin-right: 50px; }        .ml-0 { margin-left: 0px; }    .ml-2 { margin-left: 2px; }    .ml-5 { margin-left: 5px; }    .ml-10 { margin-left: 10px; }    .ml-15 { margin-left: 15px; }    .ml-20 { margin-left: 20px; }    .ml-25 { margin-left: 25px; }    .ml-50 { margin-left: 50px; }        .pt-0 { padding-top: 0px; }    .pt-2 { padding-top: 2px; }    .pt-5 { padding-top: 5px; }    .pt-10 { padding-top: 10px; }    .pt-15 { padding-top: 15px; }    .pt-20 { padding-top: 20px; }    .pt-25 { padding-top: 25px; }    .pt-50 { padding-top: 50px; }        .pb-0 { padding-bottom: 0px; }    .pb-2 { padding-bottom: 2px; }    .pb-5 { padding-bottom: 5px; }    .pb-10 { padding-bottom: 10px; }    .pb-15 { padding-bottom: 15px; }    .pb-20 { padding-bottom: 20px; }    .pb-25 { padding-bottom: 25px; }    .pb-50 { padding-bottom: 50px; }        .pr-0 { padding-right: 0px; }    .pr-2 { padding-right: 2px; }    .pr-5 { padding-right: 5px; }    .pr-10 { padding-right: 10px; }    .pr-15 { padding-right: 15px; }    .pr-20 { padding-right: 20px; }    .pr-25 { padding-right: 25px; }    .pr-50 { padding-right: 50px; }        .pl-0 { padding-left: 0px; }    .pl-2 { padding-left: 2px; }    .pl-5 { padding-left: 5px; }    .pl-10 { padding-left: 10px; }    .pl-15 { padding-left: 15px; }    .pl-20 { padding-left: 20px; }    .pl-25 { padding-left: 25px; }    .pl-50 { padding-left: 50px; }        .text-danger { color: #d9534f; }      </style> </head><body>';	$contenu.=  genereEntetePagePdf();	// PAGE 1	// GENERAL	// Préparation des variables	$na             = '<span class="gris-9 text-11"><i>Non renseigné</i></span>';	$tiret          = '<span class="gris-9 text-11"><i>-</i></span>';	// Préparation des variables	$liste = $paysManager->getListePays(true);	// Génération du contenu HTML	$contenu.= '<table class="table table-liste w100 mt-10">';	// Aucun pays	if (empty($liste)) {		$contenu.= '<tr><td class="w100 text-center gris-9 text-11"><i>Aucun pays</i></td></tr>';	// Liste des pays	} else {		$contenu.= '<tr>                        <th class="w15">ISO</th>                        <th class="w15">Code Bizerba</th>                        <th class="w70">Nom</th>                    </tr>';		foreach ($liste as $item) {			$contenu.= '<tr>                            <td class="w15">' . $item->getIso() . '</td>                            <td class="w15">' . $item->getCode() . '</td>                            <td class="w70">' . $item->getNom() . '</td>                              </tr>';		} // FIN boucle sur les pays	} // FIN test pays	$contenu.= '</table>';	$contenu.= '<table class="table w100 mt-15"><tr><th class="w100 recap">Nombre de pays : '. count($liste) .'</th></tr></table>';	// FOOTER	$contenu.= '<table class="w100 gris-9">                    <tr>                        <td class="w50 text-8">Document édité le '.date('d/m/Y').' à '.date('H:i:s').'</td>                        <td class="w50 text-right text-6">&copy; 2020 IPREX / INTERSED </td>                    </tr>                </table>            </body>        </html>';	// RETOUR CONTENU	return $contenu;} // FIN fonction déportée/* ----------------------------------------------------------------------------FONCTION DEPORTEE - Génère le header du PDF (logo...)-----------------------------------------------------------------------------*/function genereEntetePagePdf() {	global $cnx;	$entete = '<div class="header">                <table class="table w100">                    <tr>                        <td class="w33"><img src="'.__CBO_ROOT_URL__.'img/logo-pe-350.jpg" alt="PROFIL EXPORT" class="logo"/></td>                        <td class="w34 text-center pt-10">                            Liste des pays au '.date("d/m/Y").'                        </td>                        <td class="w33 text-right text-14">                            <p class="text-18"><b>IPREX</b></p>                            <p class="text-12 gris-7">Intranet PROFIL EXPORT</p>                        </td>                    </tr>                                </table>               </div>';	return $entete;} // FIN fonction déportée