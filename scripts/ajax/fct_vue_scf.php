<?php/*   _|_|_|  _|_|_|    _| _|        _|    _|  _|        CBO FrameWork _|        _|_|_|    _|        (c) 2018 Cédric Bouillon _|        _|    _|  _|   _|_|_|  _|_|_|    _|_|_|_|--------------------------------------------------------Contrôleur Ajax SCAN PRODUITS FRAIS (MOBILE)------------------------------------------------------*/// Initialisation du mode d'appel$mode       = isset($_REQUEST['mode']) ? $_REQUEST['mode'] : '';// Intégration de la configuration du FrameWork et des autorisations$skipAuth = true;require_once '../php/config.php';if (!isset($utilisateur)) {    $userManager = new UserManager($cnx);	$utilisateur = $userManager->getUserBot();}$fraisManager = new FraisManager($cnx);$fonctionNom = 'mode'.ucfirst($mode);if (function_exists($fonctionNom)) {	$fonctionNom();}/* ------------------------------------------FONCTION - Message d'erreur standard-------------------------------------------*/function erreur($message) {	?>    <div class="alert alert-danger text-center mb-0 mt-3">        <i class="fa fa-exclamation-triangle fa-lg mb-2"></i><br>        <p><?php echo $message; ?></p>    </div>	<?php	exit;} // FIN fonctionsfunction modeShowScan() {}/* ------------------------------------------MODE - Récupère le code barre scanné-------------------------------------------*/function modeAddPdtFroidByCodeBarre() {	global $cnx, $fraisManager, $utilisateur;	$produitsManager = new ProduitManager($cnx);	$lotManager =  new LotManager($cnx);	$palettesManager = new PalettesManager($cnx);	$cb = isset($_REQUEST['cb']) ? trim($_REQUEST['cb']) : '';	$id_palette = isset($_REQUEST['id_palette']) ? intval($_REQUEST['id_palette']) : 0;	if ($cb == '') { erreur("Code-barre vide ou erreur de scan !"); }	if ($id_palette == 0) { erreur("Palette non identifiée !"); }	$ean14      = substr($cb,2, 14);	$numlot     = substr($cb, 34);	$quantieme = substr($numlot,-3);	if (!is_numeric($quantieme)) { $quantieme = ''; }	$poids_brut = substr($cb,20,6);	$poids = floatval(substr($poids_brut,0,3) .'.'.substr($poids_brut, -3));	$produit = $produitsManager->getProduitByEan($ean14);	if (!$produit instanceof Produit) {	    erreur('<p class="mb-1 text-20">Non identifié !</p><kbd class="mb-1">EAN 14 '.$ean14.'</kbd><p class="nomargin">Produit non référencé ou code barre incorrect&hellip;</p>');	}	if ($poids == 0) {		erreur('<p class="mb-1 text-20">Poids vide !</p><kbd class="mb-1">'.$poids_brut.'</kbd><p class="nomargin">Poids absent ou code barre incorrect&hellip;</p></div>');	}	$dlc_brute = new DateTime( date('Y-m-d'));	$intervale = 'P'.$produit->getNb_jours_dlc().'D';	$dlc_brute->add(new DateInterval($intervale));	$lot = $lotManager->getLotFromNumero($numlot);	if (!$lot instanceof Lot) {  /*   * Abandonné par le client car trop onéreux pour l’utilité.   *   *       // on recherche sur les lots de négoce        $lotNegoceManager = new LotNegoceManager($cnx);		$lotNegoce =  $lotNegoceManager->getLotNegoceByNumLot($numlot);        $produitNegoce = false;		// On recherche l'id du lot_negoce_produit au sein du lot de négoce avec l'objet produit trouvé par l'ean	    foreach ($lotNegoce->getProduits() as $pdtNeg) {            if ($pdtNeg->getId_pdt() == $produit->getId()) {				$produitNegoce = $pdtNeg;                break;            }        }        // si on le trouve pas, on le crée        if (!$produitNegoce) {			$produitNegoce = new NegoceProduit([]);			$produitNegoce->setId_lot_negoce($lotNegoce->getId());			$produitNegoce->setId_pdt($produit->getId());			$produitNegoce->setNb_cartons(1);			$produitNegoce->setPoids($poids);			$produitNegoce->setTraite(0);			$produitNegoce->setId_palette($id_palette);			$produitNegoce->setNum_lot('');			$produitNegoce->setDlc($dlc_brute->format('Y-m-d'));			$produitNegoce->setDate_add(date('Y-m-d H:i:s'));			$produitNegoce->setUser_add($utilisateur->getId());			$produitNegoce->setSupprime(0);            $id_pdt_negoce = $lotNegoceManager->saveNegoceProduit($produitNegoce);            if (intval($id_pdt_negoce) <= 1) {				$lotNegoce = false;            } else {				$produitNegoce->setId_lot_pdt_negoce($id_pdt_negoce);            }        }        if (!$lotNegoce instanceof LotNegoce) {			// si toujours pas trouvé on crée le lot comme on crée un lot inconnu en BL manuel			$especesManager = new ProduitEspecesManager($cnx);			$lot = new Lot([]);			$lot->setNumlot($numlot);			$lot->setDate_add(date('Y-m-d H:i:s'));			$lot->setVisible(0);			$lot->setId_fournisseur(0);			$lot->setId_espece($especesManager->getIdEspeceViande());			$lot->setComposition(1);			// On récupère l'id du lot créé			$id_lot =  $lotManager->saveLot($lot);			if (!$id_lot || intval($id_lot) == 0) { exit('ERREUR CREATION DU LOT '.$numlot); }			$log = new Log();			$log->setLog_type('info');			$log->setLog_texte("Création auto du lot #".$id_lot. " via scan code barre lot ".$numlot);			$logsManager = new LogManager($cnx);			$logsManager->saveLog($log);			// On rajoute un commentaire dans le lot créé			$commentairesManager = new CommentairesManager($cnx);			$commentaire = new Commentaire([]);			$commentaire->setId_lot($id_lot);			$commentaire->setCommentaire("Lot créé via scan frais sur numéro de lot " . $numlot);			$commentaire->setId_user($utilisateur->getId());			$commentaire->setDate(date('Y-m-d H:i:s'));			$commentairesManager->saveCommentaire($commentaire);        }*/		erreur('<p class="mb-1 text-20">Non identifié !</p><kbd class="mb-1">Lot '.$numlot.'</kbd><p class="nomargin">Lot non référencé ou code barre incorrect&hellip;</p></div>');		exit;	}	$palette = $palettesManager->getPalette($id_palette);	if (!$palette instanceof Palette) { exit('Instanciation de la palette '.$id_palette.' échouée !'); }	if (intval($palette->getId_client()) == 0) { exit('Identification du client de la palette '.$id_palette.' échoué !'); }	// On enregistre le produit frais    $fraisCompo = new Frais([]);	$fraisCompo->setEnvoye(0);	$fraisCompo->setDlc($dlc_brute->format('Y-m-d'));	if (isset($lot) && $lot instanceof Lot) {		$fraisCompo->setId_lot($lot->getId());	}    if (isset($lotNegoce) && $lotNegoce instanceof LotNegoce) {		$fraisCompo->setId_lot_negoce($lotNegoce->getId());    }	$fraisCompo->setQuantieme($quantieme);	$fraisCompo->setDate_scan(date('Y-m-d H:i:s'));	$id_frais = $fraisManager->saveFrais($fraisCompo);	if (!$id_frais || intval($id_frais) == 0) {  erreur("Echec de l'enregistrement !");  }	$fraisCompo->setId($id_frais);	// On enregistre la composition    $compo = new PaletteComposition([]);	$compo->setId_client($palette->getId_client());	$compo->setDate(date('Y-m-d H:i:s'));	$compo->setPoids($poids);	$compo->setId_produit($produit->getId());	$compo->setNb_colis(1);	$compo->setId_palette($id_palette);	$compo->setSupprime(0);	$compo->setId_user($utilisateur->getId());	$compo->setId_lot_pdt_froid(0);	$compo->setId_frais($id_frais);	$compo->setId_lot_regroupement(0);    if (isset($id_pdt_negoce) && $id_pdt_negoce > 0) {        $compo->setId_lot_pdt_negoce($id_pdt_negoce);    }	$palettesManager->savePaletteComposition($compo);	exit;} // FIN mode/* ------------------------------------------FONCTION DEPORTEE - Charge le total scanné-------------------------------------------*/function modeShowTotalScan() {    global $fraisManager, $cnx;	$id_palette = isset($_REQUEST['id_palette']) ? intval($_REQUEST['id_palette']) : 0;    $produitsManager = new ProduitManager($cnx);    $produitsScan = $fraisManager->getListeFrais(['envoye' => 0, 'id_palette' => $id_palette]);    // Si aucun en scan...    if (empty($produitsScan)) { ?>        <div class="row padding-top-20">            <div class="col">                <div class="alert alert-info padding-50">                    <i class="fa fa-ban fa-2x mb-3"></i>                    <p class="nomargin">Aucun article scanné</p>                </div>            </div>        </div>        <div class="row padding-top-20">            <div class="col">                <button type="button" class="btn btn-lg padding-20 btn-danger btnSupprimerPalette" data-id="<?php echo $id_palette; ?>">                    <i class="fa fa-trash mr-1"></i>                    Supprimer cette palette                </button>            </div>        </div>    <?php    // SI des frais en scan non envoyés    } else {		$pluriel = count($produitsScan) > 1 ? 's' : '';		$totalPoids = 0;		$ids = [];		foreach ($produitsScan as $pdtFrais) {			$totalPoids+=floatval($pdtFrais->getPoids());			$ids[] = (int)$pdtFrais->getId();		}        ?>        <table class="table table-scan table-v-middle">            <thead>                <tr>                    <th class="text-left text-uppercase vmiddle texte-fin text-12">Total</th>                    <th colspan="3" class="text-right"><?php echo count($produitsScan) . ' produit'.$pluriel . ' <i class="fa fa-weight pl-2 pr-1 fa-sm text-secondary"></i> ' . $totalPoids . ' Kg';?></th>                </tr>            </thead>            <tbody>            <?php            $id_palette = 0;            foreach ($produitsScan as $pdtFrais) {				$produit = $produitsManager->getProduit($pdtFrais->getId_produit());                if (!$produit instanceof Produit) { continue; }                if ($id_palette != $pdtFrais->getId_palette()) {					$id_palette =  $pdtFrais->getId_palette();?>                    <tr>                        <th colspan="2" class="text-left"><?php echo $pdtFrais->getNom_client(); ?></th>                        <th colspan="2" class="text-right texte-fin text-14 padding-5">PALETTE <span class="ml-1 badge badge-pill badge-info border text-18 padding-bottom-5"><?php echo $pdtFrais->getNum_palette() ?></span></th>                    </tr>                    <?php				}                ?>                <tr>                    <td class="texte-fin text-13"><?php echo $produit->getCode(); ?></td>                    <td><?php echo $produit->getNom(); ?></td>                    <td class="text-right nowrap text-primary"><?php echo number_format($pdtFrais->getPoids(),3,'.', ' '); ?>                    <span class="texte-fin text-12"> kg</span> </td>                    <td rowspan="2" class="bg-danger w-50px pointeur btnSupprFroidCompo" data-id="<?php echo $pdtFrais->getId();?>">                        <i class="fa fa-trash-alt text-white"></i>                    </td>                </tr>                <tr class="detail-ligne-scan">                    <td colspan="3" class="text-left">                        Lot <?php echo $pdtFrais->getNumlot() != '' ? $pdtFrais->getNumlot() : 'non identifié !' ; ?>                        <span class="float-right">                            DLC : <?php echo Outils::dateSqlToFr($pdtFrais->getDlc());?>                        </span>                    </td>                </tr>			<?php }            ?>            </tbody>            <?php			if (count($produitsScan) > 1) { ?>                <tfoot>                <tr>                    <td colspan="4">                        <button type="button" class="btn btn-danger btn-lg mt-2 btnToutSupprimer padding-25" data-ids="<?php echo implode(',', $ids); ?>"><i class="fa fa-trash-alt fa-sm mr-2"></i> Tout supprimer</button>                    </td>                </tr>                </tfoot>			<?php }?>        </table>	<?php    } // FIN test frais en scan} // FIN mode// Supprime un scan frais non envoyéfunction modeSupprFraisCompo() {	global $fraisManager;	$id = isset($_REQUEST['id']) ? intval($_REQUEST['id']) : 0;	if ($id == 0) { exit; }	$fraisManager->supprFrais($id);	exit;} // FIN mode// Vérfie s'il y a un doublon déjà en scanfunction modeVerifDoublon() {   	global $fraisManager, $cnx;	$produitsManager = new ProduitManager($cnx);	$lotManager =  new LotManager($cnx);	$cb = isset($_REQUEST['cb']) ? trim($_REQUEST['cb']) : '';	if ($cb == '') {	    exit('1'); // On passe la vérif, l'ajout va gérer l'erreur    }	$ean14      = substr($cb,2, 14);	$numlot     = substr($cb, 34);	$quantieme = substr($numlot,-3);	if (!is_numeric($quantieme)) { $quantieme = ''; }	$poids_brut = substr($cb,20,6);	$poids = floatval(substr($poids_brut,0,3) .'.'.substr($poids_brut, -3));	$produit = $produitsManager->getProduitByEan($ean14);	if ($produit == false) {		exit('1'); // On passe la vérif, l'ajout va gérer l'erreur	}	if (!$produit instanceof Produit) {		exit('1'); // On passe la vérif, l'ajout va gérer l'erreur	}	if ($poids == 0) {		exit('1'); // On passe la vérif, l'ajout va gérer l'erreur	}	$dlc_brute = new DateTime( date('Y-m-d'));	$intervale = 'P'.$produit->getNb_jours_dlc().'D';	$dlc_brute->add(new DateInterval($intervale));	$lot = $lotManager->getLotFromNumero($numlot);	if (!$lot instanceof Lot) {		exit('1'); // On passe la vérif, l'ajout va gérer l'erreur	}	echo $fraisManager->isDoublonFraisScanTime($produit, $lot, $quantieme, $poids, $dlc_brute->format('Y-m-d')) ? 2 : 1;    exit;} // FIN mode// Sélection palettefunction modeShowSelectPalette() {	global $fraisManager, $cnx;	$palettesManager = new PalettesManager($cnx);	$params = [        'scan_frais' => 1,  // 1 = en cours de scan frais    ];	$liste = $palettesManager->getListePalettes($params);	foreach ($liste as $palette) {	    ?>        <div class="col-12 mt-2">            <button type="button" class="btn btn-secondary btn-lg form-control padding-10 text-14 text-left btnSelectPalette" data-id="<?php echo $palette->getId(); ?>">                Palette <span class="v-middle badge badge-info border text-30 mr-2"><?php echo $palette->getNumero(); ?></span>                <div class="float-right padding-top-10"><?php echo $palette->getNom_client(); ?></div>            </button>        </div>    <?php }	?>    <div class="col-12 mt-2">        <button type="button" class="btn btn-info btn-lg form-control padding-20-10 text-24 btnNouvellePalette">            <i class="fa fa-plus-circle la-lg mr-1"></i> Nouvelle palette&hellip;        </button>    </div>    <?php} // FIN mode// Selection client (nouvelle palette)function modeShowSelectClient() {	global $fraisManager, $cnx;	$tiersManager = new TiersManager($cnx);	$params = ['visibilite_palettes' => 1];	$liste = $tiersManager->getListeClients($params);	if (empty($liste)) { ?>	    <div class="alert alert-danger padding-50 text-20 text-center">Aucun client visible !</div>    <?php exit; }	foreach ($liste as $client) { ?>        <div class="col-12 mt-2">            <button type="button" class="btn btn-secondary btn-lg form-control padding-20-10 text-24 btnSelectClient" data-id="<?php echo $client->getId(); ?>">               <?php echo $client->getNom(); ?>            </button>        </div>	<?php } ?>    <div class="col-12 mt-2">        <button type="button" class="btn btn-danger btn-lg form-control padding-20-10 text-24 btnRetourSelectPalette">            <i class="fa fa-undo la-lg mr-1"></i> Retour&hellip;        </button>    </div>    <?php} // FIN modefunction modeShowInfoPalette() {	global $cnx;    $paletteManager = new PalettesManager($cnx);	$id_palette = isset($_REQUEST['id_palette']) ? intval($_REQUEST['id_palette']) : 0;	if ($id_palette == 0) { erreur("Palette non identifiée !"); }	$palette = $paletteManager->getPalette($id_palette);	if (!$palette instanceof Palette) { erreur("Palette non instanciée !"); }	?>    <div class="row">        <div class="col-9 text-left">            <div class="text-14 gris-5">                Palette <span class="v-middle badge badge-info text-32 mr-1"><?php echo $palette->getNumero(); ?></span>				<?php echo $palette->getNom_client(); ?>            </div>        </div>        <div class="col-3 text-right">            <button type="button" class="btn text-24 btn-warning form-control btnChangePalette"><i class="fa fa-home"></i></button>        </div>    </div>    <?php} // FIN modefunction modeSupprPaletteFraisCompo() {	global $fraisManager;	$ids = isset($_REQUEST['ids']) ? $_REQUEST['ids'] : '';	$ids_array = explode(',', $ids);	vd($ids_array);	foreach ($ids_array as $id) {		$fraisManager->supprFrais($id);    }    exit;} // FIN modefunction modeSupprPalette() {	global $cnx;	$paletteManager = new PalettesManager($cnx);	$id_palette = isset($_REQUEST['id_palette']) ? intval($_REQUEST['id_palette']) : 0;	if ($id_palette == 0) { exit("Palette non identifiée !"); }	$palette = $paletteManager->getPalette($id_palette);	if (!$palette instanceof Palette) { exit("Palette non instanciée !"); }	$palette->setSupprime(1);	$paletteManager->savePalette($palette);	exit;} // FIN modefunction modeCheckDechargeScan() {	global $fraisManager;	echo $fraisManager->checkDechargeScan() ? '1' : '0'; // Pour être le plus rapide possible à éxécuter (se lance toutes les 3 secondes) pas de nouvelle instanciation etc...	exit;} // FIN mode