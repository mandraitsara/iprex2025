<?php/*   _|_|_|  _|_|_|    _| _|        _|    _|  _|        CBO FrameWork _|        _|_|_|    _|        (c) 2021 Cédric Bouillon _|        _|    _|  _|   _|_|_|  _|_|_|    _|_|_|_|--------------------------------------------------------Contrôleur Ajax Gesdocs------------------------------------------------------*/// Initialisation du mode d'appel$mode       = isset($_REQUEST['mode']) ? $_REQUEST['mode'] : '';// Intégration de la configuration du FrameWork et des autorisationsrequire_once '../php/config.php';// Instanciation des Managers$gesDocManager = new GesdocManager($cnx);$fonctionNom = 'mode'.ucfirst($mode);if (function_exists($fonctionNom)) {    $fonctionNom();}function modeGetListeAll() {    global $gesDocManager, $utilisateur, $cnx;	$date_du              = isset($_REQUEST['date_du'])     ? Outils::dateFrToSql(trim($_REQUEST['date_du']))  : '';	$date_au              = isset($_REQUEST['date_au'])     ? Outils::dateFrToSql(trim($_REQUEST['date_au']))  : '';	$numblorfact          = isset($_REQUEST['numblorfact']) ? trim($_REQUEST['numblorfact'])        : '';	$id_clients           = isset($_REQUEST['id_client'])   ? $_REQUEST['id_client']                : '';    $status               = isset($_REQUEST['status'])      ? intval($_REQUEST['status'])           : -1;    $envoi                = isset($_REQUEST['envoi'])       ? intval($_REQUEST['envoi'])            : -1;    if ($date_du != '' && !Outils::verifDateSql($date_du)) { $date_du = ''; }    if ($date_au != '' && !Outils::verifDateSql($date_au)) { $date_au = ''; }	if (is_array($id_clients)) {		$id_clients = implode(',', $id_clients);	}	$params = [		'id_clients'      => $id_clients,		'date_du'         => $date_du,		'date_au'         => $date_au,		'numblorfact'     => $numblorfact,		'status'          => $status,		'envoi'           => $envoi	];    $liste = $gesDocManager->getAllDocuments($params);    if (count($liste) > 100) { ?>        <div class="alert alert-info">            Plus de 100 documents correspondent à votre recherche, affinez les filtres...        </div>    <?php        exit;    } else if (empty($liste)) {  ?>        <div class="alert alert-warning">            Aucun document n'a été trouvé...        </div>	    <?php        exit;    } ?>    <table class="table admin table-v-middle">    <thead>    <tr>        <th <?php echo $utilisateur->isDev() ? '' : 'd-none'; ?>>ID</th>        <th>Type</th>        <th>Référence</th>        <th>Date</th>        <th>Client</th>        <th class="nowrap text-right">Total (€)</th>        <th>Statut</th>        <th class=" nowrap">Documents associés</th>        <th class="t-actions nowrap text-center">Date d'envoi</th>        <th class="t-actions text-center w-mini-admin-cell"><input type="checkbox" class="icheck""/></th>    </tr>    </thead>    <tbody>    <?php    $badges = [      'BL' => 'info',      'BT' => 'primary',      'AV' => 'danger',      'FA' => 'success'    ];	$typesBl        = ['BL', 'BT'];	$facturesManager = new FacturesManager($cnx);	$blsManagers = new BlManager($cnx);	$packingListManager = new PackingListManager($cnx);    foreach ($liste as $gesdoc) {		$packingList = false;        if (in_array($gesdoc->getType_code(), $typesBl)) {            $bl = $blsManagers->getBl($gesdoc->getId(), false, false, false);			$dossier = $blsManagers->getDossierBlPdf($bl);			$chemin = __CBO_ROOT_PATH__.$dossier.$bl->getFichier();			if (!file_exists($chemin)) { continue; }			$packingList = $bl->getId_packing_list() > 0;		} else {			$facture = $facturesManager->getFacture($gesdoc->getId(), false);			$dossier =  $facturesManager->getDossierFacturePdf($facture);			$chemin = __CBO_ROOT_PATH__.$dossier.$facture->getFichier();			if (!file_exists($chemin)) { continue; }		}        ?>        <tr id="<?php echo $gesdoc->getType_code().$gesdoc->getId()?>">            <td <?php echo $utilisateur->isDev() ? '' : 'd-none'; ?>><code><?php echo $gesdoc->getId();?></code></td>            <td><span class="badge badge-<?php echo $badges[$gesdoc->getType_code()];?> texte-fin text-12"><?php echo $gesdoc->getType_texte(); ?></span></td>            <td class="text-16 reference"><a href="<?php                echo in_array($gesdoc->getType_code(), ['BL', 'BT']) ? 'gc-bls.php?i=' :  'gc-factures.php?i=';                echo base64_encode($gesdoc->getId());                ?>"><?php echo $gesdoc->getRef(); ?></a></td>            <td class="texte-fin text-12"><?php echo Outils::dateSqlToFr($gesdoc->getDate()); ?></td>            <td class="client-filtre pointeur" data-id="<?php echo $gesdoc->getId_client();?>"><?php echo $gesdoc->getNom_client(); ?></td>            <td class="text-right texte-fin text-13"><?php echo number_format($gesdoc->getTotal(),2,'.', ' '); ?></td>            <td><span class="badge badge-<?php echo $gesdoc->getStatut() == 1 ? 'success' : 'secondary';?> texte-fin text-12"><?php                if (in_array($gesdoc->getType_code(), ['BL', 'BT'])) {                    echo $gesdoc->getStatut() == 1 ? 'Facturé' : 'Non facturé';				} else {					echo $gesdoc->getStatut() == 1 ? 'Réglée' : 'Non réglée';				}                ?></span></td>            <td class=" texte-fin text-12"><?php                if ((!is_array($gesdoc->getAssocies()) || empty($gesdoc->getAssocies())) && !$packingList) {                    echo '<span class="texte-fin text-11 gris-9">&mdash;</span>';				} else if (!empty($gesdoc->getAssocies())) {                    foreach ($gesdoc->getAssocies() as $id => $ref) {						$cible = in_array(substr($ref,0,2), ['BL', 'BT']) ? 'gc-bls.php?i=' :  'gc-factures.php?i=';						$cible.= base64_encode($id);                        echo '<a href="'.$cible.'" class="texte-fin text-12 text-info mr-1">'.$ref.'</a>';                    }				}				if ($packingList) {					$pl = $packingListManager->getPackingList($bl->getId_packing_list());					$dir = $packingListManager->getDossierPackingListPdf($pl);					if (file_exists(__CBO_ROOT_PATH__ . $dir . $pl->getFichier())) {						echo '<a href="'.__CBO_ROOT_URL__.$dir. $pl->getFichier().'" target="_blank" class="texte-fin text-12 text-info mr-1">'.$bl->getNum_packing_list().'</a>';					}				}            ?></td>            <td class="t-actions texte-fin text-13 text-center date-envoi"><?php echo $gesdoc->getDate_envoi() != '' ? Outils::dateSqlToFr($gesdoc->getDate_envoi()) : '<span class="texte-fin text-11 gris-9">&mdash;</span>'?></td>            <td class="t-actions text-center coche"><input type="checkbox" class="icheck" data-clt="<?php echo $gesdoc->getId_client(); ?>" data-id="<?php echo $gesdoc->getId(); ?>" data-type="<?php echo $gesdoc->getType_code(); ?>"/></td>        </tr>	    <?php       // Si on est sur un BL qui a une packing list, on crée une ligne dédié        if ($packingList && file_exists(__CBO_ROOT_PATH__ . $dir . $pl->getFichier())) { ?>            <tr id="PL<?php echo $gesdoc->getId()?>">                <td <?php echo $utilisateur->isDev() ? '' : 'd-none'; ?>><code><?php echo $bl->getId_packing_list();?></code></td>                <td><span class="badge badge-warning texte-fin text-12">Packing List</span></td>                <td class="text-16 reference"><a href="<?php echo __CBO_ROOT_URL__.$dir. $pl->getFichier(); ?>" target="_blank"><?php echo $bl->getNum_packing_list(); ?></a></td>                <td class="texte-fin text-12"><?php echo Outils::dateSqlToFr($pl->getDate()); ?></td>                <td class="client-filtre pointeur" data-id="<?php echo $gesdoc->getId_client();?>"><?php echo $gesdoc->getNom_client(); ?></td>                <td class="text-right texte-fin text-13"><?php echo number_format($gesdoc->getTotal(),2,'.', ' '); ?></td>                <td><span class="badge badge-success texte-fin text-12">Générée</span></td>                <td class=" texte-fin text-12">                    <a href="gc-bls.php?i=<?php echo base64_encode($gesdoc->getId()); ?>" class="texte-fin text-12 text-info"><?php echo $gesdoc->getRef(); ?></a>                </td>                <td class="t-actions texte-fin text-13 text-center date-envoi"><?php echo $pl->getDate_envoi() != '' ? Outils::dateSqlToFr($pl->getDate_envoi()) : '<span class="texte-fin text-11 gris-9">&mdash;</span>'?></td>                <td class="t-actions text-center coche"><input type="checkbox" class="icheck" data-clt="<?php echo $gesdoc->getId_client(); ?>" data-id="<?php echo $bl->getId_packing_list(); ?>" data-type="PL"/></td>            </tr>        <?php		}        } // FIN boucle    ?>    </tbody>    </table>    <?php    exit;} // Fin modefunction modeModalEnvoiMail() {    global $cnx;    $ids_clients = isset($_REQUEST['id_client']) ? explode(',',$_REQUEST['id_client']) : [];    $refs = isset($_REQUEST['refs']) ? explode(',', $_REQUEST['refs']) : [];	$contactsManager = new ContactManager($cnx);    if (!empty($ids_clients)) {		$contacts = $contactsManager->getListeContacts(['id_tiers' => implode(',',$ids_clients)]);    }	$emails = [];	foreach ($contacts as $ctc) {		if (!Outils::verifMail($ctc->getEmail())) { continue; }		$tmp = [];		$tmp['nom'] = $ctc->getNom_complet();		$tmp['id'] = $ctc->getId();		$emails[$ctc->getEmail()] = $tmp;	}    ?>    <div class="row mb-0">            <div class="col-12 texte-fin text-13">                Sélectionnez les destinataires :            </div>            <div class="col-12 mb-2">                <select class="selectpicker form-control" multiple>                    <optgroup label="Clients sélectionnés">					<?php			        if (empty($emails)) { ?>                        <option disabled value="0">Aucune e-mail valide pour ces clients !</option>					<?php } else {						foreach ($emails as $mail => $donnees) {							$nom = isset($donnees['nom']) ? trim($donnees['nom']) : '';							$id = isset($donnees['id']) ? intval($donnees['id']) : 0;							if ($id == 0) { continue; }							?>                            <option value="<?php echo $id; ?>" data-subtext="<?php echo $nom; ?>"><?php echo $mail; ?></option>						<?php }			        }					?>                    </optgroup>                    <optgroup label="Tous les contacts">                        <?php                        $ctcs = $contactsManager->getListeContacts(['mail_valide' => true]);                        foreach ($ctcs as $c) { ?>                            <option value="<?php echo $c->getId(); ?>" data-subtext="<?php echo $c->getNom_complet(); ?>"><?php echo $c->getEmail(); ?></option>						<?php }                        ?>                    </optgroup>                </select>            </div>        <div class="col-12 texte-fin text-13 mt-2">            <div class="input-group">                <div class="input-group-prepend">                    <span class="input-group-text texte-fin text-12">E-mail libre</span>                </div>                <input type="text" id="emailcustom" placeholder="exemple@domaine.com" value="" class="form-control"/>            </div>        </div>		<?php		?>        <div class="col-6">            <p class="mt-3 mb-0 texte-fin text-13">Pièces jointes :</p>            <?php            foreach ($refs as $ref) {                echo '<span class="badge badge-secondary texte-fin text-12 mr-1">'.$ref.'</span>';			}            ?>        </div>        <div class="col-6 text-right">            <div class="mt-3 texte-fin text-13 ">                Recevoir une copie                <input type="checkbox" class="togglemaster"                       data-toggle              = "toggle"                       data-on                  = "Oui"                       data-off                 = "Non"                       data-onstyle             = "info"                       data-offstyle            = "secondary"                       data-height                = "20"                       checked                />            </div>        </div>    </div>    <?php} // FIN modefunction modeEnvoiPdfClient() {    global $cnx, $conf_email;	$blsManagers        = new BlManager($cnx);	$facturesManager    = new FacturesManager($cnx);	$tiersManager       = new TiersManager($cnx);	$traductionsManager = new TraductionsManager($cnx);	$logsManager        = new LogManager($cnx);	$contactsManager    = new ContactManager($cnx);	$ids_ctcs = isset($_REQUEST['id_ctc']) ? explode(',',$_REQUEST['id_ctc']) : [];	$autre_mail = isset($_REQUEST['mail']) ? trim(strtolower($_REQUEST['mail'])) : '';	if ($autre_mail != '' && !Outils::verifMail($autre_mail)) { $autre_mail = ''; }	if ($autre_mail == '' && empty($ids_ctcs)) { exit('ECHEC ! Aucun destinataire.'); }	foreach ($ids_ctcs as $id_ctc) {		$ctc = $contactsManager->getContact($id_ctc);		if (!$ctc instanceof Contact) { continue; }		if (!Outils::verifMail($ctc->getEmail())) { continue; }		$dest[] = $ctc->getEmail();	}	if ($autre_mail != '') { $dest[] = $autre_mail;	}	if (empty($dest)) { exit('ECHEC ! Aucun destinataire après nettoyage des formats.'); }	$cc = isset($_REQUEST['cc']) ? intval($_REQUEST['cc']) : 0;	if ($cc == 1) {		$configManager = new ConfigManager($cnx);		$cc_mails = $configManager->getConfig('cc_mails');		$mails_cc = explode(';', $cc_mails->getValeur());		$dest_cc = [];		foreach ($mails_cc as $mcc) {			$mcc = trim(strtolower($mcc));			if (!Outils::verifMail($mcc)) { continue; }			$dest_cc[] = $mcc;		}	}    $docs = isset($_REQUEST['docs']) ? explode(',', $_REQUEST['docs']) : [];    if (empty($docs)) { exit('ECHEC ! Aucun document.'); }    $typesBl        = ['BL', 'BT'];    $typesFacture   = ['FA', 'AV'];    $types          = array_merge($typesBl, $typesFacture, ['PL']);    $ids_clients  = isset($_REQUEST['id_client']) ? explode(',',$_REQUEST['id_client']) : [];	$id_client = isset($ids_clients[0]) ? $ids_clients[0] : 0;    $client     = $tiersManager->getTiers($id_client);	if (!$client instanceof Tiers) { exit('ECHEC ! Instanciation échoué pour le client ID #'.$id_client); }	$factures  = [];    $bls       = [];    $pls       = [];	$listeDocs = '<ul>';	$packingListManager = new PackingListManager($cnx);    foreach ($docs as $doc) {        $docsDatas  = explode(':', $doc);        $type       = isset($docsDatas[0]) ? $docsDatas[0]          : '';        $id         = isset($docsDatas[1]) ? intval($docsDatas[1])  : 0;        if (!in_array($type, $types)) { exit("ECHEC ! Type de document inconnu pour l'ID #".$id." ".$doc); }        if ($id == 0) { exit("ECHEC ! ID zéro sur document. ".$doc); }        if (in_array($type, $typesBl)) {			$bl = $blsManagers->getBl($id);			if (!$bl instanceof Bl) { exit("ECHEC ! Instanciation objet BL échoué sur l'ID #".$id); }			$listeDocs.= '<li>'.$bl->getNum_bl().'</li>';			$bls[] = $bl;        } else if ($type == 'PL') {			$pl = $packingListManager->getPackingList($id);			if (!$pl instanceof PackingList) { exit("ECHEC ! Instanciation objet PackingList échoué sur l'ID BL#".$id); }			$listeDocs.= '<li>'.$pl->getNum_packing_list().'</li>';			$pls[] = $pl;        } else {			$facture = $facturesManager->getFacture($id, false);			if (!$facture instanceof Facture) { exit("ECHEC ! Instanciation objet Facture échoué sur l'ID #".$id); }			$listeDocs.= '<li>'.$facture->getNum_facture().'</li>';			$factures[] = $facture;        }    }	$listeDocs.= '</ul>';    $piecesJointes = [];    foreach ($bls as $bl) {		$dossier_bl = $blsManagers->getDossierBlPdf($bl);		$chemin = __CBO_ROOT_PATH__.$dossier_bl.$bl->getFichier();		if (!file_exists($chemin)) { exit('ECHEC ! Fichier PDF BL ' . $bl->getNum_bl(). ' non trouvé.'); }		$piecesJointes[] = $chemin;    }	foreach ($pls as $pl) {		$dossier_pl = $packingListManager->getDossierPackingListPdf($pl);		$chemin = __CBO_ROOT_PATH__.$dossier_pl.$pl->getFichier();		if (!file_exists($chemin)) { exit('ECHEC ! Fichier PDF Packing List ' . $bl->getNum_packing_list(). ' non trouvé.'); }		$piecesJointes[] = $chemin;	}    foreach ($factures as $facture) {		$dossier_facture =  $facturesManager->getDossierFacturePdf($facture);		$chemin = __CBO_ROOT_PATH__.$dossier_facture.$facture->getFichier();		if (!file_exists($chemin)) { exit('ECHEC ! Fichier PDF facture ' . $facture->getNum_facture(). ' non trouvé.'); }		$piecesJointes[] = $chemin;    }    if (empty($piecesJointes)) { exit('ECHEC ! Aucune pièce jointe à insérer.'); }	$titre  = 'PROFIL EXPORT - '. $traductionsManager->getTrad('vos_docs', $client->getId_langue());	$texte  = nl2br($traductionsManager->getTrad('mail_docs', $client->getId_langue()));	$nom    = isset($ctc) && is_object($ctc) ? $ctc->getNom_complet() : '';    if (count($dest) > 1) { $nom = ''; }	$texte  = str_replace('[NOM]', Outils::removeAccents($nom), $texte);	$texte  = str_replace('[DOCS]', $listeDocs, $texte);	$contenu = Outils::formatContenuMailClient($texte);	if (!Outils::envoiMail($dest, $conf_email, $titre, utf8_decode($contenu), 0, $dest_cc, $piecesJointes)) {		exit("ERREUR ! Echec de l'envoi du mail.");	}	echo '1';	foreach ($factures as $facture) {		$facture->setDate_envoi(date('Y-m-d H:i:s'));        $facturesManager->saveFacture($facture);		$log = new Log();		$log->setLog_type('info');		$log->setLog_texte("Envoi par mail groupé de la facture #".$facture->getId());		$logsManager->saveLog($log);	}	foreach ($bls as $bl) {		$bl->setDate_envoi(date('Y-m-d H:i:s'));		$blsManagers->saveBl($bl);		$log = new Log();		$log->setLog_type('info');		$log->setLog_texte("Envoi par mail groupé du BL #".$bl->getId());		$logsManager->saveLog($log);	}	foreach ($pls as $pl) {		$pl->setDate_envoi(date('Y-m-d H:i:s'));		$packingListManager->savePackingList($pl);		$log = new Log();		$log->setLog_type('info');		$log->setLog_texte("Envoi par mail groupé de la packing List #".$pl->getId());		$logsManager->saveLog($log);	}	exit;} // FIN modefunction modeMarquerDocsEnvoyee() {    global $cnx;	$docs = isset($_REQUEST['docs']) ? explode(',', $_REQUEST['docs']) : [];	if (empty($docs)) { exit('ECHEC ! Aucun document.'); }	$typesBl        = ['BL', 'BT'];	$typesFacture   = ['FA', 'AV'];	$types          = array_merge($typesBl, $typesFacture);	$blsManagers        = new BlManager($cnx);	$facturesManager    = new FacturesManager($cnx);	foreach ($docs as $doc) {		$docsDatas  = explode(':', $doc);		$type       = isset($docsDatas[0]) ? $docsDatas[0]          : '';		$id         = isset($docsDatas[1]) ? intval($docsDatas[1])  : 0;		if (!in_array($type, $types)) { exit("ECHEC ! Type de document inconnu pour l'ID #".$id." ".$doc); }		if ($id == 0) { exit("ECHEC ! ID zéro sur document. ".$doc); }		if (in_array($type, $typesBl)) {			$bl = $blsManagers->getBl($id);			if (!$bl instanceof Bl) { exit("ECHEC ! Instanciation objet BL échoué sur l'ID #".$id); }			$bl->setDate_envoi(date('Y-m-d H:i:s'));			if (!$blsManagers->saveBl($bl)) {				exit('ERREUR enregsitrement BL !');			}			$logManager = new LogManager($cnx);			$log = new Log();			$log->setLog_type('info');			$log->setLog_texte('BL #' . $id . ' marqué manuellement comme envoyé.');			$logManager->saveLog($log);		} else {			$facture = $facturesManager->getFacture($id, false);			if (!$facture instanceof Facture) { exit("ECHEC ! Instanciation objet Facture échoué sur l'ID #".$id); }			$facture->setDate_envoi(date('Y-m-d H:i:s'));			if (!$facturesManager->saveFacture($facture)) {				exit('ERREUR enregsitrement facture !');			}			$logManager = new LogManager($cnx);			$log = new Log();			$log->setLog_type('info');			$log->setLog_texte('Facture #' . $id . ' marquée manuellement comme envoyée.');			$logManager->saveLog($log);		}	}    echo '1';    exit;}