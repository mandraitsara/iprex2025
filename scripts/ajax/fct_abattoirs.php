<?php/*   _|_|_|  _|_|_|    _| _|        _|    _|  _|        CBO FrameWork _|        _|_|_|    _|        (c) 2018 Cédric Bouillon _|        _|    _|  _|   _|_|_|  _|_|_|    _|_|_|_|--------------------------------------------------------Contrôleur Ajax ABATTOIRS------------------------------------------------------*/// Initialisation du mode d'appel$mode       = isset($_REQUEST['mode']) ? $_REQUEST['mode'] : '';error_reporting(0);// Évite les problèmes de génération de PDF suite à des Warning de la dépendance// Intégration de la configuration du FrameWork et des autorisationsrequire_once '../php/config.php';// Instanciation des Managers$abattoirsManager = new AbattoirManager($cnx);$logsManager = new LogManager($cnx);$fonctionNom = 'mode'.ucfirst($mode);if (function_exists($fonctionNom)) {	$fonctionNom();}/* ------------------------------------MODE - Modale Abattoir (admin)------------------------------------*/function modeModalAbattoir() {    global	    $utilisateur,	    $abattoirsManager;    // On vérifie qu'on est bien loggé    if (!isset($_SESSION['logged_user'])) { exit;}	$abattoir_id = isset($_REQUEST['id']) ? intval($_REQUEST['id']) : 0;	$abattoir    = $abattoir_id > 0 ? $abattoirsManager->getAbattoir($abattoir_id) : new Abattoir([]);	// On instancie l'utilisateur en session s'il ne l'est pas déjà	if (!isset($utilisateur)) {		$utilisateur = unserialize($_SESSION['logged_user']);    }	// Retour Titre	echo '<i class="fa fa-skull-crossbones"></i>';	echo $abattoir_id > 0 ? $abattoir->getNom() : "Nouvel abattoir&hellip;";	// Séparateur Titre/Body pour le callback aJax	echo '^';	// Retour Body ?>	<form class="container-fluid" id="formAbattoirAddUpd">        <input type="hidden" name="mode" value="saveAbattoir"/>        <input type="hidden" name="abattoir_id" id="input_id" value="<?php echo $abattoir_id; ?>"/>		<div class="row">			<div class="col-12 col-lg-8 input-group mb-2">                <div class="input-group-prepend">                    <span class="input-group-text">Nom</span>                </div>                <input type="text" class="form-control" placeholder="Nom ou raison sociale" name="nom" id="input_nom" value="<?php echo $abattoir->getNom(); ?>">                <div class="invalid-feedback">Le nom ou raison sociale est obligatoire.</div>            </div>            <div class="col-12 col-lg-4 input-group mb-2">                <div class="input-group-prepend">                    <span class="input-group-text">Genlot</span>                </div>                <input type="text" class="form-control" placeholder="Code Genlot" name="genlot" id="input_genlot" value="<?php echo $abattoir->getGenlot(); ?>">                <div class="invalid-feedback">Le code Genlot est obligatoire.</div>            </div>		</div>        <div class="row">            <div class="col-12 col-lg-8 input-group mb-2">                <div class="input-group-prepend">                    <span class="input-group-text">Agrément</span>                </div>                <input type="text" class="form-control" placeholder="Numéro d'agrément" name="numagr" id="input_numagr" value="<?php echo $abattoir->getNumagr(); ?>">                <div class="invalid-feedback">Le numéro d'agrément est obligatoire.</div>            </div>            <div class="col-12 col-lg-4 mb-2 text-right">                <input type="checkbox" class="togglemaster" data-toggle="toggle" name="activation"					<?php echo $abattoir->isActif() ? 'checked' : ''; ?>                       data-on="Activé"                       data-off="Désactivé"                       data-onstyle="success"                       data-offstyle="danger"                />            </div>        </div>        <div class="row mt-3">            <div class="col-12 small padding-left-15 gris-9">Coordonnées <em>(facultatif)</em> :</div>            <div class="col-12 input-group mb-2">                <div class="input-group-prepend">                    <span class="input-group-text">Adresse</span>                </div>                <input type="text" class="form-control" placeholder="Adresse postale" name="adresse" id="input_adresse" value="<?php echo $abattoir->getAdresse(); ?>">            </div>        </div>        <div class="row">            <div class="col-12 col-lg-3 input-group mb-2">                <div class="input-group-prepend">                    <span class="input-group-text">CP</span>                </div>                <input type="text" class="form-control" placeholder="Code postal" name="cp" id="input_cp" value="<?php echo $abattoir->getCp(); ?>">            </div>            <div class="col-12 col-lg-5 input-group mb-2 padding-0">                <div class="input-group-prepend">                    <span class="input-group-text">Ville</span>                </div>                <input type="text" class="form-control" placeholder="Ville" name="ville" id="input_ville" value="<?php echo $abattoir->getVille(); ?>">            </div>            <div class="col-12 col-lg-4 input-group mb-2">                <div class="input-group-prepend">                    <span class="input-group-text">Pays</span>                </div>                <input type="text" class="form-control" placeholder="Pays" name="pays" id="input_pays" value="<?php echo $abattoir->getPays(); ?>">            </div>        </div>        <div class="row">            <div class="col-12 col-lg-4 input-group mt-2">                <div class="input-group-prepend">                    <span class="input-group-text"><i class="fa fa-phone gris-9"></i></span>                </div>                <input type="text" class="form-control" placeholder="Téléphone fixe" name="telephone" id="input_telephone" value="<?php echo $abattoir->getTelephone(); ?>">            </div>            <div class="col-12 col-lg-4 input-group mt-2 padding-0">                <div class="input-group-prepend">                    <span class="input-group-text"><i class="fa fa-mobile-alt gris-9"></i></span>                </div>                <input type="text" class="form-control" placeholder="Téléphone mobile" name="mobile" id="input_mobile" value="<?php echo $abattoir->getMobile(); ?>">            </div>            <div class="col-12 col-lg-4 input-group mt-2">                <div class="input-group-prepend">                    <span class="input-group-text"><i class="fa fa-keyboard gris-9"></i></span>                </div>                <input type="text" class="form-control" placeholder="Adresse e-mail" name="email" id="input_email" value="<?php echo $abattoir->getEmail(); ?>">            </div>        </div>	</form>    <div class="row mt-2">        <div class="col doublon d-none">            <div class="alert alert-danger">                <i class="fa fa-exclamation-circle mr-1"></i> Un autre abattoir porte déjà ce nom ou cet agrément !            </div>        </div>    </div>	<?php	// Séparateur Body/Footer pour le callback aJax	echo '^';	// Retour boutons footer si abattoir existant (bouton supprimer)    if ($abattoir_id > 0) {	?>	    <button type="button" class="btn btn-danger btn-sm btnSupprimeAbattoir">            <i class="fa fa-times fa-lg vmiddle mr-1"></i> Supprimer	    </button>	<?php    } // FIN test édition utilisateur existant	exit;} // FIN mode/* ------------------------------------MODE - Enregistre un abattoir (add/upd)------------------------------------*/function modeSaveAbattoir() {    global	    $cnx,	    $abattoirsManager;	// Vérification des données	$abattoir_id    = isset($_REQUEST['abattoir_id'])   ? intval($_REQUEST['abattoir_id'])          : 0;	$nom            = isset($_REQUEST['nom'])           ? strtoupper(trim($_REQUEST['nom']))        : '';	$genlot         = isset($_REQUEST['genlot'])        ? strtoupper(trim($_REQUEST['genlot']))     : '';	$numagr         = isset($_REQUEST['numagr'])        ? strtoupper(trim($_REQUEST['numagr']))     : '';	$activation     = isset($_REQUEST['activation'])    ? 1 : 0;	// Coordonées    $adresse        = isset($_REQUEST['adresse'])       ? trim(strip_tags($_REQUEST['adresse']))    : '';    $cp             = isset($_REQUEST['cp'])            ? trim(strip_tags($_REQUEST['cp']))         : '';    $ville          = isset($_REQUEST['ville'])         ? trim(strip_tags($_REQUEST['ville']))      : '';    $pays           = isset($_REQUEST['pays'])          ? trim(strip_tags($_REQUEST['pays']))       : '';    $telephone      = isset($_REQUEST['telephone'])     ? trim(strip_tags($_REQUEST['telephone']))  : '';    $mobile         = isset($_REQUEST['mobile'])        ? trim(strip_tags($_REQUEST['mobile']))     : '';    $email          = isset($_REQUEST['email'])         ? trim(strip_tags($_REQUEST['email']))      : '';	// Si pas de prénom, de nom, de profil ou de genlot, on ne vas pas plus loin...	if ($nom == '') {		echo '-1';		exit;	} // FIN test champs requis	// On vérifie que le genlot n'existe pas déjà    if ($genlot !== '' && $numagr != '' && $abattoirsManager->checkExisteDeja($genlot, $numagr, $abattoir_id)) {        echo '-1';        exit;    } // FIN contrôle existe déjà	// Instanciation de l'objet ABATTOIR (hydraté ou vide)	$abattoir = $abattoir_id > 0 ? $abattoirsManager->getAbattoir($abattoir_id) : new Abattoir([]);	// mise à jour des champs de base	$abattoir->setNom($nom);	$abattoir->setGenlot($genlot);	$abattoir->setNumagr($numagr);	$abattoir->setDate_maj(date('Y-m-d H:i:s'));	$abattoir->setActif($activation);	// Mise à jour des coordonées	$abattoir->setAdresse($adresse);	$abattoir->setCp($cp);	$abattoir->setVille($ville);	$abattoir->setPays($pays);	$abattoir->setTelephone($telephone);	$abattoir->setMobile($mobile);	$abattoir->setEmail($email);	// Si création, on enregistre la date	if ($abattoir_id == 0) {		$abattoir->setDate_add(date('Y-m-d H:i:s'));	}    // Enregistrement et retour pour callBack ajax    $retour = $abattoirsManager->saveAbattoir($abattoir);    // Logs    $logsManager = new LogManager($cnx);    $log = new Log([]);    if ($retour) {		$log->setLog_type('info');		if ($abattoir_id == 0) {		    $log->setLog_texte("Création d'un nouvel abattoir : " . $abattoir->getNom());        } else {			$log->setLog_texte("Mise à jour des informations de l'abattoir #" . (int)$abattoir_id);        }    } else {		$log->setLog_type('danger');		if ($abattoir_id == 0) {			$log->setLog_texte("ERREUR lors de la création d'un nouvel abattoir : " . $nom);		} else {			$log->setLog_texte("ERREUR lors de la mise à jour des informations de l'abattoir #" . (int)$abattoir_id);		}    } // FIN test retour création/maj pour log	$logsManager->saveLog($log);	echo $retour !== false ? '1' : '0';	exit;} // FIN mode/* ------------------------------------MODE - Affiche la liste des abattoirs------------------------------------*/function modeShowListeAbattoirs() {	global	    $mode,		$utilisateur,        $abattoirsManager;	// Préparation pagination (Ajax)	$nbResultPpage      = 15;	$page               = isset($_REQUEST['page']) ? intval($_REQUEST['page']) : 1;	$filtresPagination  = '?mode='.$mode;	$start              = ($page-1) * $nbResultPpage;	$params['show_inactifs'] 	= true;	$filtre_recherche   =  isset($_REQUEST['filtre_recherche'])  ? trim($_REQUEST['filtre_recherche'])   : '';	$filtre_pays        =  isset($_REQUEST['filtre_pays'])       ? trim($_REQUEST['filtre_pays'])        : '';	$filtre_actif       =  isset($_REQUEST['filtre_actif']) && $_REQUEST['filtre_actif'] != '' ? intval($_REQUEST['filtre_actif'])     : -1;	if ($filtre_recherche != '' ) { $params['recherche'] = $filtre_recherche;   $filtresPagination.= '&filtre_recherche='.$filtre_recherche; }	if ($filtre_pays      != '' ) { $params['pays'] = $filtre_pays;             $filtresPagination.= '&filtre_pays='.$filtre_pays;           }	if ($filtre_actif     > -1  ) { $params['actif'] = $filtre_actif;           $filtresPagination.= '&filtre_actif='.$filtre_actif;         }	$listeAbattoirs = $abattoirsManager->getListeAbattoirs($params);	// Si aucun abattoir a afficher	if (empty($listeAbattoirs)) { ?>        <div class="alert alert-danger">            <i class="fa fa-times-circle text-28 vmiddle mr-1"></i> <strong>Aucun abattoir !</strong>        </div>    <?php	// Sinon, affichage de la liste des abattoirs	} else { ?>        <div class="alert alert-danger d-md-none text-center">            <i class="fa fa-exclamation-circle text-28 mb-1"></i> <p>Connectez-vous depuis un apareil permettant un affichage plus large pour afficher cet écran&hellip;</p>        </div>        <table class="admin w-100 d-none d-md-table">            <thead>                <tr>				    <?php                    // On affiche l'ID que si on est développeur                    if ($utilisateur->isDev()) { ?><th class="w-court-admin-cell d-none d-xl-table-cell">ID</th><?php } ?>                    <th>Nom</th>                    <th class="d-none d-lg-table-cell">Genlot</th>                    <th class="d-none d-lg-table-cell">Agrément</th>                    <th class="d-none d-md-table-cell">Pays</th>                    <th class="text-center w-court-admin-cell">Actif</th>                    <th class="t-actions w-court-admin-cell">Détails</th>                </tr>            </thead>            <tbody>			    <?php				$attention = '<i class="fa fa-exclamation-triangle"></i>';                // Boucle sur les abattoirs				foreach ($listeAbattoirs as $abattoir) {					?>                    <tr>						<?php						// On affiche l'ID que si on est développeur                        if ($utilisateur->isDev()) { ?>                            <td class="w-court-admin-cell d-none d-xl-table-cell"><span class="badge badge-pill badge-warning"><?php echo $abattoir->getId();?></span></td>                        <?php } ?>                        <td class="text-18"><?php echo $abattoir->getNom();?></td>                        <td class="d-none d-lg-table-cell"><code class="text-14"><?php echo $abattoir->getGenlot() != '' ? $abattoir->getGenlot() : $attention;?></code></td>                        <td class="d-none d-lg-table-cell"><code class="text-14"><?php echo $abattoir->getNumagr() != '' ? $abattoir->getNumagr() : $attention; ?></code></td>                        <td class="d-none d-md-table-cell"><?php echo $abattoir->getPays() != '' ? ucwords(strtolower($abattoir->getPays())) : '&mdash;';?></td>                        <td class="text-center w-court-admin-cell"><i class="fa fa-fw fa-lg fa-<?php echo $abattoir->isActif() ? 'check-circle text-success' : 'times-circle text-danger'; ?>"></i></td>                        <td class="t-actions w-court-admin-cell"><button type="button" class="btn btn-sm btn-secondary" data-toggle="modal" data-target="#modalAbattoir" data-abattoir-id="<?php                            echo $abattoir->getId(); ?>"><i class="fa fa-edit"></i> </button></td>                        </tr>                <?php				} // FIN boucle abattoirs ?>            </tbody>        </table>	<?php } // FIN test abattoirs à afficher    exit;} // FIN mode/* ---------------------------------------MODE - Supprime un abattoir---------------------------------------*/function modeSupprAbattoir() {    global        $abattoirsManager,        $logsManager;    //  On ne supprime pas réellement pour les raisons de traçabilité, on passe le champ "supprime" à 1    // On récupère l'ID de l'abattoir, si il n'est pas clairement identifié, on ne va pas plus loin    $id_abattoir = isset($_REQUEST['id_abattoir']) ? intval($_REQUEST['id_abattoir']) : 0;    if ($id_abattoir == 0) { exit; }    // Instanciation de l'objet Abattoir    $abattoir = $abattoirsManager->getAbattoir($id_abattoir);    // On passe le statut à supprimé	$abattoir->setSupprime(1);    // On désactive	$abattoir->setActif(0);    // On enregistre la date de modification	$abattoir->setDate_maj(date('Y-m-d H:i:s'));	// Si la mise à jour s'est bien passé en BDD    if ($abattoirsManager->saveAbattoir($abattoir)) {        // On sauvegarde dans les LOGS        $log = new Log([]);        $log->setLog_texte("Suppression d'un abattoir (champ 'supprime' à 1) : ID #" . $id_abattoir);        $log->setLog_type('warning');		$logsManager->saveLog($log);    } // FIN test suppression OK pour Log    exit;} // FIN mode/* ------------------------------------------MODE - Vérifie si existe déjà (admin/modale)-------------------------------------------*/function modeCheckExisteDeja() {    global        $abattoirsManager;    $id     = isset($_REQUEST['id'])        ? (int)$_REQUEST['id']      : 0;    $genlot = isset($_REQUEST['genlot'])    ? trim($_REQUEST['genlot'])    : '';    $numagr = isset($_REQUEST['numagr'])    ? trim($_REQUEST['numagr']) : '';	echo $abattoirsManager->checkExisteDeja($genlot, $numagr, $id) ? 1 : 0;} // FIN mode/* ------------------------------------------MODE - Export en PDF-------------------------------------------*/function modeExportPdf() {	global $tiersManager;	require_once(__CBO_ROOT_PATH__.'/vendor/html2pdf/html2pdf.class.php');	ob_start();	$content = genereContenuPdf();	$content .= ob_get_clean();	// On supprime tous les fichiers du même genre sur le serveur	foreach (glob(__CBO_ROOT_PATH__.'/temp/iprexabat-*.pdf') as $fichier) {		unlink($fichier);	}	try {		$nom_fichier = 'iprexabat-'.date('is').'.pdf';		$html2pdf = new HTML2PDF('P', 'A4', 'fr', false, 'ISO-8859-15');		$html2pdf->pdf->SetAutoPageBreak(false, 0);		$html2pdf->setDefaultFont('helvetica');		$html2pdf->writeHTML(utf8_decode($content));;		$savefilepath = __CBO_ROOT_PATH__.'/temp/'.$nom_fichier;		$html2pdf->Output($savefilepath, 'F');		echo __CBO_TEMP_URL__.$nom_fichier;	}	catch(HTML2PDF_exception $e) {		exit;	}	exit;} // FIN mode/* ----------------------------------------------------------------------------FONCTION DEPORTEE - Génère le contenu HTML pour le PDF-----------------------------------------------------------------------------*/function genereContenuPdf() {	global $cnx, $abattoirsManager;	// HEAD	$contenu = '<!DOCTYPE html><html><head>  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>  <style type="text/css">      * { margin:0; padding: 0; }      .header { border-bottom: 2px solid #ccc; }    .header img.logo { width: 200px; }    .text-right { text-align: right; }    .text-center { text-align: center; }    .table { border-collapse: collapse; }    .table-donnees th { font-size: 11px; }    .table-liste th { font-size: 9px; background-color: #d5d5d5; padding:3px; }    .table-liste td { font-size: 9px; padding-top: 3px; padding-bottom: 3px; border-bottom: 1px solid #ccc;}    .table-liste td.no-bb { border-bottom: none; padding-bottom: 0px; }    .titre {       background-color: teal;       color: #fff;       padding: 3px;       text-align: center;       font-weight: normal;       font-size: 14px;    }    .recap {       background-color: #ccc;       padding: 3px;       text-align: center;       font-weight: normal;       font-size: 10px;    }        .w100 { width: 100%; }    .w75 { width: 75%; }    .w50 { width: 50%; }    .w45 { width: 45%; }    .w40 { width: 40%; }    .w25 { width: 25%; }    .w33 { width: 33%; }    .w34 { width: 34%; }    .w20 { width: 20%; }    .w30 { width: 30%; }    .w15 { width: 15%; }    .w35 { width: 35%; }    .w5 { width: 5%; }    .w10 { width: 10%; }    .w15 { width: 15%; }        .text-6 { font-size: 6px; }    .text-7 { font-size: 7px; }    .text-8 { font-size: 8px; }    .text-9 { font-size: 9px; }    .text-10 { font-size: 10px; }    .text-11 { font-size: 11px; }    .text-12 { font-size: 12px; }    .text-14 { font-size: 14px; }    .text-16 { font-size: 16px; }    .text-18 { font-size: 18px; }    .text-20 { font-size: 20px; }        .gris-3 { color:#333; }    .gris-5 { color:#555; }    .gris-7 { color:#777; }    .gris-9 { color:#999; }    .gris-c { color:#ccc; }    .gris-d { color:#d5d5d5; }    .gris-e { color:#e5e5e5; }        .mt-0 { margin-top: 0px; }    .mt-2 { margin-top: 2px; }    .mt-5 { margin-top: 5px; }    .mt-10 { margin-top: 10px; }    .mt-15 { margin-top: 15px; }    .mt-20 { margin-top: 20px; }    .mt-25 { margin-top: 25px; }    .mt-50 { margin-top: 50px; }        .mb-0 { margin-bottom: 0px; }    .mb-2 { margin-bottom: 2px; }    .mb-5 { margin-bottom: 5px; }    .mb-10 { margin-bottom: 10px; }    .mb-15 { margin-bottom: 15px; }    .mb-20 { margin-bottom: 20px; }    .mb-25 { margin-bottom: 25px; }    .mb-50 { margin-bottom: 50px; }        .mr-0 { margin-right: 0px; }    .mr-2 { margin-right: 2px; }    .mr-5 { margin-right: 5px; }    .mr-10 { margin-right: 10px; }    .mr-15 { margin-right: 15px; }    .mr-20 { margin-right: 20px; }    .mr-25 { margin-right: 25px; }    .mr-50 { margin-right: 50px; }        .ml-0 { margin-left: 0px; }    .ml-2 { margin-left: 2px; }    .ml-5 { margin-left: 5px; }    .ml-10 { margin-left: 10px; }    .ml-15 { margin-left: 15px; }    .ml-20 { margin-left: 20px; }    .ml-25 { margin-left: 25px; }    .ml-50 { margin-left: 50px; }        .pt-0 { padding-top: 0px; }    .pt-2 { padding-top: 2px; }    .pt-5 { padding-top: 5px; }    .pt-10 { padding-top: 10px; }    .pt-15 { padding-top: 15px; }    .pt-20 { padding-top: 20px; }    .pt-25 { padding-top: 25px; }    .pt-50 { padding-top: 50px; }        .pb-0 { padding-bottom: 0px; }    .pb-2 { padding-bottom: 2px; }    .pb-5 { padding-bottom: 5px; }    .pb-10 { padding-bottom: 10px; }    .pb-15 { padding-bottom: 15px; }    .pb-20 { padding-bottom: 20px; }    .pb-25 { padding-bottom: 25px; }    .pb-50 { padding-bottom: 50px; }        .pr-0 { padding-right: 0px; }    .pr-2 { padding-right: 2px; }    .pr-5 { padding-right: 5px; }    .pr-10 { padding-right: 10px; }    .pr-15 { padding-right: 15px; }    .pr-20 { padding-right: 20px; }    .pr-25 { padding-right: 25px; }    .pr-50 { padding-right: 50px; }        .pl-0 { padding-left: 0px; }    .pl-2 { padding-left: 2px; }    .pl-5 { padding-left: 5px; }    .pl-10 { padding-left: 10px; }    .pl-15 { padding-left: 15px; }    .pl-20 { padding-left: 20px; }    .pl-25 { padding-left: 25px; }    .pl-50 { padding-left: 50px; }        .text-danger { color: #d9534f; }      </style> </head><body>';	$contenu.=  genereEntetePagePdf();	// PAGE 1	// GENERAL	// Préparation des variables	$na             = '<span class="gris-9 text-11"><i>Non renseigné</i></span>';	$tiret          = '<span class="gris-9 text-11"><i>-</i></span>';	// Préparation des variables	$params = [];	$liste = $abattoirsManager->getListeAbattoirs($params);	// Génération du contenu HTML	$contenu.= '<table class="table table-liste w100 mt-10">';	// Aucun frs	if (empty($liste)) {		$contenu.= '<tr><td class="w100 text-center gris-9 text-11"><i>Aucun abattoir</i></td></tr>';		// Liste des Frs	} else {		$contenu.= '<tr>                        <th class="w45">Nom</th>                        <th class="w10 text-center">Genlot</th>                        <th class="w20">Agrément</th>                        <th class="w20">Pays</th>                        <th class="w5 text-center">Actif</th>                    </tr>';		foreach ($liste as $item) {			$actif        = $item->getActif() > 0 ? 'Oui' : 'Non';			$contenu.= '<tr>                            <td class="w45">' . $item->getNom() . '</td>                            <td class="w10 text-center">' . $item->getGenlot() . '</td>                            <td class="w20">' . $item->getNumagr() . '</td>                            <td class="w20">' . $item->getPays() . '</td>                            <td class="w5 text-center">' . $actif . '</td>                              </tr>';		} // FIN boucle sur les produits	} // FIN test produits	$contenu.= '</table>';	$contenu.= '<table class="table w100 mt-15"><tr><th class="w100 recap">Nombre d\'abattoirs : '. count($liste) .'</th></tr></table>';	// FOOTER	$contenu.= '<table class="w100 gris-9">                    <tr>                        <td class="w50 text-8">Document édité le '.date('d/m/Y').' à '.date('H:i:s').'</td>                        <td class="w50 text-right text-6">&copy; 2019 IPREX / INTERSED </td>                    </tr>                </table>            </body>        </html>';	// RETOUR CONTENU	return $contenu;} // FIN fonction déportée/* ----------------------------------------------------------------------------FONCTION DEPORTEE - Génère le header du PDF (logo...)-----------------------------------------------------------------------------*/function genereEntetePagePdf() {	global $cnx;	$entete = '<div class="header">                <table class="table w100">                    <tr>                        <td class="w33"><img src="'.__CBO_ROOT_URL__.'img/logo-pe-350.jpg" alt="PROFIL EXPORT" class="logo"/></td>                        <td class="w34 text-center pt-10">                            Liste des abattoirs au '.date("d/m/Y").'                        </td>                        <td class="w33 text-right text-14">                            <p class="text-18"><b>IPREX</b></p>                            <p class="text-12 gris-7">Intranet PROFIL EXPORT</p>                        </td>                    </tr>                                </table>               </div>';	return $entete;} // FIN fonction déportée