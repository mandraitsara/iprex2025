<?php/*   _|_|_|  _|_|_|    _| _|        _|    _|  _|        CBO FrameWork _|        _|_|_|    _|        (c) 2018 Cédric Bouillon _|        _|    _|  _|   _|_|_|  _|_|_|    _|_|_|_|--------------------------------------------------------Contrôleur Ajax Points de contrôles------------------------------------------------------*/// Initialisation du mode d'appel$mode       = isset($_REQUEST['mode']) ? $_REQUEST['mode'] : '';// Intégration de la configuration du FrameWork et des autorisationsrequire_once '../php/config.php';// Instanciation des Managers$pointsControleManager = new PointsControleManager($cnx);$logManager = new LogManager($cnx);$fonctionNom = 'mode'.ucfirst($mode);if (function_exists($fonctionNom)) {	$fonctionNom();}/* ------------------------------------MODE - Change activation------------------------------------*/function modeChangeActivation() {	global $pointsControleManager, $logManager;	$id_point = isset($_REQUEST['id']) ? intval($_REQUEST['id']) : 0;	if ($id_point == 0) { exit('-1'); }	$point = $pointsControleManager->getPointControle($id_point);	if (!$point instanceof PointControle) { exit('-2'); }	$actif = isset($_REQUEST['actif']) ? intval($_REQUEST['actif']) : -1;	if ($actif < 0) { $actif = $point->getActivation() == 1 ? 0 : 1; }	$point->setActivation($actif);	if (!$pointsControleManager->savePointControle($point)) { exit('-3'); }	$logTexte = $actif == 1 ? 'Activation' : 'Désactivation';	$logTexte.= ' du point de contrôle ID #'.$id_point;	$log = new Log([]);	$log->setLog_type('info');	$log->setLog_texte($logTexte);	$logManager->saveLog($log);	exit('1');} // FIN mode/* ------------------------------------MODE - Change la position------------------------------------*/function modeChangePosition() {	global $pointsControleManager, $logManager;	$id_point = isset($_REQUEST['id']) ? intval($_REQUEST['id']) : 0;	if ($id_point == 0) { exit('-1'); }	$point = $pointsControleManager->getPointControle($id_point);	if (!$point instanceof PointControle) { exit('-2'); }	$deplacement = isset($_REQUEST['deplacement']) ? intval($_REQUEST['deplacement']) : 0;	if ($deplacement == 0) { exit('-3'); }	// Si on remonte	if ($deplacement < 0) {	    // Si le point est à position 1 alors on ne fait rien		if ($point->getPosition() < 2) { exit; }        // Sinon, on interverti les postition du point actuel avec le point à position P-1        $newPostition = $point->getPosition() - 1;		if ($pointsControleManager->movePositionPoint($point->getId_parent(), $newPostition, $point->getPosition())) { // Parent, ancien, nouveau			$point->setPosition($newPostition);			$pointsControleManager->savePointControle($point);        }    // Si on descend    } else {	    // Si le point est à position max, on ne fait rien		$lastPosition = (int)$pointsControleManager->getNextPosition($point->getId_parent()) - 1;		if ($point->getPosition() == $lastPosition) { exit; }		// Sinon, on interverti les postition du point actuel avec le point à position P+1		$newPostition = $point->getPosition() + 1;		if ($pointsControleManager->movePositionPoint($point->getId_parent(), $newPostition, $point->getPosition())) { // Parent, ancien, nouveau			$point->setPosition($newPostition);			$pointsControleManager->savePointControle($point);		}    } // Fin sens déplacement    exit('1');} // FIN mode