<?php/*   _|_|_|  _|_|_|      _|_| _|        _|    _|  _|    _|  CBO FrameWork _|        _|_|_|    _|    _|  (c) 2018 Cédric Bouillon _|        _|    _|  _|    _|   _|_|_|  _|_|_|      _|_|--------------------------------------------------------Générateur de classes------------------------------------------------------*/$onlyDebug = true;require_once 'scripts/php/config.php';if (!$utilisateur->isDev()) {header('Location: '.__CBO_ROOT_URL__);exit;}$title = 'Générateur de classes';include('includes/header.php');$ok 	= false;$erreur = false;if (isset($_REQUEST['nom'])) {	$nom 		= isset($_REQUEST['nom']) ? ucfirst(preg_replace("/[^A-Za-z0-9]/","",$_REQUEST['nom'])) : '';	$attributs 	= isset($_REQUEST['attr']) && is_array($_REQUEST['attr']) && !empty($_REQUEST['attr']) ? $_REQUEST['attr'] : false;	$setattrib	= isset($_REQUEST['setattributs']);	$table		= isset($_REQUEST['table']) && strlen($_REQUEST['table']) > 0 ? trim(strtolower($_REQUEST['table'])) : false;	$clefprim	= isset($_REQUEST['clef']) ? trim(strtolower($_REQUEST['clef'])) : '';	if ($nom == '' || !$attributs || !$table) { $erreur = true; } else {		$pluriel_nom = substr($nom,-1,1) == 's' || substr($nom,-1,1) == 'x' ? $nom : $nom.'s';		// Nom de la classe		$nom_classe = $nom . '.class.php';		// Nom du manager		$nom_manager = $pluriel_nom.'Manager.class.php';/******************************************************************************************************************************** * GENERATION DE L'OBJET *******************************************************************************************************************************/		$classe 	= "<?php/*   _|_|_|  _|_|_|    _| _|        _|    _|  _|        CBO FrameWork _|        _|_|_|    _|        (c) 2020 Cédric Bouillon _|        _|    _|  _|   _|_|_|  _|_|_|    _|_|_|_|--------------------------------------------------------Objet ".$nom."Généré par CBO FrameWork le ".date('d/m/Y à H:i:s')."------------------------------------------------------*/class ".$nom." {	";$i = 0;foreach ($attributs as $attribut) {	$pre 		= $i == 0 ? "    protected    " : "                 ";	$post 		= $i == count($attributs) - 1 ? ';' : ',';	$nom_attr 	= "$".trim($attribut['nom']);	$classe.= $pre.$nom_attr.$post."";	$i++;} // FIN boucle attributs		$classe.= '    public       $attributs = array();    public function __construct(array $donnees)	{        $this->hydrate($donnees);    }    public function hydrate(array $donnees)	{        foreach ($donnees as $key => $value) {            $method = \'set\'.ucfirst(strtolower($key));            if (method_exists($this,$method)) {                $this->$method($value);            }        }';$classe.= $setattrib ? '        $this->attributs = array();' : '';$classe.= '    }    /* ----------------- GETTERS ----------------- */';foreach ($attributs as $attribut) {	$classe.= '    public function get'.ucfirst(trim($attribut['nom'])).'() {        return $this->'.trim($attribut['nom']).';    }';}$classe.= '    /* ----------------- SETTERS ----------------- */';foreach ($attributs as $attribut) {	if ($attribut['type'] == '' || $attribut['nom'] == '') { continue; }	$classe.= '    public function set'.ucfirst(trim($attribut['nom'])).'($'.strtolower(trim($attribut['nom'])).') {        $this->'.trim($attribut['nom']).' = ('.$attribut['type'].')$'.strtolower(trim($attribut['nom'])).';';	$classe.= !isset($attribut['clef']) && $setattrib ? '	        Outils::setAttributs(\''.trim($attribut['nom']).'\',$this);' : '';	$classe.= '	    }';}$classe.= '} // FIN classe';/******************************************************************************************************************************** * GENERATION DU MANAGER *******************************************************************************************************************************/		$manager 	= '<?php/*   _|_|_|  _|_|_|    _| _|        _|    _|  _|        CBO FrameWork _|        _|_|_|    _|        (c) 2020 Cédric Bouillon _|        _|    _|  _|   _|_|_|  _|_|_|    _|_|_|_|--------------------------------------------------------Manager de l\'objet '.$nom.'Généré par CBO FrameWork le '.date("d/m/Y à H:i:s").'------------------------------------------------------*/class '.$pluriel_nom.'Manager {    protected    $db, $nb_results;    public function __construct($db) {        $this->setDb($db);    }    /* ----------------- GETTERS ----------------- */    public function getNb_results() {        return $this->nb_results;    }    /* ----------------- SETTERS ----------------- */    public function setDb(PDO $db) {        $this->db = $db;    }        public function setNb_results($nb_results) {	    $this->nb_results = (int)$nb_results;    }    /* ----------------- METHODES ----------------- */    // Retourne la liste des '.$nom.'    public function getListe'.$pluriel_nom.'($params = []) {            $start = isset($params[\'start\'])          ? intval($params[\'start\'])          : 0;        $nb    = isset($params[\'nb_result_page\']) ? intval($params[\'nb_result_page\']) : 10000000;        $query_liste = "SELECT SQL_CALC_FOUND_ROWS ';$i = 0;foreach ($attributs as $attribut) {	if ($attribut['type'] == '' || $attribut['nom'] == '') { continue; }	$manager.= '`'.trim(strtolower($attribut['nom'])).'`';	$manager.= $i == count($attributs) - 1 ? '' : ', ';	$i++;}$manager.= ' FROM `'.$table.'` WHERE 1             ORDER BY `'.$clefprim.'` DESC "; '; $manager.=  ' $query_liste.= \'LIMIT \' . $start . \',\' . $nb;        $query = $this->db->prepare($query_liste);        $query->execute();                $this->setNb_results($this->db->query(\'SELECT FOUND_ROWS()\')->fetchColumn());                $liste = [];        foreach ($query->fetchAll(PDO::FETCH_ASSOC) as $donnee) {            $liste[] = new '.$nom.'($donnee);        }        return $liste;    } // FIN liste des '.$nom.'    // Retourne un '.$nom.'    public function get'.$nom.'($id) {        $query_object = "SELECT ';$i = 0;foreach ($attributs as $attribut) {	if ($attribut['type'] == '' || $attribut['nom'] == '') { continue; }	$manager.= '`'.trim(strtolower($attribut['nom'])).'`';	$manager.= $i == count($attributs) - 1 ? '' : ', ';	$i++;}$manager.= '                 FROM `'.$table.'` WHERE `'.$clefprim.'` = " . (int)$id;        $query = $this->db->prepare($query_object);        if (!$query->execute()) { return false; }        $donnee = $query->fetch(PDO::FETCH_ASSOC);        return $donnee && isset($donnee) ? new '.$nom.'($donnee) : false;            } // FIN get '.$nom.'    // Enregistre & sauvegarde (Méthode Save)    public function save'.$nom.'('.$nom.' $objet) {        $table      = \''.$table.'\'; // Nom de la table        $champClef  = \''.$clefprim.'\'; // Nom du champ clef        // FIN Configuration        $getter     = \'get\'.ucfirst(strtolower($champClef));        $setter     = \'set\'.ucfirst(strtolower($champClef));        if ($objet->$getter() == \'\' && !empty($objet->attributs)) {            $query_add = \'INSERT INTO \'.$table.\' (\';            foreach ($objet->attributs as $attribut)	{                $query_add.= \'`\'.$attribut.\'`,\';            }            $query_add = substr($query_add,0,-1);            $query_add.=\') VALUES (\';            foreach ($objet->attributs as $attribut)	{                $query_add.= \':\'.strtolower($attribut).\',\';            }            $query_add = substr($query_add,0,-1);            $query_add.=\')\';            $query = $this->db->prepare($query_add);            foreach ($objet->attributs as $attribut)	{                $attributget = \'get\'.ucfirst($attribut);                $query->bindvalue(\':\'.strtolower($attribut), $objet->$attributget());            }            if ($query->execute()) {                $objet->$setter($this->db->lastInsertId());		                return $objet->$getter();            }        } else if ($objet->$getter() != \'\' && !empty($objet->attributs)) {	            $query_upd = \'UPDATE \'.$table.\' SET \';            foreach($objet->attributs as $attribut) {                $query_upd.= \'`\'.$attribut.\'` = :\'.strtolower($attribut).\',\';            }            $query_upd = substr($query_upd,0,-1);            $query_upd .= \' WHERE \'.$champClef.\' = \'.$objet->$getter();	            $query = $this->db->prepare($query_upd);            foreach($objet->attributs as $attribut) {                $attributget = \'get\'.ucfirst($attribut);                $query->bindvalue(\':\'.strtolower($attribut), $objet->$attributget());            }            try	{                $query->execute();                return true;            } catch(PDOExeption $e) {return false;}        }		        return false;    } // FIN méthode} // FIN classe';	// Si aucune erreur, on est ok pour l'affichage	if (!$erreur) { $ok = true; }	} // FIN test erreur nom / attributs} // FIN test récup donnéesif ($erreur) { ?>	<div class="alert alert-danger">		<h3 class="no-margin">ERREUR</h3>		<p>Les fichiers n'ont pas pu être générés !</p>	</div><?php } ?><div class="titre">    <img src="<?php echo __CBO_IMG_URL__; ?>favicon.png" class="float-left margin-right-5 margin-top-5 margin-left-15" style="max-width: 40px;"/>    <?php	if ($ok) { ?> <a href="_class-generator.php" class="btn btn-outline-secondary btn-sm margin-top-15 float-right margin-right-20"><i class="fa fa-arrow-left"></i> Retour</a>  <?php } else { ?>    <?php } ?>    <h1>Générateur de classes</h1>    <hr></div><?php	if ($ok) { ?><div class="container-fluid row"><div class="col-md-6">	<div class="float-right">		<span class="fa-stack pointeur gris-3 btnCopier">		  <i class="fas fa-square fa-stack-2x"></i>		  <i class="fa fa-copy fa-stack-1x fa-inverse"></i>		</span>		<a class="fa-stack pointeur gris-3 btnTelecharger" href="" download="<?php echo $nom_classe; ?>">		  <i class="fas fa-square fa-stack-2x"></i>		  <i class="fa fa-download fa-stack-1x fa-inverse"></i>		</a>	</div>	<h4 class="no-margin"><i class="fa fa-file-code"></i> <?php echo $nom_classe; ?></h4>	<textarea class="form-control margin-top-5 margin-bottom-15"><?php echo $classe; ?></textarea></div><div class="col-md-6">	<div class="float-right">		<span class="fa-stack pointeur gris-3 btnCopier">		  <i class="fas fa-square fa-stack-2x"></i>		  <i class="fa fa-copy fa-stack-1x fa-inverse"></i>		</span>		<a class="fa-stack pointeur gris-3 btnTelecharger" href="" download="<?php echo $nom_manager; ?>">		  <i class="fas fa-square fa-stack-2x"></i>		  <i class="fa fa-download fa-stack-1x fa-inverse"></i>		</a>	</div>	<h4 class="no-margin "><i class="fa fa-file-code"></i> <?php echo $nom_manager; ?></h4>	<textarea class="form-control margin-top-5"><?php echo $manager; ?></textarea></div></div><?php	include('includes/footer.php');exit;} // FIN test requete ?><div class="row"><form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post" class="col-md-10 offset-md-2"><div class="row">	<div class="col-md-8 alert alert-secondary">		<h2 class="nomargin">Définitions</h2>    	<div class="row margin-top-10">	    	<div class="col-md-6">		    	<div class="input-group">                    <span class="input-group-prepend"><span class="input-group-text"><i class="fa fa-tag"></i></span></span>				    <input type="text" class="form-control" placeholder="Nom de l'objet (camelCase)" name="nom"/>			    </div>    		</div>	    	<div class="col-md-6">		    	<input type="checkbox" checked class="icheck" name="setattributs" id="setattributes"><label for="setattributes" class="margin-left-10 padding-top-2 pointeur gris-5">Intégrer SetAttributes</label>		    </div>	    </div>	    <div class="row margin-top-25 margin-bottom-25">		    <div class="col-md-6">			    <div class="input-group">                        <span class="input-group-prepend"><span class="input-group-text"><i class="fa fa-database"></i></span></span>				    <input type="text" class="form-control" placeholder="Nom de la table (BDD)" name="table"/>			    </div>		    </div>		    <div class="col-md-6">			    <div class="input-group">                        <span class="input-group-prepend"><span class="input-group-text"><i class="fa fa-key"></i></span></span>				    <input type="text" class="form-control" placeholder="Clef primaire" name="clef"/>                        <span class="input-group-append" data-toggle="tooltip" title="Laisser vide pour ne pas générer la méthode SAVE"><span class="input-group-text"><i class="fa fa-info-circle gris-7"></i></span></span>			    </div>		    </div>	    </div>        <h2>Attributs</h2>        <div class="row row-attribut margin-top-10" id="rowAttribut">            <div class="col-md-6">                <div class="input-group">                        <span class="input-group-prepend"><span class="input-group-text"><i class="fa fa-tag"></i></span></span>                    <input type="text" class="form-control" placeholder="Nom de l'attribut" name="attr[0][nom]"/>                </div>            </div>            <div class="col-md-3">                <div class="input-group">                    <select class="selectpicker show-tick" title="Type" name="attr[0][type]">                        <option value="int" 	data-subtext="Entier">Int</option>                        <option value="float" 	data-subtext="Décimal">Float</option>                        <option value="string" 	data-subtext="Chaine de caractère">String</option>                        <option value="array" 	data-subtext="Tableau">Array</option>                        <option value="objet" 	data-subtext="Objet">Object</option>                    </select>                </div>            </div>            <div class="col-md-3 text-right">                <input type="checkbox" class="icheck" id="champclef0" name="attr[0][clef]"><label for="champclef0" class="margin-left-5 padding-top-5 pointeur gris-7">Champ clef</label>                <i class="fa fa-info-circle gris-9 margin-left-5 margin-top-5" data-toggle="tooltip" title="Un champ clef n'a pas de setAttribute sur le Setter"></i>            </div>        </div>        <div class="row row-insertattr margin-top-10">            <div class="col-md-12">                <button type="button" class="btn btn-default gris-5 btnAddAttribut"><i class="fa fa-plus"></i><span class="padding-left-5">Ajouter un attribut&hellip;</span></button>            </div>        </div>	</div>	<div class="col-md-4 ">        <div class="row">            <div class="col-md-12">                <button type="submit" class="btn btn-secondary text-16 margin-right-10 text-center"><i class="fa fa-magic fa-lg"></i><br>Générer les fichiers</button>                <a href="_class-generator.php" class="btn btn-outline-secondary text-16 text-center margin-right-10 btn-init"><i class="fa fa-backspace fa-lg"></i><br>Réinitialiser</a>            </div>        </div>	</div></div></form></div><?php include('includes/footer.php');