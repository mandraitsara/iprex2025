<?php/*   _|_|_|  _|_|_|      _|_| _|        _|    _|  _|    _|  CBO FrameWork _|        _|_|_|    _|    _|  (c) 2018 Cédric Bouillon _|        _|    _|  _|    _|   _|_|_|  _|_|_|      _|_|--------------------------------------------------------Manager de l'Objet Origine------------------------------------------------------*/class OrigineManager {	protected	$db;	public function __construct($db) {		$this->setDb($db);	}		//##### GETTERS #####	public function getNb_results() {		return $this->nb_results;	}		//##### SETTERS #####	public function setDb(PDO $db) {		$this->db = $db;	}		/****************	 * METHODES	 ***************/	// Retourne un origine par son ID	public function getOrigine($id) {		$query_origine = 'SELECT `id`, `nom`, `code`, `actif`, `supprime`, `date_add`, `date_maj` FROM `pe_origines` WHERE `id` = :id';		$query = $this->db->prepare($query_origine);		$query->bindValue(':id', (int)$id);		$query->execute();		// Log de la requête pour le mode Dev		if (isset($_SESSION['devmode']) && $_SESSION['devmode']) {			$_SESSION['pdoq'][get_class($this)][] = ['q' => $query->queryString, 'v' => ':id = "'.$id.'" '];		}		$donnee = $query->fetch();		return $donnee && !empty($donnee) ? new Origine($donnee) : false;	} // FIN méthode	// Retourne la liste des origines	public function getListeOrigines($show_inactifs = false, $show_supprime = false, $recherche = '') {		$query_liste = 'SELECT `id`, `nom`, `code`, `actif`, `supprime`, `date_add`, `date_maj` FROM `pe_origines` WHERE 1 = 1 ';		$query_liste.= $recherche != '' ? 'AND `nom` LIKE "%'.$recherche.'%"' : '';		$query_liste.= !$show_inactifs != '' ? 'AND `actif` = 1 ' : '';		$query_liste.= !$show_supprime != '' ? 'AND `supprime` = 0 ' : '';		$query_liste.= 'ORDER BY `nom` ASC';		$query = $this->db->prepare($query_liste);		$query->execute();		// Log de la requête pour le mode Dev		if (isset($_SESSION['devmode']) && $_SESSION['devmode']) { $_SESSION['pdoq'][get_class($this)][] = $query->queryString; }		$liste = [];		foreach ($donnees = $query->fetchAll(PDO::FETCH_ASSOC) as $donnee) {			$liste[] = new Origine($donnee);		}		return $liste;	} // FIN getListe		// Enregistre une nouvelle origine	public function saveOrigine(Origine $objet) {				$table		= 'pe_origines';	// Nom de la table		$champClef	= 'id';				// Nom du champ clef primaire		// FIN Configuration		$getter		= 'get'.ucfirst(strtolower($champClef));		$setter		= 'set'.ucfirst(strtolower($champClef));				if ($objet->$getter() == '' && !empty($objet->attributs)) {						$query_add = 'INSERT INTO '.$table.' (';						foreach ($objet->attributs as $attribut)	{	            $query_add.= strtoupper($attribut).',';			}			$query_add = substr($query_add,0,-1);			$query_add.=') VALUES (';						foreach ($objet->attributs as $attribut)	{	            $query_add.= ':'.strtolower($attribut).',';			}			$query_add = substr($query_add,0,-1);			$query_add.=')';						$query = $this->db->prepare($query_add);						foreach ($objet->attributs as $attribut)	{				$attributget = 'get'.ucfirst($attribut);				$query->bindvalue(':'.strtolower($attribut), $objet->$attributget());			}						if ($query->execute()) {				// Log de la requête pour le mode Dev				if (isset($_SESSION['devmode']) && $_SESSION['devmode']) { $_SESSION['pdoq'][get_class($this)][] = $query->queryString; }				$objet->$setter($this->db->lastInsertId());						return $objet->$getter();			}					} else if ($objet->$getter() != '' && !empty($objet->attributs)) {							$query_upd = 'UPDATE '.$table.' SET ';						foreach($objet->attributs as $attribut) {	            $query_upd.= strtoupper($attribut).' = :'.strtolower($attribut).',';			}			$query_upd = substr($query_upd,0,-1);			$query_upd .= ' WHERE '.$champClef.' = '.$objet->$getter();							$query = $this->db->prepare($query_upd);						foreach($objet->attributs as $attribut) {				$attributget = 'get'.ucfirst($attribut);	            $query->bindvalue(':'.strtolower($attribut), $objet->$attributget());			}						try	{				$query->execute();				// Log de la requête pour le mode Dev				if (isset($_SESSION['devmode']) && $_SESSION['devmode']) { $_SESSION['pdoq'][get_class($this)][] = $query->queryString; }				return true;			} catch(PDOExeption $e) {return false;}		}				return false;			} // FIN méthode	// Vérifie si un origine existe déjà avec ce code	public function checkExisteDeja($code, $id_exclu = 0) {		$query_check = 'SELECT COUNT(*) AS nb FROM `pe_origines` WHERE (LOWER(`code`) = :code )';		$query_check.= (int)$id_exclu > 0 ? ' AND `id` != ' . (int)$id_exclu : '';		$query = $this->db->prepare($query_check);		$query->bindValue(':code', trim(strtolower($code)));		$query->execute();		// Log de la requête pour le mode Dev		if (isset($_SESSION['devmode']) && $_SESSION['devmode']) {			$_SESSION['pdoq'][get_class($this)][] = ['q' => $query->queryString, 'v' => ':code = "'.$code.'" '];		}		$donnee = $query->fetchAll(PDO::FETCH_ASSOC);		if ($donnee && isset($donnee[0]) && isset($donnee[0]['nb']) && intval($donnee[0]['nb']) > 0) {			return true;		}		return false;	} // FIN méthode} // FIN classe