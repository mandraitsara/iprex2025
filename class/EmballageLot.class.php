<?php/*   _|_|_|  _|_|_|      _|_| _|        _|    _|  _|    _|  CBO FrameWork _|        _|_|_|    _|    _|  (c) 2018 Cédric Bouillon _|        _|    _|  _|    _|   _|_|_|  _|_|_|      _|_|--------------------------------------------------------Objet Emballage------------------------------------------------------*/class EmballageLot {	protected	$id,				$id_famille,				$id_fournisseur,				$numlot_frs,				$nspe,			// NSPE = Numéro de Série Profil Export  					~~~~ déprécié ~~~~				$supprime,				$nom_frs,				$nom_famille,				$encours,				$stock_initial,				$stock_actuel,				$id_precedent,	// ID du lot par défaut précédent				$date_rcp,		// Date de réception des rouleaux				$date_upd,		// Date de changement de rouleau par défaut				$date_out,		// Date de sortie du lot d'emballage				$defectueux,	// ARRAY d'objets				$consomme,		// Si le lot est vide (plus de rouleaux, stock a zéro)				$type_froid,				$qte_prod,		// Quantité récupérée pour une op de prod (lot ou froid)  	~~~~ déprécié ~~~~				$stock,			// Dernier stock en date (stock actuel)						~~~~ déprécié ~~~~				$stock_logs; 	// Array des modifs sur le stock (objets EmballageStock)	~~~~ déprécié ~~~~	public		$attributs = array();	public function __construct(array $donnees)	{		$this->hydrate($donnees);	}	public function hydrate(array $donnees)	{		foreach ($donnees as $key => $value) {			$method = 'set'.ucfirst(strtolower($key));			if (method_exists($this,$method)) {				$this->$method($value);			}		}		$this->attributs = array();	}	/*##### GETTERS #####*/	public function getId() {		return $this->id;	}	public function getId_famille() {		return $this->id_famille;	}	public function getId_fournisseur() {		return $this->id_fournisseur;	}	public function getNumlot_frs() {		return $this->numlot_frs;	}	public function getNspe() {		return $this->nspe;	}	public function getSupprime() {		return $this->supprime;	}	public function getNom_frs() {		return $this->nom_frs;	}	public function getNom_famille() {		return $this->nom_famille;	}	public function getStock() {		return $this->stock;	}	public function getConsomme() {		return $this->consomme;	}	public function getStock_logs() {		return $this->stock_logs;	}	public function getEncours() {		return $this->encours;	}	public function getId_precedent() {		return $this->id_precedent;	}	public function getDate_upd() {		return $this->date_upd;	}	public function getDate_rcp() {		return $this->date_rcp;	}	public function getDate_out() {		return $this->date_out;	}	public function getQte_prod() {		return $this->qte_prod;	}	public function getDefectueux() {		return $this->defectueux;	}	public function getType_froid() {		return $this->type_froid;	}	public function getStock_initial() {		return $this->stock_initial;	}	public function getStock_actuel() {		return $this->stock_actuel;	}	/*##### SETTERS #####*/	public function setId($valeur) {		$this->id = (int)$valeur;	}	public function setId_famille($valeur) {		$this->id_famille = (int)$valeur;		Outils::setAttributs('id_famille',$this);	}	public function setId_fournisseur($valeur) {		$this->id_fournisseur = (int)$valeur;		Outils::setAttributs('id_fournisseur',$this);	}	public function setNumlot_frs($valeur) {		$this->numlot_frs = (string)$valeur;		Outils::setAttributs('numlot_frs',$this);	}	public function setNspe($valeur) {		$this->nspe = (string)$valeur;		Outils::setAttributs('nspe',$this);	}	public function setSupprime($valeur) {		$this->supprime = (int)$valeur;		Outils::setAttributs('supprime',$this);	}	public function setConsomme($valeur) {		$this->consomme = (int)$valeur;		Outils::setAttributs('consomme',$this);	}	public function setEncours($valeur) {		$this->encours = (int)$valeur;		Outils::setAttributs('encours',$this);	}	public function setId_precedent($valeur) {		$this->id_precedent = (int)$valeur;		//Outils::setAttributs('id_precedent',$this);	}	public function setDate_upd($valeur) {		$this->date_upd = (string)$valeur;		//Outils::setAttributs('date_upd',$this);	}	public function setDate_rcp($valeur) {		$this->date_rcp = (string)$valeur;		Outils::setAttributs('date_rcp',$this);	}	public function setDate_out($valeur) {		$this->date_out = (string)$valeur;		Outils::setAttributs('date_out',$this);	}	public function setDefectueux($valeur) {		$this->defectueux = $valeur;		//Outils::setAttributs('defectueux',$this);	}	public function setNom_frs($valeur) {		$this->nom_frs = (string)$valeur;	}	public function setNom_famille($valeur) {		$this->nom_famille = (string)$valeur;	}	public function setStock($valeur) {		$this->stock = (int)$valeur;	}	public function setStock_logs($valeur) {		$this->stock_logs = $valeur;	}	public function setQte_prod($valeur) {		$this->qte_prod = (int)$valeur;	}	public function setType_froid($valeur) {		$this->type_froid = (string)$valeur;	}	public function setStock_initial($valeur) {		$this->stock_initial = (int)$valeur;		Outils::setAttributs('stock_initial',$this);	}	public function setStock_actuel($valeur) {		$this->stock_actuel= (int)$valeur;		Outils::setAttributs('stock_actuel',$this);	}	/*##### MTHODES PROPRES A LA CLASSE #####*/	public function isSupprime() {		return intval($this->supprime) == 1;	}	public function getTotalDefectueux() {		$nb = 0;		foreach ($this->defectueux as $def) {			$nb = $nb + $def->getQte();		}		return $nb;	}} // FIN classe