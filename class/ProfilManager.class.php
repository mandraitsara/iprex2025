<?php/*   _|_|_|  _|_|_|      _|_| _|        _|    _|  _|    _|  CBO FrameWork _|        _|_|_|    _|    _|  (c) 2018 Cédric Bouillon _|        _|    _|  _|    _|   _|_|_|  _|_|_|      _|_|--------------------------------------------------------Manager de l'objet Profil------------------------------------------------------*/class ProfilManager {	protected    $db, $nb_results;	public function __construct($db) {		$this->setDb($db);	}	/* ----------------- GETTERS ----------------- */	public function getNb_results() {		return $this->nb_results;	}	/* ----------------- SETTERS ----------------- */	public function setDb(PDO $db) {		$this->db = $db;	}	/* ----------------- METHODES ----------------- */	// Retourne la liste des Profil	public function getListeProfils() {		$query_liste = "SELECT `id`, `nom`, `fa`, `is_nett`, `is_resp`, `is_gescom`, `is_admin`, `is_dev`, `niveau` FROM `pe_profils` ORDER BY `niveau` ASC";		$query = $this->db->prepare($query_liste);		$query->execute();		$liste = [];		foreach ($query->fetchAll(PDO::FETCH_ASSOC) as $donnee) {			$liste[] = new Profil($donnee);		}		return $liste;	} // FIN liste des Profil	// Retourne un Profil	public function getProfil($id) {		$query_object = "SELECT `id`, `nom`, `fa`, `is_nett`, `is_resp`, `is_gescom`, `is_admin`, `is_dev`, `niveau`                FROM `pe_profils` WHERE `id` = " . (int)$id;		$query = $this->db->prepare($query_object);		if ($query->execute()) {			$donnee = $query->fetchAll(PDO::FETCH_ASSOC);			return $donnee && isset($donnee[0]) ? new Profil($donnee[0]) : false ;		} else {			return false;		}	} // FIN get Profil	// Enregistre & sauvegarde (Méthode Save)	public function saveProfil(Profil $objet) {		$table      = 'pe_profils'; // Nom de la table		$champClef  = 'id'; // Nom du champ clef		// FIN Configuration		$getter     = 'get'.ucfirst(strtolower($champClef));		$setter     = 'set'.ucfirst(strtolower($champClef));		if ($objet->$getter() == '' && !empty($objet->attributs)) {			$query_add = 'INSERT INTO `'.$table.'` (';			foreach ($objet->attributs as $attribut)	{				$query_add.= '`'.$attribut.'`,';			}			$query_add = substr($query_add,0,-1);			$query_add.=') VALUES (';			foreach ($objet->attributs as $attribut)	{				$query_add.= ':'.strtolower($attribut).' ,';			}			$query_add = substr($query_add,0,-1);			$query_add.=')';			$query = $this->db->prepare($query_add);			$query_log = $query_add;			foreach ($objet->attributs as $attribut)	{				$attributget = 'get'.ucfirst($attribut);				$query->bindvalue(':'.strtolower($attribut), $objet->$attributget());				$dq = is_numeric($objet->$attributget()) ? '' : '"';				$query_log = str_replace(':'.strtolower($attribut).' ', $dq.$objet->$attributget().$dq.' ', $query_log);			}			if ($query->execute()) {				$objet->$setter($this->db->lastInsertId());				Outils::saveLog($query_log);				return $objet->$getter();			}		} else if ($objet->$getter() != '' && !empty($objet->attributs)) {			$query_upd = 'UPDATE `'.$table.'` SET ';			foreach($objet->attributs as $attribut) {				$query_upd.= '`'.$attribut.'` = :'.strtolower($attribut).' ,';			}			$query_upd = substr($query_upd,0,-1);			$query_upd .= ' WHERE `'.$champClef.'` = '.$objet->$getter();			$query = $this->db->prepare($query_upd);			$query_log = $query_upd;			foreach($objet->attributs as $attribut) {				$attributget = 'get'.ucfirst($attribut);				$query->bindvalue(':'.strtolower($attribut), $objet->$attributget());				$dq = is_numeric($objet->$attributget()) ? '' : '"';				$query_log = str_replace(':'.strtolower($attribut).' ', $dq.$objet->$attributget().$dq.' ', $query_log);			}			try	{				$query->execute();				Outils::saveLog($query_log);				return true;			} catch(PDOExeption $e) {return false;}		}		return false;	} // FIN méthode	// Retourne le nombre d'utilisateurs liés au profil	public function getNbUserProfil(Profil $profil) {		$query_nb = 'SELECT COUNT(*) AS nb FROM `pe_users` WHERE `profil_id` = :profil_id';		$query = $this->db->prepare($query_nb);		$query->bindValue(':profil_id', $profil->getId());		if ($query->execute()) {			$donnee = $query->fetchAll(PDO::FETCH_ASSOC);			return $donnee && isset($donnee[0]['nb']) ? $donnee[0]['nb'] : 0 ;		} else {			return false;		}	} // FIN méthode	// Supprime un profil	public function delProfil(Profil $profil) {		$query_del = 'DELETE FROM `pe_profils` WHERE `id` = :profil_id';		$query = $this->db->prepare($query_del);		$query->bindValue(':profil_id', $profil->getId());		Outils::saveLog($query_del);		return $query->execute();	} // FIN méthode	public function getIdProfilNettoyage() {		$query_nb = 'SELECT `id` FROM `pe_profils` WHERE `nom` LIKE "%nettoyage%"';		$query = $this->db->prepare($query_nb);		$query->execute();		$donnee = $query->fetch(PDO::FETCH_ASSOC);		return $donnee && isset($donnee['id']) ? intval($donnee['id']) : 0 ;	}} // FIN classe